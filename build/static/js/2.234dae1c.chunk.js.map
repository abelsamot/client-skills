{"version":3,"sources":["../node_modules/@noble/hashes/utils.js","../node_modules/@noble/hashes/_assert.js","../../src/rpc/JrpcClient.ts","../../src/rpc/solanaRpcMiddlewares.ts","../../src/providers/injectedProviders/base/baseInjectedProvider.ts","../../src/providers/injectedProviders/base/providerHandlers.ts","../../src/providers/injectedProviders/injectedProviderProxy.ts","../../src/providers/injectedProviders/phantom/phantomInjectedProvider.ts","../../src/providers/injectedProviders/slope/slopeInjectedProvider.ts","../../src/providers/injectedProviders/slope/providerHandlers.ts","../../src/providers/injectedProviders/solflare/solflareInjectedProvider.ts","../../src/providers/injectedProviders/solflare/providerHandlers.ts","../../src/providers/injectedProviders/sollet/solletInjectedProvider.ts","../../src/providers/injectedProviders/sollet/providerHandlers.ts","../../src/providers/injectedProviders/torus/providerHandlers.ts","../../src/providers/injectedProviders/torus/torusInjectedProvider.ts","../../src/providers/privateKeyProvider/solanaPrivateKeyUtils.ts","../../src/providers/privateKeyProvider/solanaPrivateKeyProvider.ts","../../src/solanaWallet.ts","../node_modules/@noble/hashes/_sha2.js","../node_modules/@noble/hashes/_u64.js","../../src/Layout.ts","../node_modules/@noble/ed25519/lib/esm/index.js","../../src/utils.ts","../../src/error.ts","../../src/struct.ts","../../src/structs/utilities.ts","../../src/structs/types.ts","../../src/structs/coercions.ts","../node_modules/@noble/secp256k1/lib/esm/index.js","../../src/utils/ed25519.ts","../../src/utils/to-buffer.ts","../../src/utils/borsh-schema.ts","../../src/publickey.ts","../../src/bpf-loader-deprecated.ts","../../src/transaction/constants.ts","../../src/transaction/expiry-custom-errors.ts","../../src/message/account-keys.ts","../../src/layout.ts","../../src/utils/shortvec-encoding.ts","../../src/utils/assert.ts","../../src/transaction/legacy.ts","../../src/message/compiled-keys.ts","../../src/message/legacy.ts","../../src/message/v0.ts","../../src/sysvar.ts","../../src/utils/send-and-confirm-transaction.ts","../../src/utils/sleep.ts","../../src/instruction.ts","../../src/fee-calculator.ts","../../src/utils/bigint.ts","../../src/nonce-account.ts","../../src/programs/system.ts","../../src/loader.ts","../../src/bpf-loader.ts","../../node_modules/fast-stable-stringify/index.js","../../src/epoch-schedule.ts","../../src/errors.ts","../../src/__forks__/browser/fetch-impl.ts","../../src/programs/address-lookup-table/state.ts","../../src/account-data.ts","../../src/utils/makeWebsocketUrl.ts","../../src/connection.ts","../../src/keypair.ts","../../src/programs/address-lookup-table/index.ts","../../src/programs/compute-budget.ts","../../src/programs/ed25519.ts","../../src/utils/secp256k1.ts","../../src/programs/secp256k1.ts","../../src/programs/stake.ts","../../src/programs/vote.ts","../../src/validator-info.ts","../../src/vote-account.ts","../node_modules/@noble/hashes/sha512.js","../node_modules/@noble/hashes/cryptoBrowser.js","../node_modules/@solana/web3.js/node_modules/bn.js/lib/bn.js","../node_modules/@solana/web3.js/node_modules/bs58/index.js","../node_modules/@solana/web3.js/node_modules/base-x/src/index.js","../node_modules/@noble/hashes/sha256.js","../node_modules/borsh/lib/index.js","../node_modules/borsh/node_modules/bn.js/lib/bn.js","../node_modules/borsh/node_modules/bs58/index.js","../node_modules/borsh/node_modules/base-x/src/index.js","../node_modules/text-encoding-utf-8/lib/encoding.lib.mjs","../node_modules/bigint-buffer/dist/browser.js","../node_modules/rpc-websockets/dist/index.browser.js","../node_modules/rpc-websockets/dist/lib/client/websocket.browser.js","../node_modules/rpc-websockets/dist/lib/client.js","../node_modules/jayson/lib/client/browser/index.js","../node_modules/jayson/lib/generateRequest.js","../node_modules/@noble/hashes/sha3.js","../node_modules/@noble/hashes/hmac.js","../node_modules/@web3auth/solana-provider/node_modules/bs58/index.js","../node_modules/@web3auth/solana-provider/node_modules/base-x/src/index.js"],"names":["Object","defineProperty","exports","value","randomBytes","wrapConstructorWithOpts","wrapConstructor","checkOpts","Hash","concatBytes","toBytes","utf8ToBytes","asyncLoop","nextTick","hexToBytes","bytesToHex","isLE","rotr","createView","u32","u8","crypto_1","require","arr","Uint8Array","buffer","byteOffset","byteLength","Uint32Array","Math","floor","DataView","word","shift","Error","hexes","Array","from","length","v","i","toString","padStart","uint8a","hex","TypeError","array","j","hexByte","slice","byte","Number","parseInt","isNaN","iters","tick","cb","ts","Date","now","diff","str","TextEncoder","encode","data","arrays","every","a","reduce","result","pad","set","this","_cloneInto","defaults","opts","undefined","obj","prototype","call","constructor","assign","hashConstructor","hashC","message","update","digest","tmp","outputLen","blockLen","create","hashCons","msg","bytesLength","crypto","web","getRandomValues","node","number","n","isSafeInteger","bool","b","bytes","lengths","includes","hash","exists","instance","checkFinished","destroyed","finished","output","out","min","assert","default","createChainIdMiddleware","chainId","req","res","next","end","method","createProviderConfigMiddleware","providerConfig","createConfigMiddleware","mergeMiddleware","createJsonRpcClient","rpcTarget","fetchMiddleware","createFetchMiddleware","networkMiddleware","_ref","getAccounts","createAsyncMiddleware","request","response","accounts","_ref2","requestAccounts","targetMethod","handler","createSolanaMiddleware","providerHandlers","signTransaction","signAndSendTransaction","signAllTransactions","signMessage","getPrivateKey","getSecretKey","createRequestAccountsMiddleware","createGetAccountsMiddleware","createGenericJRPCMiddleware","BaseInjectedProvider","config","state","chainConfig","chainNamespace","CHAIN_NAMESPACES","SOLANA","_","Promise","resolve","injectedProvider","engine","JRPCEngine","getProviderHandlers","solanaMiddleware","push","configMiddleware","injectedProviderProxy","getInjectedProviderProxy","provider","providerFromEngine","updateProviderEngineProxy","lookupNetwork","BaseProvider","getBaseProviderHandlers","publicKey","bs58","ethErrors","rpc","methodNotSupported","params","transaction","display","sigData","signature","_req$params","_req$params2","invalidParams","txRes","createInjectedProviderProxyMiddleware","_next","PhantomInjectedProvider","SlopeInjectedProxyProvider","getProviderEngineProxy","connect","txMessage","invalidRequest","serializeMessage","PublicKey","decode","addSignature","custom","code","conn","Connection","sendRawTransaction","serialize","allTxns","unsignedTx","signatures","getSlopeHandlers","bind","SolflareInjectedProvider","solflareProviderHandlers","getSolflareHandlers","SolletInjectedProvider","sign","getSolletHandlers","getTorusHandlers","_req$params3","sendTransaction","_req$params4","_req$params5","transactions","TorusInjectedProvider","handleInjectedProviderUpdate","setupEngine","connectedChainId","connectedHexChainId","isHexStrict","WalletInitializationError","rpcConnectionError","emit","on","configure","_objectSpread","setupProvider","privKey","keyPairGenerator","Keypair","fromSecretKey","Buffer","keyPair","toBase58","secretKey","partialSign","signedMsg","nacl","detached","_providerEngineProxy","sig","txns","_req$params6","tx","SolanaPrivateKeyProvider","privateKey","getChainSwitchMiddleware","getAccountMiddleware","getChainConfig","health","chainSwitchHandlers","addNewChainConfig","chainName","rpcUrls","blockExplorerUrls","nativeCurrency","addChain","ticker","symbol","tickerName","name","displayName","blockExplorer","switchSolanaChain","switchChain","_ref3","createChainSwitchMiddleware","accountHandlers","updatePrivatekey","updateAccount","_ref4","createAccountMiddleware","providerFactory","SolanaWallet","_defineProperty","signedTransaction","signedTransactions","args","SHA2","_assert_js_1","utils_js_1","padOffset","pos","view","len","take","subarray","process","dataView","roundClean","fill","setBigUint64","_32n","BigInt","_u32_max","wh","wl","h","l","setUint32","oview","get","forEach","digestInto","destroy","to","add","toBig","split","fromBig","U32_MASK64","le","lst","Ah","Al","Bh","Bl","u64","shrSH","s","shrSL","rotrSH","rotrSL","rotrBH","rotrBL","rotr32H","rotr32L","rotlSH","rotlSL","rotlBH","rotlBL","add3L","Cl","add3H","low","Ch","add4L","Dl","add4H","Dh","add5H","Eh","add5L","El","checkUint8Array","uint8ArrayToBuffer","buffer_1","Layout","span","property","isInteger","offset","RangeError","rv","values","nameWithProperty","lo","Class","layout","hasOwnProperty","layout_","boundConstructor_","makeDestinationObject","writable","ExternalLayout","GreedyCount","elementSpan","rem","src","OffsetLayout","UInt","UIntBE","readUIntLE","writeUIntLE","readUIntBE","writeUIntBE","Int","readIntLE","writeIntLE","IntBE","readIntBE","writeIntBE","V2E32","pow","divmodInt64","hi32","lo32","roundedInt64","NearUInt64","readUInt32LE","writeUInt32LE","NearUInt64BE","readUInt32BE","writeUInt32BE","NearInt64","readInt32LE","writeInt32LE","NearInt64BE","readInt32BE","writeInt32BE","Float","readFloatLE","writeFloatLE","FloatBE","readFloatBE","writeFloatBE","Double","readDoubleLE","writeDoubleLE","DoubleBE","readDoubleBE","writeDoubleBE","Sequence","elementLayout","count","isCount","idx","getSpan","elo","Structure","fields","decodePrefixes","isArray","acc","fd","e","fsp","dest","firstOffset","lastOffset","lastWrote","fv","UnionDiscriminator","UnionLayoutDiscriminator","Union","discr","defaultLayout","discriminator","replicate","usesPrefixDiscriminator","registry","boundGetSourceVariant","defaultGetSourceVariant","getSourceVariant","configGetSourceVariant","gsv","vlo","getVariant","tag","dlo","clo","contentOffset","variant","VariantLayout","vb","union","fromArray","fixBitwiseResult","BitStructure","msb","_packedSetValue","_packedGetValue","bits","bf","BitField","Boolean","container","totalBits","usedBits","sum","valueMask","start","wordMask","wordValue","Blob","srcBuffer","write","CString","String","srcb","copy","UTF8","maxSpan","Constant","_0n","_1n","_2n","CU_O","CURVE","freeze","d","P","Gx","Gy","POW_2_256","SQRT_M1","SQRT_AD_MINUS_ONE","INVSQRT_A_MINUS_D","ONE_MINUS_D_SQ","D_MINUS_ONE_SQ","ExtendedPoint","x","y","z","t","other","assertExtPoint","X1","Y1","Z1","X2","Y2","Z2","X1Z2","mod","X2Z1","Y1Z2","Y2Z1","A","B","C","D","x1y1","E","G","F","H","X3","Y3","T3","T1","T2","double","negate","W","windows","points","p","base","window","affinePoint","equals","BASE","Point","_WINDOW_SIZE","precomputes","pointPrecomputes","precomputeWindow","normalizeZ","ZERO","f","windowSize","mask","maxNumber","shiftBy","wbits","pr","cached","abs","scalar","wNAF","normalizeScalar","P0","multiplyUnsafe","invZ","invert","ax","ay","zz","legacyRist","toInv","nums","inverted","num","reduceRight","invertBatch","map","toAffine","toAffineBatch","fromAffine","assertRstPoint","RistrettoPoint","ep","u1","u2","u2sq","invsqrt","invertSqrt","D1","D2","zInv","edIsNegative","_x","_y","numberTo32BytesLE","toRawBytes","toHex","one","two","subtract","multiply","r0","r","Ns","c","uvRatio","Ns_D_is_sq","isValid","s_","Nt","s2","W0","W1","W2","W3","r1","bytes255ToNumberLE","ensureBytes","R1","calcElligatorRistrettoMap","r2","R2","emsg","b1","b2","equalBytes","u1_2","u2_2","I","Dx","Dy","WeakMap","delete","isTorsionFree","strict","normed","bytesToNumberLE","y2","u","isXOdd","isLastByteOdd","getExtendedPublicKey","point","Signature","assertValidity","fromHex","numberTo32BytesBE","reverse","_sha512Sync","MAX_255B","modulo","q","m","gcd","pow2","power","pow_2_252_3","_5n","_10n","_20n","_40n","_80n","b4","b5","b10","b20","b40","b80","b160","b240","b250","pow_p_5_8","v3","v7","vx2","root1","root2","useRoot1","useRoot2","noRoot","modlLE","expectedLength","max","adjustBytes25519","checkPrivateKey","key","getKeyFromHash","hashed","head","prefix","pointBytes","sha512s","utils","sha512","getExtendedPublicKeySync","prepareVerification","SB","pub","finishVerification","k","kA","sync","getPublicKey","R","verify","_setWindowSize","nodeCrypto","self","TORSION_SUBGROUP","hashToPrivateScalar","randomPrivateKey","subtle","createHash","precompute","sha512Sync","defineProperties","configurable","val","toFailures","run","StructError","failure","failures","rest","path","join","isObject","print","JSON","stringify","shiftIterator","input","done","toFailure","context","struct","branch","type","refinement","Symbol","iterator","options","coerce","ctx","coercer","schema","valid","validator","entries","Map","Set","refiner","Struct","props","is","validate","tuples","tuple","error","define","Element","boolean","literal","constant","description","never","nullable","optional","record","Key","Value","string","Elements","Never","keys","Structs","unknown","condition","_3n","_8n","beta","weistrass","x2","x3","USE_ENDOMORPHISM","ShaError","JacobianPoint","Z1Z1","Z2Z2","U1","U2","S1","S2","x1b","HH","HHH","V","splitScalarEndo","k1neg","k1","k2neg","k2","k1p","k2p","fake","f1p","f2p","iz1","iz2","iz3","scratch","isCompressed","numTo32bStr","hasEvenY","isValidFieldElement","left","Q","aP","bQ","isShort","bytesToNumber","_6n","_11n","_22n","_23n","_44n","_88n","b3","b6","b9","b11","b22","b44","b88","b176","b220","b223","t1","t2","sqrtMod","isYOdd","header","fromCompressedHex","fromUncompressedHex","normalizePrivateKey","msgHash","recovery","truncateHash","normalizeSignature","rinv","multiplyAndAddUnsafe","sliceDER","parseDERInt","isWithinCurveOrder","HALF","hasHighS","toDERHex","sHex","numberToHexUnpadded","rHex","rLen","sLen","toDERRawBytes","toCompactHex","hexToNumber","rBytesLeft","parseDERSignature","fromDER","numTo32b","_sha256Sync","_hmacSha256Sync","divNearest","ENDO","a1","a2","POW_2_128","c1","c2","delta","HmacDrbg","counter","hmacSha256","seed","hmac","checkSync","hmacSync","incr","kmdToSig","kBytes","fromCompact","bits2int","bits2octets","z1","z2","int2octets","initSigArgs","extraEntropy","h1","seedArgs","finalizeSig","recSig","canonical","der","recovered","normalizeS","toCompactRawBytes","TAGGED_HASH_PREFIXES","isValidPrivateKey","_bigintTo32Bytes","_normalizePrivateKey","hashToPrivateKey","sha256","messages","importKey","ckey","createHmac","sha256Sync","hmacSha256Sync","taggedHash","tagP","charCodeAt","tagH","taggedHashSync","ed25519","generateKeypair","privateScalar","isOnCurve","toBuffer","isBuffer","properties","SOLANA_SCHEMA","deserialize","deserializeUnchecked","PUBLIC_KEY_LENGTH","uniquePublicKeyCounter","_bn","isPublicKeyData","decoded","BN","eq","toJSON","toArrayLike","zeroPad","alloc","fromPublicKey","programId","concat","publicKeyBytes","seeds","createProgramAddressSync","address","nonce","seedsWithNonce","err","findProgramAddressSync","pubkeyData","kind","PACKET_DATA_SIZE","TransactionExpiredBlockheightExceededError","TransactionExpiredTimeoutError","timeoutSeconds","toFixed","MessageAccountKeys","staticAccountKeys","accountKeysFromLookups","keySegments","readonly","index","keySegment","flat","compileInstructions","instructions","U8_MAX","keyIndexMap","findKeyIndex","keyIndex","instruction","programIdIndex","accountKeyIndexes","meta","pubkey","BufferLayout","rustString","rsl","_decode","_encode","rslShim","chars","getAlloc","getItemAlloc","item","field","decodeLength","size","elem","encodeLength","rem_len","TransactionStatus","CompiledKeys","payer","keyMetaMap","getMessageComponents","mapEntries","writableSigners","filter","isSigner","isWritable","readonlySigners","writableNonSigners","readonlyNonSigners","numRequiredSignatures","numReadonlySignedAccounts","numReadonlyUnsignedAccounts","extractTableLookup","lookupTable","drainKeysFoundInLookupTable","addresses","keyMeta","isInvoked","writableIndexes","drainedWritableKeys","readonlyIndexes","drainedReadonlyKeys","accountKey","lookupTableEntries","keyMetaFilter","lookupTableIndexes","drainedKeys","lookupTableIndex","findIndex","entry","getOrInsertDefault","payerKeyMeta","ix","accountMeta","Message","accountKeys","recentBlockhash","indexToProgramIds","account","getAccountKeys","isAccountSigner","isAccountWritable","numSignedAccounts","isProgramId","has","programIds","nonProgramIds","numKeys","keyCount","shortvec","keyIndicesCount","dataCount","keyIndices","dataLength","instructionCount","instructionBuffer","instructionBufferLength","signDataLayout","signData","compile","payerKey","byteArray","accountCount","dataSlice","MessageV0","compiledInstructions","addressTableLookups","lookup","numAccountKeysFromLookups","addressLookupTableAccounts","resolveAddressTableLookups","numStaticAccountKeys","tableLookup","tableAccount","find","encodedStaticAccountKeysLength","serializedInstructions","serializeInstructions","encodedInstructionsLength","serializedAddressTableLookups","serializeAddressTableLookups","encodedAddressTableLookupsLength","messageLayout","serializedMessage","serializedMessageLength","staticAccountKeysLength","instructionsLength","addressTableLookupsLength","serializedLength","encodedAccountKeyIndexesLength","encodedDataLength","encodedWritableIndexesLength","encodedReadonlyIndexesLength","compiledKeys","lookupTableAccounts","extractResult","addressTableLookup","maskedPrefix","splice","accountKeyIndexesLength","addressTableLookupsCount","writableIndexesLength","readonlyIndexesLength","DEFAULT_SIGNATURE","TransactionInstruction","Transaction","feePayer","lastValidBlockHeight","nonceInfo","_message","_json","blockhash","nonceInstruction","signers","items","compileMessage","console","warn","accountMetas","uniqueMetas","pubkeyString","uniqueIndex","sort","localeCompare","feePayerIndex","payerMeta","unshift","signedKeys","unsignedKeys","indexOf","invariant","_compile","pair","connection","getFeeForMessage","setSigners","seen","uniqueSigners","signer","_partialSign","_addSignature","sigpair","verifySignatures","_verifySignatures","requireAllSignatures","_serialize","signatureCount","transactionLength","wireTransaction","keyObj","populate","sigPubkeyPair","some","SYSVAR_CLOCK_PUBKEY","SYSVAR_RECENT_BLOCKHASHES_PUBKEY","SYSVAR_RENT_PUBKEY","SYSVAR_STAKE_HISTORY_PUBKEY","sendAndConfirmTransaction","sendOptions","skipPreflight","preflightCommitment","commitment","maxRetries","minContextSlot","confirmTransaction","status","sleep","ms","setTimeout","encodeData","allocLength","layoutFields","FeeCalculatorLayout","NonceAccountLayout","NONCE_ACCOUNT_LENGTH","NonceAccount","authorizedPubkey","feeCalculator","nonceAccount","blob","encodeDecode","bigIntLayout","toBigIntLE","bigInt","toBufferLE","SYSTEM_INSTRUCTION_LAYOUTS","Create","Assign","Transfer","CreateWithSeed","AdvanceNonceAccount","WithdrawNonceAccount","InitializeNonceAccount","AuthorizeNonceAccount","Allocate","AllocateWithSeed","AssignWithSeed","TransferWithSeed","UpgradeNonceAccount","SystemProgram","lamports","space","fromPubkey","newAccountPubkey","basePubkey","toPubkey","accountPubkey","createAccountWithSeed","noncePubkey","createAccount","initParams","nonceInitialize","authorized","instructionData","newAuthorizedPubkey","Loader","ceil","chunkSize","program","getMinimumBalanceForRentExemption","balanceNeeded","getAccountInfo","programInfo","executable","allocate","owner","transfer","dataLayout","bytesLengthPadding","_rpcEndpoint","all","objToString","objKeys","isArrayProp","propVal","toStr","isFinite","returnVal","trailingZeros","EpochSchedule","slotsPerEpoch","leaderScheduleSlotOffset","warmup","firstNormalEpoch","firstNormalSlot","getEpoch","slot","getEpochAndSlotIndex","epoch","getSlotsInEpoch","normalSlotIndex","normalEpochIndex","getFirstSlotInEpoch","getLastSlotInEpoch","SendTransactionError","logs","SolanaJSONRPCError","customMessage","globalThis","fetch","AddressLookupTableAccount","isActive","U64_MAX","deactivationSlot","accountData","typeIndex","decodeData","LookupTableMetaLayout","serializedAddressesLen","numSerializedAddresses","lastExtendedSlot","lastExtendedSlotStartIndex","lastExtendedStartIndex","authority","URL_RE","PublicKeyFromString","RawAccountDataResult","BufferFromRawAccountData","extractCommitmentFromConfig","commitmentOrConfig","createRpcResult","pick","jsonrpc","id","UnknownRpcResult","jsonRpcResult","jsonRpcResultAndContext","notificationResultAndContext","versionedMessageFromResponse","version","GetInflationGovernorResult","foundation","foundationTerm","initial","taper","terminal","GetInflationRewardResult","effectiveSlot","amount","postBalance","GetEpochInfoResult","slotIndex","slotsInEpoch","absoluteSlot","blockHeight","transactionCount","GetEpochScheduleResult","GetLeaderScheduleResult","TransactionErrorResult","SignatureStatusResult","SignatureReceivedResult","VersionResult","SimulatedTransactionResponseStruct","rentEpoch","unitsConsumed","returnData","BlockProductionResponseStruct","byIdentity","range","firstSlot","lastSlot","GetInflationGovernorRpcResult","GetEpochInfoRpcResult","GetEpochScheduleRpcResult","GetLeaderScheduleRpcResult","SlotRpcResult","GetSupplyRpcResult","total","circulating","nonCirculating","nonCirculatingAccounts","TokenAmountResult","uiAmount","decimals","uiAmountString","GetTokenLargestAccountsResult","GetTokenAccountsByOwner","ParsedAccountDataResult","parsed","GetParsedTokenAccountsByOwner","GetLargestAccountsRpcResult","AccountInfoResult","KeyedAccountInfoResult","ParsedOrRawAccountData","ParsedAccountInfoResult","KeyedParsedAccountInfoResult","StakeActivationResult","active","inactive","GetConfirmedSignaturesForAddress2RpcResult","memo","blockTime","GetSignaturesForAddressRpcResult","AccountNotificationResult","subscription","ProgramAccountInfoResult","ProgramAccountNotificationResult","SlotInfoResult","parent","root","SlotNotificationResult","SlotUpdateResult","timestamp","stats","numTransactionEntries","numSuccessfulTransactions","numFailedTransactions","maxTransactionsPerEntry","SlotUpdateNotificationResult","SignatureNotificationResult","RootNotificationResult","ContactInfoResult","gossip","tpu","VoteAccountInfoResult","votePubkey","nodePubkey","activatedStake","epochVoteAccount","epochCredits","commission","lastVote","rootSlot","GetVoteAccounts","current","delinquent","ConfirmationStatus","SignatureStatusResponse","confirmations","confirmationStatus","GetSignatureStatusesRpcResult","GetMinimumBalanceForRentExemptionRpcResult","AddressTableLookupStruct","ConfirmedTransactionResult","ParsedInstructionResult","RawInstructionResult","ParsedOrRawInstruction","ParsedConfirmedTransactionResult","source","TokenBalanceResult","accountIndex","mint","uiTokenAmount","LoadedAddressesResult","ConfirmedTransactionMetaResult","fee","innerInstructions","preBalances","postBalances","logMessages","preTokenBalances","postTokenBalances","loadedAddresses","computeUnitsConsumed","ParsedConfirmedTransactionMetaResult","TransactionVersionStruct","GetBlockRpcResult","previousBlockhash","parentSlot","rewards","rewardType","GetConfirmedBlockRpcResult","GetBlockSignaturesRpcResult","GetTransactionRpcResult","GetParsedTransactionRpcResult","GetRecentBlockhashAndContextRpcResult","lamportsPerSignature","GetLatestBlockhashRpcResult","GetRecentPerformanceSamplesRpcResult","numTransactions","numSlots","samplePeriodSecs","GetFeeCalculatorRpcResult","RequestAirdropRpcResult","SendTransactionRpcResult","LogsResult","LogsNotificationResult","COMMON_HTTP_HEADERS","endpoint","wsEndpoint","httpHeaders","disableRetryOnRateLimit","client","_commitment","_confirmTransactionInitialTimeout","_rpcWsEndpoint","_rpcClient","_rpcRequest","_rpcBatchRequest","_rpcWebSocket","_rpcWebSocketConnected","_rpcWebSocketHeartbeat","_rpcWebSocketIdleTimeout","_rpcWebSocketGeneration","_disableBlockhashCaching","_pollingBlockhash","_blockhashInfo","latestBlockhash","lastFetch","transactionSignatures","simulatedSignatures","_nextClientSubscriptionId","_subscriptionDisposeFunctionsByClientSubscriptionId","_subscriptionCallbacksByServerSubscriptionId","_subscriptionsByHash","_subscriptionsAutoDisposedByRpc","confirmTransactionInitialTimeout","putativeUrl","test","assertEndpointUrl","matches","match","hostish","portWithColon","protocol","startsWith","startPort","websocketPort","makeWebsocketUrl","url","customFetch","fetchWithMiddleware","fetchImpl","info","init","reject","modifiedInfo","modifiedInit","modifiedFetchArgs","clientBrowser","RpcClient","callback","body","agent","headers","too_many_requests_retries","waitTime","log","statusText","text","ok","createRpcClient","requests","batch","methodName","createRpcBatchRequest","RpcWebSocketClient","autoconnect","max_reconnects","Infinity","_wsOnOpen","_wsOnError","_wsOnClose","_wsOnAccountNotification","_wsOnProgramAccountNotification","_wsOnSlotNotification","_wsOnSlotUpdatesNotification","_wsOnSignatureNotification","_wsOnRootNotification","_wsOnLogsNotification","_buildArgs","unsafeRes","getBalanceAndContext","then","catch","configArg","tokenMintAddress","tokenAddress","ownerAddress","_args","arg","mintAddress","getAccountInfoAndContext","publicKeys","getMultipleAccountsInfoAndContext","configOrCommitment","encoding","configWithoutEncoding","strategy","rawSignature","decodedSignature","subscriptionCommitment","confirmationPromise","subscriptionId","onSignature","__type","PROCESSED","expiryPromise","timeoutMs","timeoutId","TIMED_OUT","checkBlockHeight","getBlockHeight","currentBlockHeight","BLOCKHEIGHT_EXCEEDED","race","outcome","clearTimeout","removeSignatureListener","startSlot","limit","getSignatureStatuses","getSupply","excludeNonCirculatingAccountsList","epochSchedule","wireMessage","getRecentBlockhashAndContext","getLatestBlockhashAndContext","rawConfig","_buildArgsAtLeastConfirmed","extra","block","endSlot","transactionDetails","getFirstAvailableBlock","firstAvailableBlock","getConfirmedBlockSignatures","until","getSlot","highestConfirmedRoot","before","getConfirmedSignaturesForAddress2","confirmedSignatureInfo","accountInfo","fromAccountData","getNonceAndContext","disableCache","timeSinceFetch","expired","_pollNewBlockhash","startTime","cachedLatestBlockhash","cachedBlockhash","getLatestBlockhash","MS_PER_SLOT","transactionOrMessage","configOrSigners","includeAccounts","encodedTransaction","originalTx","_blockhashWithExpiryBlockHeight","sigVerify","logTrace","traceIndent","signersOrOptions","rawTransaction","sendEncodedTransaction","setInterval","notify","_updateSubscriptions","clearInterval","close","activeWebSocketGeneration","isCurrentConnectionStillActive","callbacks","serverSubscriptionId","unsubscribeMethod","_handleServerNotification","callbackArgs","notification","_makeSubscription","subscriptionConfig","clientSubscriptionId","fastStableStringify","existingSubscription","onAccountChange","_unsubscribeClientSubscription","accountId","onProgramAccountChange","filters","onLogs","mentions","onSlotChange","onSlotUpdate","subscriptionName","dispose","override","_err","onSignatureWithOptions","onRootChange","keypair","_keypair","skipValidation","computedPublicKey","ii","LOOKUP_TABLE_INSTRUCTION_LAYOUTS","CreateLookupTable","bigintLayout","FreezeLookupTable","ExtendLookupTable","DeactivateLookupTable","CloseLookupTable","AddressLookupTableProgram","recentSlot","lookupTableAddress","bumpSeed","addr","recipient","COMPUTE_BUDGET_INSTRUCTION_LAYOUTS","RequestUnits","RequestHeapFrame","SetComputeUnitLimit","SetComputeUnitPrice","ComputeBudgetProgram","microLamports","ED25519_INSTRUCTION_LAYOUT","instructionIndex","publicKeyOffset","signatureOffset","messageDataOffset","numSignatures","padding","signatureInstructionIndex","publicKeyInstructionIndex","messageDataSize","messageInstructionIndex","Ed25519Program","createInstructionWithPublicKey","secp256k1","msgs","ecdsaSign","drbg","reseedSync","generateSync","publicKeyCreate","fromPrivateKey","SECP256K1_INSTRUCTION_LAYOUT","keccak_256","recoveryId","Secp256k1Program","createInstructionWithEthAddress","ethAddress","publicKeyToEthAddress","rawAddress","substr","ethAddressOffset","ethAddressInstructionIndex","pkey","messageHash","STAKE_CONFIG_ID","Lockup","unixTimestamp","custodian","STAKE_INSTRUCTION_LAYOUTS","Initialize","Authorize","Delegate","Split","Withdraw","Deactivate","Merge","AuthorizeWithSeed","StakeProgram","Staker","Withdrawer","stakePubkey","lockup","staker","withdrawer","initialize","stakeAuthorizationType","custodianPubkey","newAuthorized","authorityBase","authoritySeed","authorityOwner","splitStakePubkey","splitInstruction","sourceStakePubKey","VOTE_INSTRUCTION_LAYOUTS","InitializeAccount","VoteProgram","Voter","voteInit","authorizedVoter","authorizedWithdrawer","initializeAccount","voteAuthorizationType","currentAuthorityDerivedKeyBasePubkey","currentAuthorityDerivedKeyOwnerPubkey","currentAuthorityDerivedKeySeed","voteAuthorizeWithSeedArgs","authorizedWithdrawerPubkey","currentVoteAccountBalance","rentExemptMinimum","withdraw","website","details","keybaseUsername","sha384","sha512_256","SHA512","_sha2_js_1","_u64_js_1","SHA512_Kh","SHA512_Kl","SHA512_W_H","SHA512_W_L","Fh","Fl","Gh","Gl","Hh","Hl","getUint32","W15h","W15l","s0h","s0l","W2h","W2l","s1h","s1l","SUMl","SUMh","sigma1h","sigma1l","CHIh","CHIl","T1ll","T1h","T1l","sigma0h","sigma0l","MAJh","MAJl","All","SHA512_256","SHA384","module","inherits","ctor","superCtor","super_","TempCtor","endian","isBN","negative","words","red","_init","wordSize","parseHex4Bits","parseHexByte","lowerBound","parseBase","mul","move","right","cmp","_initNumber","_initArray","replace","_parseHex","_parseBase","toArray","w","off","_strip","limbLen","limbPow","imuln","_iaddn","_move","clone","_expand","_normSign","for","inspect","zeros","groupSizes","groupBases","carry","groupSize","groupBase","isZero","modrn","idivn","toNumber","ret","smallMulTo","ncarry","rword","maxJ","ArrayType","reqLength","allocUnsafe","_toArrayLikeLE","position","_toArrayLikeBE","clz32","_countBits","_zeroBits","bitLength","hi","zeroBits","toTwos","width","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","sub","comb10MulTo","mid","o","a0","al0","ah0","al1","ah1","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","bl1","bh1","bl2","bh2","bl3","bh3","bl4","bh4","bl5","bh5","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","FFTM","mulTo","makeRBT","N","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","rtwdf","cos","PI","itwdf","sin","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","mulp","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","isNegNum","muln","sqr","isqr","toBitArray","iushln","carryMask","newCarry","ishln","iushrn","hint","extended","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","qj","div","divmod","positive","divn","umod","divRound","dm","half","andln","modn","egcd","g","isEven","yp","xp","im","isOdd","jm","_invmp","x1","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","Red","toRed","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","minv","ireduce","rlen","imulK","strip","outLen","prev","mod3","nOne","lpow","inv","wnd","currentLen","mont","basex","_Buffer","ALPHABET","BASE_MAP","charAt","xc","LEADER","FACTOR","iFACTOR","decodeUnsafe","psz","zeroes","b256","it3","it4","vch","pbegin","pend","b58","it1","it2","repeat","Maj","SHA256_K","IV","SHA256_W","SHA256","W15","s0","s1","__createBinding","enumerable","__setModuleDefault","__decorate","decorators","target","desc","arguments","getOwnPropertyDescriptor","Reflect","decorate","__importStar","__esModule","__importDefault","BinaryReader","BinaryWriter","BorshError","baseDecode","baseEncode","bn_js_1","bs58_1","textDecoder","TextDecoder","fatal","INITIAL_LENGTH","fieldPath","originalMessage","fieldName","buf","maybeResize","writeUInt8","writeUInt16LE","writeBuffer","writeU32","fn","handlingRangeError","propertyKey","propertyDescriptor","originalMethod","apply","readUInt8","readUInt16LE","readBuffer","readU32","capitalizeFirstLetter","toUpperCase","serializeField","fieldType","writer","writeFixedArray","writeArray","writeU8","serializeStruct","addToFieldPath","borshSerialize","structSchema","deserializeField","reader","readFixedArray","readArray","readU8","deserializeStruct","classType","borshDeserialize","fieldValue","Writer","Reader","inRange","ToDictionary","Stream","tokens","endOfStream","read","prepend","token","pop","decoderError","opt_code_point","DEFAULT_ENCODING","toLowerCase","_streaming","_BOMseen","_decoder","_fatal","_ignoreBOM","_encoder","_options","UTF8Decoder","utf8_code_point","utf8_bytes_seen","utf8_bytes_needed","utf8_lower_boundary","utf8_upper_boundary","stream","bite","code_point","UTF8Encoder","temp","ArrayBuffer","input_stream","code_points","cp","fromCharCode","codePointsToString","opt_string","stringToCodePoints","reversed","toBigIntBE","toBufferBE","_interopRequireDefault","Client","_createClass2","_classCallCheck2","_inherits2","_possibleConstructorReturn2","_getPrototypeOf2","_websocket","_createSuper","Derived","hasNativeReflectConstruct","construct","sham","Proxy","valueOf","_isNativeReflectConstruct","Super","NewTarget","_CommonClient","_super","_ref$autoconnect","_ref$reconnect","reconnect","_ref$reconnect_interv","reconnect_interval","_ref$max_reconnects","generate_request_id","WebSocketBrowserImpl","_EventEmitter","protocols","_this","socket","WebSocket","onopen","onmessage","event","onerror","onclose","reason","optionsOrCallback","send","listener","addEventListener","EventEmitter","_regenerator","_asyncToGenerator2","_typeof2","_eventemitter","__rest","getOwnPropertySymbols","propertyIsEnumerable","CommonClient","webSocketFactory","_a","_a$autoconnect","_a$reconnect","_a$reconnect_interval","_a$max_reconnects","rest_options","queue","rpc_id","ready","current_reconnects","_connect","timeout","ws_opts","_this2","promise","_login","mark","_callee","resp","wrap","_context","sent","abrupt","stop","_listMethods","_callee2","_context2","_this3","_subscribe","_callee3","_context3","_x2","_unsubscribe","_callee4","_context4","_x3","_this4","parse","listeners","uuid","v4","generateRequest","ClientBrowser","callServer","reviver","replacer","generator","notificationIdNull","isBatch","hasCallback","_parseResponse","responseText","isError","shake256","shake128","keccak_512","keccak_384","keccak_224","sha3_512","sha3_384","sha3_256","sha3_224","Keccak","keccakP","SHA3_PI","SHA3_ROTL","_SHA3_IOTA","_7n","_256n","_0x71n","SHA3_IOTA_H","SHA3_IOTA_L","rotlH","rotlL","rounds","idx1","idx0","B0","B1","Th","Tl","curH","curL","suffix","enableXOF","posOut","state32","keccak","finish","bufferOut","writeInto","xofInto","gen","genShake","dkLen","HMAC","_key","iHash","oHash","getPrototypeOf"],"mappings":"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","file":"static/js/2.234dae1c.chunk.js","sourcesContent":["\"use strict\";\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.randomBytes = exports.wrapConstructorWithOpts = exports.wrapConstructor = exports.checkOpts = exports.Hash = exports.concatBytes = exports.toBytes = exports.utf8ToBytes = exports.asyncLoop = exports.nextTick = exports.hexToBytes = exports.bytesToHex = exports.isLE = exports.rotr = exports.createView = exports.u32 = exports.u8 = void 0;\n// The import here is via the package name. This is to ensure\n// that exports mapping/resolution does fall into place.\nconst crypto_1 = require(\"@noble/hashes/crypto\");\n// Cast array to different type\nconst u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexports.u8 = u8;\nconst u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\nexports.u32 = u32;\n// Cast array to view\nconst createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\nexports.createView = createView;\n// The rotate right (circular right shift) operation for uint32\nconst rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\nexports.rotr = rotr;\nexports.isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// There is almost no big endian hardware, but js typed arrays uses platform specific endianness.\n// So, just to be sure not to corrupt anything.\nif (!exports.isLE)\n    throw new Error('Non little-endian hardware is not supported');\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef]))\n */\nfunction bytesToHex(uint8a) {\n    // pre-caching improves the speed 6x\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nexports.bytesToHex = bytesToHex;\n/**\n * @example hexToBytes('deadbeef')\n */\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nexports.hexToBytes = hexToBytes;\n// There is no setImmediate in browser and setTimeout is slow. However, call to async function will return Promise\n// which will be fullfiled only on next scheduler queue processing step and this is exactly what we need.\nconst nextTick = async () => { };\nexports.nextTick = nextTick;\n// Returns control to thread each 'tick' ms to avoid blocking\nasync function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await (0, exports.nextTick)();\n        ts += diff;\n    }\n}\nexports.asyncLoop = asyncLoop;\nfunction utf8ToBytes(str) {\n    if (typeof str !== 'string') {\n        throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n    }\n    return new TextEncoder().encode(str);\n}\nexports.utf8ToBytes = utf8ToBytes;\nfunction toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!(data instanceof Uint8Array))\n        throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n    return data;\n}\nexports.toBytes = toBytes;\n/**\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\n * @example concatBytes(buf1, buf2)\n */\nfunction concatBytes(...arrays) {\n    if (!arrays.every((a) => a instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nexports.concatBytes = concatBytes;\n// For runtime check if class implements interface\nclass Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nexports.Hash = Hash;\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj) => Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\nfunction checkOpts(defaults, opts) {\n    if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\n        throw new TypeError('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexports.checkOpts = checkOpts;\nfunction wrapConstructor(hashConstructor) {\n    const hashC = (message) => hashConstructor().update(toBytes(message)).digest();\n    const tmp = hashConstructor();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashConstructor();\n    return hashC;\n}\nexports.wrapConstructor = wrapConstructor;\nfunction wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexports.wrapConstructorWithOpts = wrapConstructorWithOpts;\n/**\n * Secure PRNG\n */\nfunction randomBytes(bytesLength = 32) {\n    if (crypto_1.crypto.web) {\n        return crypto_1.crypto.web.getRandomValues(new Uint8Array(bytesLength));\n    }\n    else if (crypto_1.crypto.node) {\n        return new Uint8Array(crypto_1.crypto.node.randomBytes(bytesLength).buffer);\n    }\n    else {\n        throw new Error(\"The environment doesn't have randomBytes function\");\n    }\n}\nexports.randomBytes = randomBytes;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.output = exports.exists = exports.hash = exports.bytes = exports.bool = exports.number = void 0;\nfunction number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nexports.number = number;\nfunction bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`Expected boolean, not ${b}`);\n}\nexports.bool = bool;\nfunction bytes(b, ...lengths) {\n    if (!(b instanceof Uint8Array))\n        throw new TypeError('Expected Uint8Array');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new TypeError(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nexports.bytes = bytes;\nfunction hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nexports.hash = hash;\nfunction exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nexports.exists = exists;\nfunction output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nexports.output = output;\nconst assert = {\n    number,\n    bool,\n    bytes,\n    hash,\n    exists,\n    output,\n};\nexports.default = assert;\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SHA2 = void 0;\nconst _assert_js_1 = require(\"./_assert.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nclass SHA2 extends utils_js_1.Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = (0, utils_js_1.createView)(this.buffer);\n    }\n    update(data) {\n        _assert_js_1.default.exists(this);\n        const { view, buffer, blockLen } = this;\n        data = (0, utils_js_1.toBytes)(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = (0, utils_js_1.createView)(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        _assert_js_1.default.exists(this);\n        _assert_js_1.default.output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = (0, utils_js_1.createView)(out);\n        this.get().forEach((v, i) => oview.setUint32(4 * i, v, isLE));\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\nexports.SHA2 = SHA2;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.add = exports.toBig = exports.split = exports.fromBig = void 0;\nconst U32_MASK64 = BigInt(2 ** 32 - 1);\nconst _32n = BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nexports.fromBig = fromBig;\nfunction split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nexports.split = split;\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\nexports.toBig = toBig;\n// for Shift in [0, 32)\nconst shrSH = (h, l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (h, l) => l;\nconst rotr32L = (h, l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\n// Removing \"export\" has 5% perf penalty -_-\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\nexports.add = add;\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig: exports.toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexports.default = u64;\n",null,"/*! noble-ed25519 - MIT License (c) 2019 Paul Miller (paulmillr.com) */\nimport * as nodeCrypto from 'crypto';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst CU_O = BigInt('7237005577332262213973186563042994240857116359379907606001950938285454250989');\nconst CURVE = Object.freeze({\n    a: BigInt(-1),\n    d: BigInt('37095705934669439343138083508754565189542113879843219016388785533085940283555'),\n    P: BigInt('57896044618658097711785492504343953926634992332820282019728792003956564819949'),\n    l: CU_O,\n    n: CU_O,\n    h: BigInt(8),\n    Gx: BigInt('15112221349535400772501151409588531511454012693041857206046113283949847762202'),\n    Gy: BigInt('46316835694926478169428394003475163141307993866256225615783033603165251855960'),\n});\nexport { CURVE };\nconst POW_2_256 = BigInt('0x10000000000000000000000000000000000000000000000000000000000000000');\nconst SQRT_M1 = BigInt('19681161376707505956807079304988542015446066515923890162744021073123829784752');\nconst SQRT_D = BigInt('6853475219497561581579357271197624642482790079785650197046958215289687604742');\nconst SQRT_AD_MINUS_ONE = BigInt('25063068953384623474111414158702152701244531502492656460079210482610430750235');\nconst INVSQRT_A_MINUS_D = BigInt('54469307008909316920995813868745141605393597292927456921205312896311721017578');\nconst ONE_MINUS_D_SQ = BigInt('1159843021668779879193775521855586647937357759715417654439879720876111806838');\nconst D_MINUS_ONE_SQ = BigInt('40440834346308536858101042469323190826248399146238708352240133220865137265952');\nclass ExtendedPoint {\n    constructor(x, y, z, t) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.t = t;\n    }\n    static fromAffine(p) {\n        if (!(p instanceof Point)) {\n            throw new TypeError('ExtendedPoint#fromAffine: expected Point');\n        }\n        if (p.equals(Point.ZERO))\n            return ExtendedPoint.ZERO;\n        return new ExtendedPoint(p.x, p.y, _1n, mod(p.x * p.y));\n    }\n    static toAffineBatch(points) {\n        const toInv = invertBatch(points.map((p) => p.z));\n        return points.map((p, i) => p.toAffine(toInv[i]));\n    }\n    static normalizeZ(points) {\n        return this.toAffineBatch(points).map(this.fromAffine);\n    }\n    equals(other) {\n        assertExtPoint(other);\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        const X1Z2 = mod(X1 * Z2);\n        const X2Z1 = mod(X2 * Z1);\n        const Y1Z2 = mod(Y1 * Z2);\n        const Y2Z1 = mod(Y2 * Z1);\n        return X1Z2 === X2Z1 && Y1Z2 === Y2Z1;\n    }\n    negate() {\n        return new ExtendedPoint(mod(-this.x), this.y, this.z, mod(-this.t));\n    }\n    double() {\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { a } = CURVE;\n        const A = mod(X1 * X1);\n        const B = mod(Y1 * Y1);\n        const C = mod(_2n * mod(Z1 * Z1));\n        const D = mod(a * A);\n        const x1y1 = X1 + Y1;\n        const E = mod(mod(x1y1 * x1y1) - A - B);\n        const G = D + B;\n        const F = G - C;\n        const H = D - B;\n        const X3 = mod(E * F);\n        const Y3 = mod(G * H);\n        const T3 = mod(E * H);\n        const Z3 = mod(F * G);\n        return new ExtendedPoint(X3, Y3, Z3, T3);\n    }\n    add(other) {\n        assertExtPoint(other);\n        const { x: X1, y: Y1, z: Z1, t: T1 } = this;\n        const { x: X2, y: Y2, z: Z2, t: T2 } = other;\n        const A = mod((Y1 - X1) * (Y2 + X2));\n        const B = mod((Y1 + X1) * (Y2 - X2));\n        const F = mod(B - A);\n        if (F === _0n)\n            return this.double();\n        const C = mod(Z1 * _2n * T2);\n        const D = mod(T1 * _2n * Z2);\n        const E = D + C;\n        const G = B + A;\n        const H = D - C;\n        const X3 = mod(E * F);\n        const Y3 = mod(G * H);\n        const T3 = mod(E * H);\n        const Z3 = mod(F * G);\n        return new ExtendedPoint(X3, Y3, Z3, T3);\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    precomputeWindow(W) {\n        const windows = 1 + 256 / W;\n        const points = [];\n        let p = this;\n        let base = p;\n        for (let window = 0; window < windows; window++) {\n            base = p;\n            points.push(base);\n            for (let i = 1; i < 2 ** (W - 1); i++) {\n                base = base.add(p);\n                points.push(base);\n            }\n            p = base.double();\n        }\n        return points;\n    }\n    wNAF(n, affinePoint) {\n        if (!affinePoint && this.equals(ExtendedPoint.BASE))\n            affinePoint = Point.BASE;\n        const W = (affinePoint && affinePoint._WINDOW_SIZE) || 1;\n        if (256 % W) {\n            throw new Error('Point#wNAF: Invalid precomputation window, must be power of 2');\n        }\n        let precomputes = affinePoint && pointPrecomputes.get(affinePoint);\n        if (!precomputes) {\n            precomputes = this.precomputeWindow(W);\n            if (affinePoint && W !== 1) {\n                precomputes = ExtendedPoint.normalizeZ(precomputes);\n                pointPrecomputes.set(affinePoint, precomputes);\n            }\n        }\n        let p = ExtendedPoint.ZERO;\n        let f = ExtendedPoint.ZERO;\n        const windows = 1 + 256 / W;\n        const windowSize = 2 ** (W - 1);\n        const mask = BigInt(2 ** W - 1);\n        const maxNumber = 2 ** W;\n        const shiftBy = BigInt(W);\n        for (let window = 0; window < windows; window++) {\n            const offset = window * windowSize;\n            let wbits = Number(n & mask);\n            n >>= shiftBy;\n            if (wbits > windowSize) {\n                wbits -= maxNumber;\n                n += _1n;\n            }\n            if (wbits === 0) {\n                let pr = precomputes[offset];\n                if (window % 2)\n                    pr = pr.negate();\n                f = f.add(pr);\n            }\n            else {\n                let cached = precomputes[offset + Math.abs(wbits) - 1];\n                if (wbits < 0)\n                    cached = cached.negate();\n                p = p.add(cached);\n            }\n        }\n        return ExtendedPoint.normalizeZ([p, f])[0];\n    }\n    multiply(scalar, affinePoint) {\n        return this.wNAF(normalizeScalar(scalar, CURVE.l), affinePoint);\n    }\n    multiplyUnsafe(scalar) {\n        let n = normalizeScalar(scalar, CURVE.l, false);\n        const G = ExtendedPoint.BASE;\n        const P0 = ExtendedPoint.ZERO;\n        if (n === _0n)\n            return P0;\n        if (this.equals(P0) || n === _1n)\n            return this;\n        if (this.equals(G))\n            return this.wNAF(n);\n        let p = P0;\n        let d = this;\n        while (n > _0n) {\n            if (n & _1n)\n                p = p.add(d);\n            d = d.double();\n            n >>= _1n;\n        }\n        return p;\n    }\n    isSmallOrder() {\n        return this.multiplyUnsafe(CURVE.h).equals(ExtendedPoint.ZERO);\n    }\n    isTorsionFree() {\n        return this.multiplyUnsafe(CURVE.l).equals(ExtendedPoint.ZERO);\n    }\n    toAffine(invZ = invert(this.z)) {\n        const { x, y, z } = this;\n        const ax = mod(x * invZ);\n        const ay = mod(y * invZ);\n        const zz = mod(z * invZ);\n        if (zz !== _1n)\n            throw new Error('invZ was invalid');\n        return new Point(ax, ay);\n    }\n    fromRistrettoBytes() {\n        legacyRist();\n    }\n    toRistrettoBytes() {\n        legacyRist();\n    }\n    fromRistrettoHash() {\n        legacyRist();\n    }\n}\nExtendedPoint.BASE = new ExtendedPoint(CURVE.Gx, CURVE.Gy, _1n, mod(CURVE.Gx * CURVE.Gy));\nExtendedPoint.ZERO = new ExtendedPoint(_0n, _1n, _1n, _0n);\nfunction assertExtPoint(other) {\n    if (!(other instanceof ExtendedPoint))\n        throw new TypeError('ExtendedPoint expected');\n}\nfunction assertRstPoint(other) {\n    if (!(other instanceof RistrettoPoint))\n        throw new TypeError('RistrettoPoint expected');\n}\nfunction legacyRist() {\n    throw new Error('Legacy method: switch to RistrettoPoint');\n}\nclass RistrettoPoint {\n    constructor(ep) {\n        this.ep = ep;\n    }\n    static calcElligatorRistrettoMap(r0) {\n        const { d } = CURVE;\n        const r = mod(SQRT_M1 * r0 * r0);\n        const Ns = mod((r + _1n) * ONE_MINUS_D_SQ);\n        let c = BigInt(-1);\n        const D = mod((c - d * r) * mod(r + d));\n        let { isValid: Ns_D_is_sq, value: s } = uvRatio(Ns, D);\n        let s_ = mod(s * r0);\n        if (!edIsNegative(s_))\n            s_ = mod(-s_);\n        if (!Ns_D_is_sq)\n            s = s_;\n        if (!Ns_D_is_sq)\n            c = r;\n        const Nt = mod(c * (r - _1n) * D_MINUS_ONE_SQ - D);\n        const s2 = s * s;\n        const W0 = mod((s + s) * D);\n        const W1 = mod(Nt * SQRT_AD_MINUS_ONE);\n        const W2 = mod(_1n - s2);\n        const W3 = mod(_1n + s2);\n        return new ExtendedPoint(mod(W0 * W3), mod(W2 * W1), mod(W1 * W3), mod(W0 * W2));\n    }\n    static hashToCurve(hex) {\n        hex = ensureBytes(hex, 64);\n        const r1 = bytes255ToNumberLE(hex.slice(0, 32));\n        const R1 = this.calcElligatorRistrettoMap(r1);\n        const r2 = bytes255ToNumberLE(hex.slice(32, 64));\n        const R2 = this.calcElligatorRistrettoMap(r2);\n        return new RistrettoPoint(R1.add(R2));\n    }\n    static fromHex(hex) {\n        hex = ensureBytes(hex, 32);\n        const { a, d } = CURVE;\n        const emsg = 'RistrettoPoint.fromHex: the hex is not valid encoding of RistrettoPoint';\n        const s = bytes255ToNumberLE(hex);\n        if (!equalBytes(numberTo32BytesLE(s), hex) || edIsNegative(s))\n            throw new Error(emsg);\n        const s2 = mod(s * s);\n        const u1 = mod(_1n + a * s2);\n        const u2 = mod(_1n - a * s2);\n        const u1_2 = mod(u1 * u1);\n        const u2_2 = mod(u2 * u2);\n        const v = mod(a * d * u1_2 - u2_2);\n        const { isValid, value: I } = invertSqrt(mod(v * u2_2));\n        const Dx = mod(I * u2);\n        const Dy = mod(I * Dx * v);\n        let x = mod((s + s) * Dx);\n        if (edIsNegative(x))\n            x = mod(-x);\n        const y = mod(u1 * Dy);\n        const t = mod(x * y);\n        if (!isValid || edIsNegative(t) || y === _0n)\n            throw new Error(emsg);\n        return new RistrettoPoint(new ExtendedPoint(x, y, _1n, t));\n    }\n    toRawBytes() {\n        let { x, y, z, t } = this.ep;\n        const u1 = mod(mod(z + y) * mod(z - y));\n        const u2 = mod(x * y);\n        const u2sq = mod(u2 * u2);\n        const { value: invsqrt } = invertSqrt(mod(u1 * u2sq));\n        const D1 = mod(invsqrt * u1);\n        const D2 = mod(invsqrt * u2);\n        const zInv = mod(D1 * D2 * t);\n        let D;\n        if (edIsNegative(t * zInv)) {\n            let _x = mod(y * SQRT_M1);\n            let _y = mod(x * SQRT_M1);\n            x = _x;\n            y = _y;\n            D = mod(D1 * INVSQRT_A_MINUS_D);\n        }\n        else {\n            D = D2;\n        }\n        if (edIsNegative(x * zInv))\n            y = mod(-y);\n        let s = mod((z - y) * D);\n        if (edIsNegative(s))\n            s = mod(-s);\n        return numberTo32BytesLE(s);\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n    toString() {\n        return this.toHex();\n    }\n    equals(other) {\n        assertRstPoint(other);\n        const a = this.ep;\n        const b = other.ep;\n        const one = mod(a.x * b.y) === mod(a.y * b.x);\n        const two = mod(a.y * b.y) === mod(a.x * b.x);\n        return one || two;\n    }\n    add(other) {\n        assertRstPoint(other);\n        return new RistrettoPoint(this.ep.add(other.ep));\n    }\n    subtract(other) {\n        assertRstPoint(other);\n        return new RistrettoPoint(this.ep.subtract(other.ep));\n    }\n    multiply(scalar) {\n        return new RistrettoPoint(this.ep.multiply(scalar));\n    }\n    multiplyUnsafe(scalar) {\n        return new RistrettoPoint(this.ep.multiplyUnsafe(scalar));\n    }\n}\nRistrettoPoint.BASE = new RistrettoPoint(ExtendedPoint.BASE);\nRistrettoPoint.ZERO = new RistrettoPoint(ExtendedPoint.ZERO);\nconst pointPrecomputes = new WeakMap();\nclass Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    _setWindowSize(windowSize) {\n        this._WINDOW_SIZE = windowSize;\n        pointPrecomputes.delete(this);\n    }\n    static fromHex(hex, strict = true) {\n        const { d, P } = CURVE;\n        hex = ensureBytes(hex, 32);\n        const normed = hex.slice();\n        normed[31] = hex[31] & ~0x80;\n        const y = bytesToNumberLE(normed);\n        if (strict && y >= P)\n            throw new Error('Expected 0 < hex < P');\n        if (!strict && y >= POW_2_256)\n            throw new Error('Expected 0 < hex < 2**256');\n        const y2 = mod(y * y);\n        const u = mod(y2 - _1n);\n        const v = mod(d * y2 + _1n);\n        let { isValid, value: x } = uvRatio(u, v);\n        if (!isValid)\n            throw new Error('Point.fromHex: invalid y coordinate');\n        const isXOdd = (x & _1n) === _1n;\n        const isLastByteOdd = (hex[31] & 0x80) !== 0;\n        if (isLastByteOdd !== isXOdd) {\n            x = mod(-x);\n        }\n        return new Point(x, y);\n    }\n    static async fromPrivateKey(privateKey) {\n        return (await getExtendedPublicKey(privateKey)).point;\n    }\n    toRawBytes() {\n        const bytes = numberTo32BytesLE(this.y);\n        bytes[31] |= this.x & _1n ? 0x80 : 0;\n        return bytes;\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n    toX25519() {\n        const { y } = this;\n        const u = mod((_1n + y) * invert(_1n - y));\n        return numberTo32BytesLE(u);\n    }\n    isTorsionFree() {\n        return ExtendedPoint.fromAffine(this).isTorsionFree();\n    }\n    equals(other) {\n        return this.x === other.x && this.y === other.y;\n    }\n    negate() {\n        return new Point(mod(-this.x), this.y);\n    }\n    add(other) {\n        return ExtendedPoint.fromAffine(this).add(ExtendedPoint.fromAffine(other)).toAffine();\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiply(scalar) {\n        return ExtendedPoint.fromAffine(this).multiply(scalar, this).toAffine();\n    }\n}\nPoint.BASE = new Point(CURVE.Gx, CURVE.Gy);\nPoint.ZERO = new Point(_0n, _1n);\nclass Signature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex, 64);\n        const r = Point.fromHex(bytes.slice(0, 32), false);\n        const s = bytesToNumberLE(bytes.slice(32, 64));\n        return new Signature(r, s);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!(r instanceof Point))\n            throw new Error('Expected Point instance');\n        normalizeScalar(s, CURVE.l, false);\n        return this;\n    }\n    toRawBytes() {\n        const u8 = new Uint8Array(64);\n        u8.set(this.r.toRawBytes());\n        u8.set(numberTo32BytesLE(this.s), 32);\n        return u8;\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n}\nexport { ExtendedPoint, RistrettoPoint, Point, Signature };\nfunction concatBytes(...arrays) {\n    if (!arrays.every((a) => a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array list');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nfunction numberTo32BytesBE(num) {\n    const length = 32;\n    const hex = num.toString(16).padStart(length * 2, '0');\n    return hexToBytes(hex);\n}\nfunction numberTo32BytesLE(num) {\n    return numberTo32BytesBE(num).reverse();\n}\nfunction edIsNegative(num) {\n    return (mod(num) & _1n) === _1n;\n}\nfunction bytesToNumberLE(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    return BigInt('0x' + bytesToHex(Uint8Array.from(uint8a).reverse()));\n}\nconst MAX_255B = BigInt('0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\nfunction bytes255ToNumberLE(bytes) {\n    return mod(bytesToNumberLE(bytes) & MAX_255B);\n}\nfunction mod(a, b = CURVE.P) {\n    const res = a % b;\n    return res >= _0n ? res : b + res;\n}\nfunction invert(number, modulo = CURVE.P) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    let a = mod(number, modulo);\n    let b = modulo;\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nfunction invertBatch(nums, p = CURVE.P) {\n    const tmp = new Array(nums.length);\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        tmp[i] = acc;\n        return mod(acc * num, p);\n    }, _1n);\n    const inverted = invert(lastMultiplied, p);\n    nums.reduceRight((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        tmp[i] = mod(acc * tmp[i], p);\n        return mod(acc * num, p);\n    }, inverted);\n    return tmp;\n}\nfunction pow2(x, power) {\n    const { P } = CURVE;\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= P;\n    }\n    return res;\n}\nfunction pow_2_252_3(x) {\n    const { P } = CURVE;\n    const _5n = BigInt(5);\n    const _10n = BigInt(10);\n    const _20n = BigInt(20);\n    const _40n = BigInt(40);\n    const _80n = BigInt(80);\n    const x2 = (x * x) % P;\n    const b2 = (x2 * x) % P;\n    const b4 = (pow2(b2, _2n) * b2) % P;\n    const b5 = (pow2(b4, _1n) * x) % P;\n    const b10 = (pow2(b5, _5n) * b5) % P;\n    const b20 = (pow2(b10, _10n) * b10) % P;\n    const b40 = (pow2(b20, _20n) * b20) % P;\n    const b80 = (pow2(b40, _40n) * b40) % P;\n    const b160 = (pow2(b80, _80n) * b80) % P;\n    const b240 = (pow2(b160, _80n) * b80) % P;\n    const b250 = (pow2(b240, _10n) * b10) % P;\n    const pow_p_5_8 = (pow2(b250, _2n) * x) % P;\n    return { pow_p_5_8, b2 };\n}\nfunction uvRatio(u, v) {\n    const v3 = mod(v * v * v);\n    const v7 = mod(v3 * v3 * v);\n    const pow = pow_2_252_3(u * v7).pow_p_5_8;\n    let x = mod(u * v3 * pow);\n    const vx2 = mod(v * x * x);\n    const root1 = x;\n    const root2 = mod(x * SQRT_M1);\n    const useRoot1 = vx2 === u;\n    const useRoot2 = vx2 === mod(-u);\n    const noRoot = vx2 === mod(-u * SQRT_M1);\n    if (useRoot1)\n        x = root1;\n    if (useRoot2 || noRoot)\n        x = root2;\n    if (edIsNegative(x))\n        x = mod(-x);\n    return { isValid: useRoot1 || useRoot2, value: x };\n}\nfunction invertSqrt(number) {\n    return uvRatio(_1n, number);\n}\nfunction modlLE(hash) {\n    return mod(bytesToNumberLE(hash), CURVE.l);\n}\nfunction equalBytes(b1, b2) {\n    if (b1.length !== b2.length) {\n        return false;\n    }\n    for (let i = 0; i < b1.length; i++) {\n        if (b1[i] !== b2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction ensureBytes(hex, expectedLength) {\n    const bytes = hex instanceof Uint8Array ? Uint8Array.from(hex) : hexToBytes(hex);\n    if (typeof expectedLength === 'number' && bytes.length !== expectedLength)\n        throw new Error(`Expected ${expectedLength} bytes`);\n    return bytes;\n}\nfunction normalizeScalar(num, max, strict = true) {\n    if (!max)\n        throw new TypeError('Specify max value');\n    if (typeof num === 'number' && Number.isSafeInteger(num))\n        num = BigInt(num);\n    if (typeof num === 'bigint' && num < max) {\n        if (strict) {\n            if (_0n < num)\n                return num;\n        }\n        else {\n            if (_0n <= num)\n                return num;\n        }\n    }\n    throw new TypeError('Expected valid scalar: 0 < scalar < max');\n}\nfunction adjustBytes25519(bytes) {\n    bytes[0] &= 248;\n    bytes[31] &= 127;\n    bytes[31] |= 64;\n    return bytes;\n}\nfunction decodeScalar25519(n) {\n    return bytesToNumberLE(adjustBytes25519(ensureBytes(n, 32)));\n}\nfunction checkPrivateKey(key) {\n    key =\n        typeof key === 'bigint' || typeof key === 'number'\n            ? numberTo32BytesBE(normalizeScalar(key, POW_2_256))\n            : ensureBytes(key);\n    if (key.length !== 32)\n        throw new Error(`Expected 32 bytes`);\n    return key;\n}\nfunction getKeyFromHash(hashed) {\n    const head = adjustBytes25519(hashed.slice(0, 32));\n    const prefix = hashed.slice(32, 64);\n    const scalar = modlLE(head);\n    const point = Point.BASE.multiply(scalar);\n    const pointBytes = point.toRawBytes();\n    return { head, prefix, scalar, point, pointBytes };\n}\nlet _sha512Sync;\nfunction sha512s(...m) {\n    if (typeof _sha512Sync !== 'function')\n        throw new Error('utils.sha512Sync must be set to use sync methods');\n    return _sha512Sync(...m);\n}\nasync function getExtendedPublicKey(key) {\n    return getKeyFromHash(await utils.sha512(checkPrivateKey(key)));\n}\nfunction getExtendedPublicKeySync(key) {\n    return getKeyFromHash(sha512s(checkPrivateKey(key)));\n}\nexport async function getPublicKey(privateKey) {\n    return (await getExtendedPublicKey(privateKey)).pointBytes;\n}\nfunction getPublicKeySync(privateKey) {\n    return getExtendedPublicKeySync(privateKey).pointBytes;\n}\nexport async function sign(message, privateKey) {\n    message = ensureBytes(message);\n    const { prefix, scalar, pointBytes } = await getExtendedPublicKey(privateKey);\n    const r = modlLE(await utils.sha512(prefix, message));\n    const R = Point.BASE.multiply(r);\n    const k = modlLE(await utils.sha512(R.toRawBytes(), pointBytes, message));\n    const s = mod(r + k * scalar, CURVE.l);\n    return new Signature(R, s).toRawBytes();\n}\nfunction signSync(message, privateKey) {\n    message = ensureBytes(message);\n    const { prefix, scalar, pointBytes } = getExtendedPublicKeySync(privateKey);\n    const r = modlLE(sha512s(prefix, message));\n    const R = Point.BASE.multiply(r);\n    const k = modlLE(sha512s(R.toRawBytes(), pointBytes, message));\n    const s = mod(r + k * scalar, CURVE.l);\n    return new Signature(R, s).toRawBytes();\n}\nfunction prepareVerification(sig, message, publicKey) {\n    message = ensureBytes(message);\n    if (!(publicKey instanceof Point))\n        publicKey = Point.fromHex(publicKey, false);\n    const { r, s } = sig instanceof Signature ? sig.assertValidity() : Signature.fromHex(sig);\n    const SB = ExtendedPoint.BASE.multiplyUnsafe(s);\n    return { r, s, SB, pub: publicKey, msg: message };\n}\nfunction finishVerification(publicKey, r, SB, hashed) {\n    const k = modlLE(hashed);\n    const kA = ExtendedPoint.fromAffine(publicKey).multiplyUnsafe(k);\n    const RkA = ExtendedPoint.fromAffine(r).add(kA);\n    return RkA.subtract(SB).multiplyUnsafe(CURVE.h).equals(ExtendedPoint.ZERO);\n}\nexport async function verify(sig, message, publicKey) {\n    const { r, SB, msg, pub } = prepareVerification(sig, message, publicKey);\n    const hashed = await utils.sha512(r.toRawBytes(), pub.toRawBytes(), msg);\n    return finishVerification(pub, r, SB, hashed);\n}\nfunction verifySync(sig, message, publicKey) {\n    const { r, SB, msg, pub } = prepareVerification(sig, message, publicKey);\n    const hashed = sha512s(r.toRawBytes(), pub.toRawBytes(), msg);\n    return finishVerification(pub, r, SB, hashed);\n}\nexport const sync = {\n    getExtendedPublicKey: getExtendedPublicKeySync,\n    getPublicKey: getPublicKeySync,\n    sign: signSync,\n    verify: verifySync,\n};\nexport async function getSharedSecret(privateKey, publicKey) {\n    const { head } = await getExtendedPublicKey(privateKey);\n    const u = Point.fromHex(publicKey).toX25519();\n    return curve25519.scalarMult(head, u);\n}\nPoint.BASE._setWindowSize(8);\nfunction cswap(swap, x_2, x_3) {\n    const dummy = mod(swap * (x_2 - x_3));\n    x_2 = mod(x_2 - dummy);\n    x_3 = mod(x_3 + dummy);\n    return [x_2, x_3];\n}\nfunction montgomeryLadder(pointU, scalar) {\n    const { P } = CURVE;\n    const u = normalizeScalar(pointU, P);\n    const k = normalizeScalar(scalar, P);\n    const a24 = BigInt(121665);\n    const x_1 = u;\n    let x_2 = _1n;\n    let z_2 = _0n;\n    let x_3 = u;\n    let z_3 = _1n;\n    let swap = _0n;\n    let sw;\n    for (let t = BigInt(255 - 1); t >= _0n; t--) {\n        const k_t = (k >> t) & _1n;\n        swap ^= k_t;\n        sw = cswap(swap, x_2, x_3);\n        x_2 = sw[0];\n        x_3 = sw[1];\n        sw = cswap(swap, z_2, z_3);\n        z_2 = sw[0];\n        z_3 = sw[1];\n        swap = k_t;\n        const A = x_2 + z_2;\n        const AA = mod(A * A);\n        const B = x_2 - z_2;\n        const BB = mod(B * B);\n        const E = AA - BB;\n        const C = x_3 + z_3;\n        const D = x_3 - z_3;\n        const DA = mod(D * A);\n        const CB = mod(C * B);\n        const dacb = DA + CB;\n        const da_cb = DA - CB;\n        x_3 = mod(dacb * dacb);\n        z_3 = mod(x_1 * mod(da_cb * da_cb));\n        x_2 = mod(AA * BB);\n        z_2 = mod(E * (AA + mod(a24 * E)));\n    }\n    sw = cswap(swap, x_2, x_3);\n    x_2 = sw[0];\n    x_3 = sw[1];\n    sw = cswap(swap, z_2, z_3);\n    z_2 = sw[0];\n    z_3 = sw[1];\n    const { pow_p_5_8, b2 } = pow_2_252_3(z_2);\n    const xp2 = mod(pow2(pow_p_5_8, BigInt(3)) * b2);\n    return mod(x_2 * xp2);\n}\nfunction encodeUCoordinate(u) {\n    return numberTo32BytesLE(mod(u, CURVE.P));\n}\nfunction decodeUCoordinate(uEnc) {\n    const u = ensureBytes(uEnc, 32);\n    u[31] &= 127;\n    return bytesToNumberLE(u);\n}\nexport const curve25519 = {\n    BASE_POINT_U: '0900000000000000000000000000000000000000000000000000000000000000',\n    scalarMult(privateKey, publicKey) {\n        const u = decodeUCoordinate(publicKey);\n        const p = decodeScalar25519(privateKey);\n        const pu = montgomeryLadder(u, p);\n        if (pu === _0n)\n            throw new Error('Invalid private or public key received');\n        return encodeUCoordinate(pu);\n    },\n    scalarMultBase(privateKey) {\n        return curve25519.scalarMult(privateKey, curve25519.BASE_POINT_U);\n    },\n};\nconst crypto = {\n    node: nodeCrypto,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\nexport const utils = {\n    bytesToHex,\n    hexToBytes,\n    concatBytes,\n    getExtendedPublicKey,\n    mod,\n    invert,\n    TORSION_SUBGROUP: [\n        '0100000000000000000000000000000000000000000000000000000000000000',\n        'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a',\n        '0000000000000000000000000000000000000000000000000000000000000080',\n        '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05',\n        'ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f',\n        '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85',\n        '0000000000000000000000000000000000000000000000000000000000000000',\n        'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa',\n    ],\n    hashToPrivateScalar: (hash) => {\n        hash = ensureBytes(hash);\n        if (hash.length < 40 || hash.length > 1024)\n            throw new Error('Expected 40-1024 bytes of private key as per FIPS 186');\n        return mod(bytesToNumberLE(hash), CURVE.l - _1n) + _1n;\n    },\n    randomBytes: (bytesLength = 32) => {\n        if (crypto.web) {\n            return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n        }\n        else if (crypto.node) {\n            const { randomBytes } = crypto.node;\n            return new Uint8Array(randomBytes(bytesLength).buffer);\n        }\n        else {\n            throw new Error(\"The environment doesn't have randomBytes function\");\n        }\n    },\n    randomPrivateKey: () => {\n        return utils.randomBytes(32);\n    },\n    sha512: async (...messages) => {\n        const message = concatBytes(...messages);\n        if (crypto.web) {\n            const buffer = await crypto.web.subtle.digest('SHA-512', message.buffer);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            return Uint8Array.from(crypto.node.createHash('sha512').update(message).digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have sha512 function\");\n        }\n    },\n    precompute(windowSize = 8, point = Point.BASE) {\n        const cached = point.equals(Point.BASE) ? point : new Point(point.x, point.y);\n        cached._setWindowSize(windowSize);\n        cached.multiply(_2n);\n        return cached;\n    },\n    sha512Sync: undefined,\n};\nObject.defineProperties(utils, {\n    sha512Sync: {\n        configurable: false,\n        get() {\n            return _sha512Sync;\n        },\n        set(val) {\n            if (!_sha512Sync)\n                _sha512Sync = val;\n        },\n    },\n});\n","import { Struct, Infer, Result, Context, Describe } from './struct'\nimport { Failure } from './error'\n\n/**\n * Check if a value is an iterator.\n */\n\nfunction isIterable<T>(x: unknown): x is Iterable<T> {\n  return isObject(x) && typeof x[Symbol.iterator] === 'function'\n}\n\n/**\n * Check if a value is a plain object.\n */\n\nexport function isObject(x: unknown): x is object {\n  return typeof x === 'object' && x != null\n}\n\n/**\n * Check if a value is a plain object.\n */\n\nexport function isPlainObject(x: unknown): x is { [key: string]: any } {\n  if (Object.prototype.toString.call(x) !== '[object Object]') {\n    return false\n  }\n\n  const prototype = Object.getPrototypeOf(x)\n  return prototype === null || prototype === Object.prototype\n}\n\n/**\n * Return a value as a printable string.\n */\n\nexport function print(value: any): string {\n  return typeof value === 'string' ? JSON.stringify(value) : `${value}`\n}\n\n/**\n * Shifts (removes and returns) the first value from the `input` iterator.\n * Like `Array.prototype.shift()` but for an `Iterator`.\n */\n\nexport function shiftIterator<T>(input: Iterator<T>): T | undefined {\n  const { done, value } = input.next()\n  return done ? undefined : value\n}\n\n/**\n * Convert a single validation result to a failure.\n */\n\nexport function toFailure<T, S>(\n  result: string | boolean | Partial<Failure>,\n  context: Context,\n  struct: Struct<T, S>,\n  value: any\n): Failure | undefined {\n  if (result === true) {\n    return\n  } else if (result === false) {\n    result = {}\n  } else if (typeof result === 'string') {\n    result = { message: result }\n  }\n\n  const { path, branch } = context\n  const { type } = struct\n  const {\n    refinement,\n    message = `Expected a value of type \\`${type}\\`${\n      refinement ? ` with refinement \\`${refinement}\\`` : ''\n    }, but received: \\`${print(value)}\\``,\n  } = result\n\n  return {\n    value,\n    type,\n    refinement,\n    key: path[path.length - 1],\n    path,\n    branch,\n    ...result,\n    message,\n  }\n}\n\n/**\n * Convert a validation result to an iterable of failures.\n */\n\nexport function* toFailures<T, S>(\n  result: Result,\n  context: Context,\n  struct: Struct<T, S>,\n  value: any\n): IterableIterator<Failure> {\n  if (!isIterable(result)) {\n    result = [result]\n  }\n\n  for (const r of result) {\n    const failure = toFailure(r, context, struct, value)\n\n    if (failure) {\n      yield failure\n    }\n  }\n}\n\n/**\n * Check a value against a struct, traversing deeply into nested values, and\n * returning an iterator of failures or success.\n */\n\nexport function* run<T, S>(\n  value: unknown,\n  struct: Struct<T, S>,\n  options: {\n    path?: any[]\n    branch?: any[]\n    coerce?: boolean\n    mask?: boolean\n  } = {}\n): IterableIterator<[Failure, undefined] | [undefined, T]> {\n  const { path = [], branch = [value], coerce = false, mask = false } = options\n  const ctx: Context = { path, branch }\n\n  if (coerce) {\n    value = struct.coercer(value, ctx)\n\n    if (\n      mask &&\n      struct.type !== 'type' &&\n      isObject(struct.schema) &&\n      isObject(value) &&\n      !Array.isArray(value)\n    ) {\n      for (const key in value) {\n        if (struct.schema[key] === undefined) {\n          delete value[key]\n        }\n      }\n    }\n  }\n\n  let valid = true\n\n  for (const failure of struct.validator(value, ctx)) {\n    valid = false\n    yield [failure, undefined]\n  }\n\n  for (let [k, v, s] of struct.entries(value, ctx)) {\n    const ts = run(v, s as Struct, {\n      path: k === undefined ? path : [...path, k],\n      branch: k === undefined ? branch : [...branch, v],\n      coerce,\n      mask,\n    })\n\n    for (const t of ts) {\n      if (t[0]) {\n        valid = false\n        yield [t[0], undefined]\n      } else if (coerce) {\n        v = t[1]\n\n        if (k === undefined) {\n          value = v\n        } else if (value instanceof Map) {\n          value.set(k, v)\n        } else if (value instanceof Set) {\n          value.add(v)\n        } else if (isObject(value)) {\n          value[k] = v\n        }\n      }\n    }\n  }\n\n  if (valid) {\n    for (const failure of struct.refiner(value as T, ctx)) {\n      valid = false\n      yield [failure, undefined]\n    }\n  }\n\n  if (valid) {\n    yield [undefined, value as T]\n  }\n}\n\n/**\n * Assign properties from one type to another, overwriting existing.\n */\n\nexport type Assign<T, U> = Simplify<U & Omit<T, keyof U>>\n\n/**\n * A schema for enum structs.\n */\n\nexport type EnumSchema<T extends string | number> = { [K in T]: K }\n\n/**\n * Check if a type is an exact match.\n */\n\nexport type IsMatch<T, G> = T extends G ? (G extends T ? T : never) : never\n\n/**\n * Check if a type is a record type.\n */\n\nexport type IsRecord<T> = T extends object\n  ? string extends keyof T\n    ? T\n    : never\n  : never\n/**\n * Check if a type is a tuple.\n */\n\nexport type IsTuple<T> = T extends [any]\n  ? T\n  : T extends [any, any]\n  ? T\n  : T extends [any, any, any]\n  ? T\n  : T extends [any, any, any, any]\n  ? T\n  : T extends [any, any, any, any, any]\n  ? T\n  : never\n\n/**\n * Check if a type is a union.\n */\n\nexport type IsUnion<T, U extends T = T> = (\n  T extends any ? (U extends T ? false : true) : false\n) extends false\n  ? never\n  : T\n\n/**\n * A schema for object structs.\n */\n\nexport type ObjectSchema = Record<string, Struct<any, any>>\n\n/**\n * Infer a type from an object struct schema.\n */\n\nexport type ObjectType<S extends ObjectSchema> = Simplify<\n  Optionalize<{ [K in keyof S]: Infer<S[K]> }>\n>\n\n/**\n * Omit properties from a type that extend from a specific type.\n */\n\nexport type OmitBy<T, V> = Omit<\n  T,\n  { [K in keyof T]: V extends Extract<T[K], V> ? K : never }[keyof T]\n>\n\n/**\n * Normalize properties of a type that allow `undefined` to make them optional.\n */\n\nexport type Optionalize<S extends object> = OmitBy<S, undefined> &\n  Partial<PickBy<S, undefined>>\n\n/**\n * Transform an object schema type to represent a partial.\n */\n\nexport type PartialObjectSchema<S extends ObjectSchema> = {\n  [K in keyof S]: Struct<Infer<S[K]> | undefined>\n}\n\n/**\n * Pick properties from a type that extend from a specific type.\n */\n\nexport type PickBy<T, V> = Pick<\n  T,\n  { [K in keyof T]: V extends Extract<T[K], V> ? K : never }[keyof T]\n>\n\n/**\n * Simplifies a type definition to its most basic representation.\n */\n\nexport type Simplify<T> = T extends any[] | Date\n  ? T\n  : { [K in keyof T]: T[K] } & {}\n\nexport type If<B extends Boolean, Then, Else> = B extends true ? Then : Else\n\n/**\n * A schema for any type of struct.\n */\n\nexport type StructSchema<T> = [T] extends [string]\n  ? [T] extends [IsMatch<T, string>]\n    ? null\n    : [T] extends [IsUnion<T>]\n    ? EnumSchema<T>\n    : T\n  : [T] extends [number]\n  ? [T] extends [IsMatch<T, number>]\n    ? null\n    : [T] extends [IsUnion<T>]\n    ? EnumSchema<T>\n    : T\n  : [T] extends [boolean]\n  ? [T] extends [IsMatch<T, boolean>]\n    ? null\n    : T\n  : T extends\n      | bigint\n      | symbol\n      | undefined\n      | null\n      | Function\n      | Date\n      | Error\n      | RegExp\n      | Map<any, any>\n      | WeakMap<any, any>\n      | Set<any>\n      | WeakSet<any>\n      | Promise<any>\n  ? null\n  : T extends Array<infer E>\n  ? T extends IsTuple<T>\n    ? null\n    : Struct<E>\n  : T extends object\n  ? T extends IsRecord<T>\n    ? null\n    : { [K in keyof T]: Describe<T[K]> }\n  : null\n\n/**\n * A schema for tuple structs.\n */\n\nexport type TupleSchema<T> = { [K in keyof T]: Struct<T[K]> }\n","/**\n * A `StructFailure` represents a single specific failure in validation.\n */\n\nexport type Failure = {\n  value: any\n  key: any\n  type: string\n  refinement: string | undefined\n  message: string\n  branch: Array<any>\n  path: Array<any>\n}\n\n/**\n * `StructError` objects are thrown (or returned) when validation fails.\n *\n * Validation logic is design to exit early for maximum performance. The error\n * represents the first error encountered during validation. For more detail,\n * the `error.failures` property is a generator function that can be run to\n * continue validation and receive all the failures in the data.\n */\n\nexport class StructError extends TypeError {\n  value: any\n  key!: any\n  type!: string\n  refinement!: string | undefined\n  path!: Array<any>\n  branch!: Array<any>\n  failures: () => Array<Failure>;\n  [x: string]: any\n\n  constructor(failure: Failure, failures: () => Generator<Failure>) {\n    let cached: Array<Failure> | undefined\n    const { message, ...rest } = failure\n    const { path } = failure\n    const msg =\n      path.length === 0 ? message : `At path: ${path.join('.')} -- ${message}`\n    super(msg)\n    Object.assign(this, rest)\n    this.name = this.constructor.name\n    this.failures = () => {\n      return (cached ??= [failure, ...failures()])\n    }\n  }\n}\n","import { toFailures, shiftIterator, StructSchema, run } from './utils'\nimport { StructError, Failure } from './error'\n\n/**\n * `Struct` objects encapsulate the validation logic for a specific type of\n * values. Once constructed, you use the `assert`, `is` or `validate` helpers to\n * validate unknown input data against the struct.\n */\n\nexport class Struct<T = unknown, S = unknown> {\n  readonly TYPE!: T\n  type: string\n  schema: S\n  coercer: (value: unknown, context: Context) => unknown\n  validator: (value: unknown, context: Context) => Iterable<Failure>\n  refiner: (value: T, context: Context) => Iterable<Failure>\n  entries: (\n    value: unknown,\n    context: Context\n  ) => Iterable<[string | number, unknown, Struct<any> | Struct<never>]>\n\n  constructor(props: {\n    type: string\n    schema: S\n    coercer?: Coercer\n    validator?: Validator\n    refiner?: Refiner<T>\n    entries?: Struct<T, S>['entries']\n  }) {\n    const {\n      type,\n      schema,\n      validator,\n      refiner,\n      coercer = (value: unknown) => value,\n      entries = function* () {},\n    } = props\n\n    this.type = type\n    this.schema = schema\n    this.entries = entries\n    this.coercer = coercer\n\n    if (validator) {\n      this.validator = (value, context) => {\n        const result = validator(value, context)\n        return toFailures(result, context, this, value)\n      }\n    } else {\n      this.validator = () => []\n    }\n\n    if (refiner) {\n      this.refiner = (value, context) => {\n        const result = refiner(value, context)\n        return toFailures(result, context, this, value)\n      }\n    } else {\n      this.refiner = () => []\n    }\n  }\n\n  /**\n   * Assert that a value passes the struct's validation, throwing if it doesn't.\n   */\n\n  assert(value: unknown): asserts value is T {\n    return assert(value, this)\n  }\n\n  /**\n   * Create a value with the struct's coercion logic, then validate it.\n   */\n\n  create(value: unknown): T {\n    return create(value, this)\n  }\n\n  /**\n   * Check if a value passes the struct's validation.\n   */\n\n  is(value: unknown): value is T {\n    return is(value, this)\n  }\n\n  /**\n   * Mask a value, coercing and validating it, but returning only the subset of\n   * properties defined by the struct's schema.\n   */\n\n  mask(value: unknown): T {\n    return mask(value, this)\n  }\n\n  /**\n   * Validate a value with the struct's validation logic, returning a tuple\n   * representing the result.\n   *\n   * You may optionally pass `true` for the `withCoercion` argument to coerce\n   * the value before attempting to validate it. If you do, the result will\n   * contain the coerced result when successful.\n   */\n\n  validate(\n    value: unknown,\n    options: {\n      coerce?: boolean\n    } = {}\n  ): [StructError, undefined] | [undefined, T] {\n    return validate(value, this, options)\n  }\n}\n\n/**\n * Assert that a value passes a struct, throwing if it doesn't.\n */\n\nexport function assert<T, S>(\n  value: unknown,\n  struct: Struct<T, S>\n): asserts value is T {\n  const result = validate(value, struct)\n\n  if (result[0]) {\n    throw result[0]\n  }\n}\n\n/**\n * Create a value with the coercion logic of struct and validate it.\n */\n\nexport function create<T, S>(value: unknown, struct: Struct<T, S>): T {\n  const result = validate(value, struct, { coerce: true })\n\n  if (result[0]) {\n    throw result[0]\n  } else {\n    return result[1]\n  }\n}\n\n/**\n * Mask a value, returning only the subset of properties defined by a struct.\n */\n\nexport function mask<T, S>(value: unknown, struct: Struct<T, S>): T {\n  const result = validate(value, struct, { coerce: true, mask: true })\n\n  if (result[0]) {\n    throw result[0]\n  } else {\n    return result[1]\n  }\n}\n\n/**\n * Check if a value passes a struct.\n */\n\nexport function is<T, S>(value: unknown, struct: Struct<T, S>): value is T {\n  const result = validate(value, struct)\n  return !result[0]\n}\n\n/**\n * Validate a value against a struct, returning an error if invalid, or the\n * value (with potential coercion) if valid.\n */\n\nexport function validate<T, S>(\n  value: unknown,\n  struct: Struct<T, S>,\n  options: {\n    coerce?: boolean\n    mask?: boolean\n  } = {}\n): [StructError, undefined] | [undefined, T] {\n  const tuples = run(value, struct, options)\n  const tuple = shiftIterator(tuples)!\n\n  if (tuple[0]) {\n    const error = new StructError(tuple[0], function* () {\n      for (const t of tuples) {\n        if (t[0]) {\n          yield t[0]\n        }\n      }\n    })\n\n    return [error, undefined]\n  } else {\n    const v = tuple[1]\n    return [undefined, v]\n  }\n}\n\n/**\n * A `Context` contains information about the current location of the\n * validation inside the initial input value.\n */\n\nexport type Context = {\n  branch: Array<any>\n  path: Array<any>\n}\n\n/**\n * A type utility to extract the type from a `Struct` class.\n */\n\nexport type Infer<T extends Struct<any, any>> = T['TYPE']\n\n/**\n * A type utility to describe that a struct represents a TypeScript type.\n */\n\nexport type Describe<T> = Struct<T, StructSchema<T>>\n\n/**\n * A `Result` is returned from validation functions.\n */\n\nexport type Result =\n  | boolean\n  | string\n  | Partial<Failure>\n  | Iterable<boolean | string | Partial<Failure>>\n\n/**\n * A `Coercer` takes an unknown value and optionally coerces it.\n */\n\nexport type Coercer<T = unknown> = (value: T, context: Context) => unknown\n\n/**\n * A `Validator` takes an unknown value and validates it.\n */\n\nexport type Validator = (value: unknown, context: Context) => Result\n\n/**\n * A `Refiner` takes a value of a known type and validates it against a further\n * constraint.\n */\n\nexport type Refiner<T> = (value: T, context: Context) => Result\n","import { Struct, Context, Validator } from '../struct'\nimport { object, optional } from './types'\nimport { ObjectSchema, Assign, ObjectType, PartialObjectSchema } from '../utils'\n\n/**\n * Create a new struct that combines the properties properties from multiple\n * object structs.\n *\n * Like JavaScript's `Object.assign` utility.\n */\n\nexport function assign<A extends ObjectSchema, B extends ObjectSchema>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>\n): Struct<ObjectType<Assign<A, B>>, Assign<A, B>>\nexport function assign<\n  A extends ObjectSchema,\n  B extends ObjectSchema,\n  C extends ObjectSchema\n>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>,\n  C: Struct<ObjectType<C>, C>\n): Struct<ObjectType<Assign<Assign<A, B>, C>>, Assign<Assign<A, B>, C>>\nexport function assign<\n  A extends ObjectSchema,\n  B extends ObjectSchema,\n  C extends ObjectSchema,\n  D extends ObjectSchema\n>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>,\n  C: Struct<ObjectType<C>, C>,\n  D: Struct<ObjectType<D>, D>\n): Struct<\n  ObjectType<Assign<Assign<Assign<A, B>, C>, D>>,\n  Assign<Assign<Assign<A, B>, C>, D>\n>\nexport function assign<\n  A extends ObjectSchema,\n  B extends ObjectSchema,\n  C extends ObjectSchema,\n  D extends ObjectSchema,\n  E extends ObjectSchema\n>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>,\n  C: Struct<ObjectType<C>, C>,\n  D: Struct<ObjectType<D>, D>,\n  E: Struct<ObjectType<E>, E>\n): Struct<\n  ObjectType<Assign<Assign<Assign<Assign<A, B>, C>, D>, E>>,\n  Assign<Assign<Assign<Assign<A, B>, C>, D>, E>\n>\nexport function assign(...Structs: Struct<any>[]): any {\n  const schemas = Structs.map((s) => s.schema)\n  const schema = Object.assign({}, ...schemas)\n  return object(schema)\n}\n\n/**\n * Define a new struct type with a custom validation function.\n */\n\nexport function define<T>(name: string, validator: Validator): Struct<T, null> {\n  return new Struct({ type: name, schema: null, validator })\n}\n\n/**\n * Create a new struct based on an existing struct, but the value is allowed to\n * be `undefined`. `log` will be called if the value is not `undefined`.\n */\n\nexport function deprecated<T>(\n  struct: Struct<T>,\n  log: (value: unknown, ctx: Context) => void\n): Struct<T> {\n  return new Struct({\n    ...struct,\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n    validator(value, ctx) {\n      if (value === undefined) {\n        return true\n      } else {\n        log(value, ctx)\n        return struct.validator(value, ctx)\n      }\n    },\n  })\n}\n\n/**\n * Create a struct with dynamic validation logic.\n *\n * The callback will receive the value currently being validated, and must\n * return a struct object to validate it with. This can be useful to model\n * validation logic that changes based on its input.\n */\n\nexport function dynamic<T>(\n  fn: (value: unknown, ctx: Context) => Struct<T, any>\n): Struct<T, null> {\n  return new Struct({\n    type: 'dynamic',\n    schema: null,\n    *entries(value, ctx) {\n      const struct = fn(value, ctx)\n      yield* struct.entries(value, ctx)\n    },\n    validator(value, ctx) {\n      const struct = fn(value, ctx)\n      return struct.validator(value, ctx)\n    },\n    coercer(value, ctx) {\n      const struct = fn(value, ctx)\n      return struct.coercer(value, ctx)\n    },\n  })\n}\n\n/**\n * Create a struct with lazily evaluated validation logic.\n *\n * The first time validation is run with the struct, the callback will be called\n * and must return a struct object to use. This is useful for cases where you\n * want to have self-referential structs for nested data structures to avoid a\n * circular definition problem.\n */\n\nexport function lazy<T>(fn: () => Struct<T, any>): Struct<T, null> {\n  let struct: Struct<T, any> | undefined\n  return new Struct({\n    type: 'lazy',\n    schema: null,\n    *entries(value, ctx) {\n      struct ??= fn()\n      yield* struct.entries(value, ctx)\n    },\n    validator(value, ctx) {\n      struct ??= fn()\n      return struct.validator(value, ctx)\n    },\n    coercer(value, ctx) {\n      struct ??= fn()\n      return struct.coercer(value, ctx)\n    },\n  })\n}\n\n/**\n * Create a new struct based on an existing object struct, but excluding\n * specific properties.\n *\n * Like TypeScript's `Omit` utility.\n */\n\nexport function omit<S extends ObjectSchema, K extends keyof S>(\n  struct: Struct<ObjectType<S>, S>,\n  keys: K[]\n): Struct<ObjectType<Omit<S, K>>, Omit<S, K>> {\n  const { schema } = struct\n  const subschema: any = { ...schema }\n\n  for (const key of keys) {\n    delete subschema[key]\n  }\n\n  return object(subschema as Omit<S, K>)\n}\n\n/**\n * Create a new struct based on an existing object struct, but with all of its\n * properties allowed to be `undefined`.\n *\n * Like TypeScript's `Partial` utility.\n */\n\nexport function partial<S extends ObjectSchema>(\n  struct: Struct<ObjectType<S>, S> | S\n): Struct<ObjectType<PartialObjectSchema<S>>, PartialObjectSchema<S>> {\n  const schema: any =\n    struct instanceof Struct ? { ...struct.schema } : { ...struct }\n\n  for (const key in schema) {\n    schema[key] = optional(schema[key])\n  }\n\n  return object(schema) as any\n}\n\n/**\n * Create a new struct based on an existing object struct, but only including\n * specific properties.\n *\n * Like TypeScript's `Pick` utility.\n */\n\nexport function pick<S extends ObjectSchema, K extends keyof S>(\n  struct: Struct<ObjectType<S>, S>,\n  keys: K[]\n): Struct<ObjectType<Pick<S, K>>, Pick<S, K>> {\n  const { schema } = struct\n  const subschema: any = {}\n\n  for (const key of keys) {\n    subschema[key] = schema[key]\n  }\n\n  return object(subschema as Pick<S, K>)\n}\n\n/**\n * Define a new struct type with a custom validation function.\n *\n * @deprecated This function has been renamed to `define`.\n */\n\nexport function struct<T>(name: string, validator: Validator): Struct<T, null> {\n  console.warn(\n    'superstruct@0.11 - The `struct` helper has been renamed to `define`.'\n  )\n\n  return define(name, validator)\n}\n","import { Infer, Struct } from '../struct'\nimport { define } from './utilities'\nimport {\n  TupleSchema,\n  ObjectSchema,\n  ObjectType,\n  print,\n  run,\n  isObject,\n} from '../utils'\n\n/**\n * Ensure that any value passes validation.\n */\n\nexport function any(): Struct<any, null> {\n  return define('any', () => true)\n}\n\n/**\n * Ensure that a value is an array and that its elements are of a specific type.\n *\n * Note: If you omit the element struct, the arrays elements will not be\n * iterated at all. This can be helpful for cases where performance is critical,\n * and it is preferred to using `array(any())`.\n */\n\nexport function array<T extends Struct<any>>(Element: T): Struct<Infer<T>[], T>\nexport function array(): Struct<unknown[], undefined>\nexport function array<T extends Struct<any>>(Element?: T): any {\n  return new Struct({\n    type: 'array',\n    schema: Element,\n    *entries(value) {\n      if (Element && Array.isArray(value)) {\n        for (const [i, v] of value.entries()) {\n          yield [i, v, Element]\n        }\n      }\n    },\n    coercer(value) {\n      return Array.isArray(value) ? value.slice() : value\n    },\n    validator(value) {\n      return (\n        Array.isArray(value) ||\n        `Expected an array value, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a boolean.\n */\n\nexport function boolean(): Struct<boolean, null> {\n  return define('boolean', (value) => {\n    return typeof value === 'boolean'\n  })\n}\n\n/**\n * Ensure that a value is a valid `Date`.\n *\n * Note: this also ensures that the value is *not* an invalid `Date` object,\n * which can occur when parsing a date fails but still returns a `Date`.\n */\n\nexport function date(): Struct<Date, null> {\n  return define('date', (value) => {\n    return (\n      (value instanceof Date && !isNaN(value.getTime())) ||\n      `Expected a valid \\`Date\\` object, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is one of a set of potential values.\n *\n * Note: after creating the struct, you can access the definition of the\n * potential values as `struct.schema`.\n */\n\nexport function enums<T extends number>(\n  values: readonly T[]\n): Struct<T, { [K in T[][number]]: K }>\nexport function enums<T extends string>(\n  values: readonly T[]\n): Struct<T, { [K in T[][number]]: K }>\nexport function enums<T extends number | string>(values: readonly T[]): any {\n  const schema: any = {}\n  const description = values.map((v) => print(v)).join()\n\n  for (const key of values) {\n    schema[key] = key\n  }\n\n  return new Struct({\n    type: 'enums',\n    schema,\n    validator(value) {\n      return (\n        values.includes(value as any) ||\n        `Expected one of \\`${description}\\`, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a function.\n */\n\nexport function func(): Struct<Function, null> {\n  return define('func', (value) => {\n    return (\n      typeof value === 'function' ||\n      `Expected a function, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is an instance of a specific class.\n */\n\nexport function instance<T extends { new (...args: any): any }>(\n  Class: T\n): Struct<InstanceType<T>, null> {\n  return define('instance', (value) => {\n    return (\n      value instanceof Class ||\n      `Expected a \\`${Class.name}\\` instance, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is an integer.\n */\n\nexport function integer(): Struct<number, null> {\n  return define('integer', (value) => {\n    return (\n      (typeof value === 'number' && !isNaN(value) && Number.isInteger(value)) ||\n      `Expected an integer, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value matches all of a set of types.\n */\n\nexport function intersection<A>(Structs: TupleSchema<[A]>): Struct<A, null>\nexport function intersection<A, B>(\n  Structs: TupleSchema<[A, B]>\n): Struct<A & B, null>\nexport function intersection<A, B, C>(\n  Structs: TupleSchema<[A, B, C]>\n): Struct<A & B & C, null>\nexport function intersection<A, B, C, D>(\n  Structs: TupleSchema<[A, B, C, D]>\n): Struct<A & B & C & D, null>\nexport function intersection<A, B, C, D, E>(\n  Structs: TupleSchema<[A, B, C, D, E]>\n): Struct<A & B & C & D & E, null>\nexport function intersection<A, B, C, D, E, F>(\n  Structs: TupleSchema<[A, B, C, D, E, F]>\n): Struct<A & B & C & D & E & F, null>\nexport function intersection<A, B, C, D, E, F, G>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G]>\n): Struct<A & B & C & D & E & F & G, null>\nexport function intersection<A, B, C, D, E, F, G, H>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H]>\n): Struct<A & B & C & D & E & F & G & H, null>\nexport function intersection<A, B, C, D, E, F, G, H, I>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I]>\n): Struct<A & B & C & D & E & F & G & H & I, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J]>\n): Struct<A & B & C & D & E & F & G & H & I & J, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M & N, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M & N & O, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M & N & O & P, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]>\n): Struct<\n  A & B & C & D & E & F & G & H & I & J & K & L & M & N & O & P & Q,\n  null\n>\nexport function intersection(Structs: Array<Struct<any, any>>): any {\n  return new Struct({\n    type: 'intersection',\n    schema: null,\n    *entries(value, ctx) {\n      for (const S of Structs) {\n        yield* S.entries(value, ctx)\n      }\n    },\n    *validator(value, ctx) {\n      for (const S of Structs) {\n        yield* S.validator(value, ctx)\n      }\n    },\n    *refiner(value, ctx) {\n      for (const S of Structs) {\n        yield* S.refiner(value, ctx)\n      }\n    },\n  })\n}\n\n/**\n * Ensure that a value is an exact value, using `===` for comparison.\n */\n\nexport function literal<T extends boolean>(constant: T): Struct<T, T>\nexport function literal<T extends number>(constant: T): Struct<T, T>\nexport function literal<T extends string>(constant: T): Struct<T, T>\nexport function literal<T>(constant: T): Struct<T, null>\nexport function literal<T>(constant: T): any {\n  const description = print(constant)\n  const t = typeof constant\n  return new Struct({\n    type: 'literal',\n    schema:\n      t === 'string' || t === 'number' || t === 'boolean' ? constant : null,\n    validator(value) {\n      return (\n        value === constant ||\n        `Expected the literal \\`${description}\\`, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a `Map` object, and that its keys and values are of\n * specific types.\n */\n\nexport function map(): Struct<Map<unknown, unknown>, null>\nexport function map<K, V>(\n  Key: Struct<K>,\n  Value: Struct<V>\n): Struct<Map<K, V>, null>\nexport function map<K, V>(Key?: Struct<K>, Value?: Struct<V>): any {\n  return new Struct({\n    type: 'map',\n    schema: null,\n    *entries(value) {\n      if (Key && Value && value instanceof Map) {\n        for (const [k, v] of value.entries()) {\n          yield [k as string, k, Key]\n          yield [k as string, v, Value]\n        }\n      }\n    },\n    coercer(value) {\n      return value instanceof Map ? new Map(value) : value\n    },\n    validator(value) {\n      return (\n        value instanceof Map ||\n        `Expected a \\`Map\\` object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that no value ever passes validation.\n */\n\nexport function never(): Struct<never, null> {\n  return define('never', () => false)\n}\n\n/**\n * Augment an existing struct to allow `null` values.\n */\n\nexport function nullable<T, S>(struct: Struct<T, S>): Struct<T | null, S> {\n  return new Struct({\n    ...struct,\n    validator: (value, ctx) => value === null || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === null || struct.refiner(value, ctx),\n  })\n}\n\n/**\n * Ensure that a value is a number.\n */\n\nexport function number(): Struct<number, null> {\n  return define('number', (value) => {\n    return (\n      (typeof value === 'number' && !isNaN(value)) ||\n      `Expected a number, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is an object, that is has a known set of properties,\n * and that its properties are of specific types.\n *\n * Note: Unrecognized properties will fail validation.\n */\n\nexport function object(): Struct<Record<string, unknown>, null>\nexport function object<S extends ObjectSchema>(\n  schema: S\n): Struct<ObjectType<S>, S>\nexport function object<S extends ObjectSchema>(schema?: S): any {\n  const knowns = schema ? Object.keys(schema) : []\n  const Never = never()\n  return new Struct({\n    type: 'object',\n    schema: schema ? schema : null,\n    *entries(value) {\n      if (schema && isObject(value)) {\n        const unknowns = new Set(Object.keys(value))\n\n        for (const key of knowns) {\n          unknowns.delete(key)\n          yield [key, value[key], schema[key]]\n        }\n\n        for (const key of unknowns) {\n          yield [key, value[key], Never]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      )\n    },\n    coercer(value) {\n      return isObject(value) ? { ...value } : value\n    },\n  })\n}\n\n/**\n * Augment a struct to allow `undefined` values.\n */\n\nexport function optional<T, S>(struct: Struct<T, S>): Struct<T | undefined, S> {\n  return new Struct({\n    ...struct,\n    validator: (value, ctx) =>\n      value === undefined || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n  })\n}\n\n/**\n * Ensure that a value is an object with keys and values of specific types, but\n * without ensuring any specific shape of properties.\n *\n * Like TypeScript's `Record` utility.\n */\n\nexport function record<K extends string, V>(\n  Key: Struct<K>,\n  Value: Struct<V>\n): Struct<Record<K, V>, null> {\n  return new Struct({\n    type: 'record',\n    schema: null,\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k in value) {\n          const v = value[k]\n          yield [k, k, Key]\n          yield [k, v, Value]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a `RegExp`.\n *\n * Note: this does not test the value against the regular expression! For that\n * you need to use the `pattern()` refinement.\n */\n\nexport function regexp(): Struct<RegExp, null> {\n  return define('regexp', (value) => {\n    return value instanceof RegExp\n  })\n}\n\n/**\n * Ensure that a value is a `Set` object, and that its elements are of a\n * specific type.\n */\n\nexport function set(): Struct<Set<unknown>, null>\nexport function set<T>(Element: Struct<T>): Struct<Set<T>, null>\nexport function set<T>(Element?: Struct<T>): any {\n  return new Struct({\n    type: 'set',\n    schema: null,\n    *entries(value) {\n      if (Element && value instanceof Set) {\n        for (const v of value) {\n          yield [v as string, v, Element]\n        }\n      }\n    },\n    coercer(value) {\n      return value instanceof Set ? new Set(value) : value\n    },\n    validator(value) {\n      return (\n        value instanceof Set ||\n        `Expected a \\`Set\\` object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a string.\n */\n\nexport function string(): Struct<string, null> {\n  return define('string', (value) => {\n    return (\n      typeof value === 'string' ||\n      `Expected a string, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is a tuple of a specific length, and that each of its\n * elements is of a specific type.\n */\n\nexport function tuple<A>(Structs: TupleSchema<[A]>): Struct<[A], null>\nexport function tuple<A, B>(Structs: TupleSchema<[A, B]>): Struct<[A, B], null>\nexport function tuple<A, B, C>(\n  Structs: TupleSchema<[A, B, C]>\n): Struct<[A, B, C], null>\nexport function tuple<A, B, C, D>(\n  Structs: TupleSchema<[A, B, C, D]>\n): Struct<[A, B, C, D], null>\nexport function tuple<A, B, C, D, E>(\n  Structs: TupleSchema<[A, B, C, D, E]>\n): Struct<[A, B, C, D, E], null>\nexport function tuple<A, B, C, D, E, F>(\n  Structs: TupleSchema<[A, B, C, D, E, F]>\n): Struct<[A, B, C, D, E, F], null>\nexport function tuple<A, B, C, D, E, F, G>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G]>\n): Struct<[A, B, C, D, E, F, G], null>\nexport function tuple<A, B, C, D, E, F, G, H>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H]>\n): Struct<[A, B, C, D, E, F, G, H], null>\nexport function tuple<A, B, C, D, E, F, G, H, I>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I]>\n): Struct<[A, B, C, D, E, F, G, H, I], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J]>\n): Struct<[A, B, C, D, E, F, G, H, I, J], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q], null>\nexport function tuple(Elements: Struct<any>[]): any {\n  const Never = never()\n\n  return new Struct({\n    type: 'tuple',\n    schema: null,\n    *entries(value) {\n      if (Array.isArray(value)) {\n        const length = Math.max(Elements.length, value.length)\n\n        for (let i = 0; i < length; i++) {\n          yield [i, value[i], Elements[i] || Never]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        Array.isArray(value) ||\n        `Expected an array, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value has a set of known properties of specific types.\n *\n * Note: Unrecognized properties are allowed and untouched. This is similar to\n * how TypeScript's structural typing works.\n */\n\nexport function type<S extends ObjectSchema>(\n  schema: S\n): Struct<ObjectType<S>, S> {\n  const keys = Object.keys(schema)\n  return new Struct({\n    type: 'type',\n    schema,\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k of keys) {\n          yield [k, value[k], schema[k]]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value matches one of a set of types.\n */\n\nexport function union<A>(Structs: TupleSchema<[A]>): Struct<A, null>\nexport function union<A, B>(Structs: TupleSchema<[A, B]>): Struct<A | B, null>\nexport function union<A, B, C>(\n  Structs: TupleSchema<[A, B, C]>\n): Struct<A | B | C, null>\nexport function union<A, B, C, D>(\n  Structs: TupleSchema<[A, B, C, D]>\n): Struct<A | B | C | D, null>\nexport function union<A, B, C, D, E>(\n  Structs: TupleSchema<[A, B, C, D, E]>\n): Struct<A | B | C | D | E, null>\nexport function union<A, B, C, D, E, F>(\n  Structs: TupleSchema<[A, B, C, D, E, F]>\n): Struct<A | B | C | D | E | F, null>\nexport function union<A, B, C, D, E, F, G>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G]>\n): Struct<A | B | C | D | E | F | G, null>\nexport function union<A, B, C, D, E, F, G, H>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H]>\n): Struct<A | B | C | D | E | F | G | H, null>\nexport function union<A, B, C, D, E, F, G, H, I>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I]>\n): Struct<A | B | C | D | E | F | G | H | I, null>\nexport function union<A, B, C, D, E, F, G, H, I, J>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J]>\n): Struct<A | B | C | D | E | F | G | H | I | J, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M | N, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M | N | O, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]>\n): Struct<\n  A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P | Q,\n  null\n>\nexport function union(Structs: Struct<any>[]): any {\n  const description = Structs.map((s) => s.type).join(' | ')\n  return new Struct({\n    type: 'union',\n    schema: null,\n    validator(value, ctx) {\n      const failures = []\n\n      for (const S of Structs) {\n        const [...tuples] = run(value, S, ctx)\n        const [first] = tuples\n\n        if (!first[0]) {\n          return []\n        } else {\n          for (const [failure] of tuples) {\n            if (failure) {\n              failures.push(failure)\n            }\n          }\n        }\n      }\n\n      return [\n        `Expected the value to satisfy a union of \\`${description}\\`, but received: ${print(\n          value\n        )}`,\n        ...failures,\n      ]\n    },\n  })\n}\n\n/**\n * Ensure that any value passes validation, without widening its type to `any`.\n */\n\nexport function unknown(): Struct<unknown, null> {\n  return define('unknown', () => true)\n}\n","import { Struct, is, Coercer } from '../struct'\nimport { isPlainObject } from '../utils'\nimport { string, unknown } from './types'\n\n/**\n * Augment a `Struct` to add an additional coercion step to its input.\n *\n * This allows you to transform input data before validating it, to increase the\n * likelihood that it passes validation—for example for default values, parsing\n * different formats, etc.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nexport function coerce<T, S, C>(\n  struct: Struct<T, S>,\n  condition: Struct<C, any>,\n  coercer: Coercer<C>\n): Struct<T, S> {\n  return new Struct({\n    ...struct,\n    coercer: (value, ctx) => {\n      return is(value, condition)\n        ? struct.coercer(coercer(value, ctx), ctx)\n        : struct.coercer(value, ctx)\n    },\n  })\n}\n\n/**\n * Augment a struct to replace `undefined` values with a default.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nexport function defaulted<T, S>(\n  struct: Struct<T, S>,\n  fallback: any,\n  options: {\n    strict?: boolean\n  } = {}\n): Struct<T, S> {\n  return coerce(struct, unknown(), (x) => {\n    const f = typeof fallback === 'function' ? fallback() : fallback\n\n    if (x === undefined) {\n      return f\n    }\n\n    if (!options.strict && isPlainObject(x) && isPlainObject(f)) {\n      const ret = { ...x }\n      let changed = false\n\n      for (const key in f) {\n        if (ret[key] === undefined) {\n          ret[key] = f[key]\n          changed = true\n        }\n      }\n\n      if (changed) {\n        return ret\n      }\n    }\n\n    return x\n  })\n}\n\n/**\n * Augment a struct to trim string inputs.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nexport function trimmed<T, S>(struct: Struct<T, S>): Struct<T, S> {\n  return coerce(struct, string(), (x) => x.trim())\n}\n","/*! noble-secp256k1 - MIT License (c) 2019 Paul Miller (paulmillr.com) */\nimport * as nodeCrypto from 'crypto';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _3n = BigInt(3);\nconst _8n = BigInt(8);\nconst CURVE = Object.freeze({\n    a: _0n,\n    b: BigInt(7),\n    P: BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f'),\n    n: BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141'),\n    h: _1n,\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n});\nexport { CURVE };\nfunction weistrass(x) {\n    const { a, b } = CURVE;\n    const x2 = mod(x * x);\n    const x3 = mod(x2 * x);\n    return mod(x3 + a * x + b);\n}\nconst USE_ENDOMORPHISM = CURVE.a === _0n;\nclass ShaError extends Error {\n    constructor(message) {\n        super(message);\n    }\n}\nclass JacobianPoint {\n    constructor(x, y, z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n    static fromAffine(p) {\n        if (!(p instanceof Point)) {\n            throw new TypeError('JacobianPoint#fromAffine: expected Point');\n        }\n        return new JacobianPoint(p.x, p.y, _1n);\n    }\n    static toAffineBatch(points) {\n        const toInv = invertBatch(points.map((p) => p.z));\n        return points.map((p, i) => p.toAffine(toInv[i]));\n    }\n    static normalizeZ(points) {\n        return JacobianPoint.toAffineBatch(points).map(JacobianPoint.fromAffine);\n    }\n    equals(other) {\n        if (!(other instanceof JacobianPoint))\n            throw new TypeError('JacobianPoint expected');\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        const Z1Z1 = mod(Z1 * Z1);\n        const Z2Z2 = mod(Z2 * Z2);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        return U1 === U2 && S1 === S2;\n    }\n    negate() {\n        return new JacobianPoint(this.x, mod(-this.y), this.z);\n    }\n    double() {\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const A = mod(X1 * X1);\n        const B = mod(Y1 * Y1);\n        const C = mod(B * B);\n        const x1b = X1 + B;\n        const D = mod(_2n * (mod(x1b * x1b) - A - C));\n        const E = mod(_3n * A);\n        const F = mod(E * E);\n        const X3 = mod(F - _2n * D);\n        const Y3 = mod(E * (D - X3) - _8n * C);\n        const Z3 = mod(_2n * Y1 * Z1);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    add(other) {\n        if (!(other instanceof JacobianPoint))\n            throw new TypeError('JacobianPoint expected');\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        if (X2 === _0n || Y2 === _0n)\n            return this;\n        if (X1 === _0n || Y1 === _0n)\n            return other;\n        const Z1Z1 = mod(Z1 * Z1);\n        const Z2Z2 = mod(Z2 * Z2);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        const H = mod(U2 - U1);\n        const r = mod(S2 - S1);\n        if (H === _0n) {\n            if (r === _0n) {\n                return this.double();\n            }\n            else {\n                return JacobianPoint.ZERO;\n            }\n        }\n        const HH = mod(H * H);\n        const HHH = mod(H * HH);\n        const V = mod(U1 * HH);\n        const X3 = mod(r * r - HHH - _2n * V);\n        const Y3 = mod(r * (V - X3) - S1 * HHH);\n        const Z3 = mod(Z1 * Z2 * H);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiplyUnsafe(scalar) {\n        const P0 = JacobianPoint.ZERO;\n        if (typeof scalar === 'bigint' && scalar === _0n)\n            return P0;\n        let n = normalizeScalar(scalar);\n        if (n === _1n)\n            return this;\n        if (!USE_ENDOMORPHISM) {\n            let p = P0;\n            let d = this;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        }\n        let { k1neg, k1, k2neg, k2 } = splitScalarEndo(n);\n        let k1p = P0;\n        let k2p = P0;\n        let d = this;\n        while (k1 > _0n || k2 > _0n) {\n            if (k1 & _1n)\n                k1p = k1p.add(d);\n            if (k2 & _1n)\n                k2p = k2p.add(d);\n            d = d.double();\n            k1 >>= _1n;\n            k2 >>= _1n;\n        }\n        if (k1neg)\n            k1p = k1p.negate();\n        if (k2neg)\n            k2p = k2p.negate();\n        k2p = new JacobianPoint(mod(k2p.x * CURVE.beta), k2p.y, k2p.z);\n        return k1p.add(k2p);\n    }\n    precomputeWindow(W) {\n        const windows = USE_ENDOMORPHISM ? 128 / W + 1 : 256 / W + 1;\n        const points = [];\n        let p = this;\n        let base = p;\n        for (let window = 0; window < windows; window++) {\n            base = p;\n            points.push(base);\n            for (let i = 1; i < 2 ** (W - 1); i++) {\n                base = base.add(p);\n                points.push(base);\n            }\n            p = base.double();\n        }\n        return points;\n    }\n    wNAF(n, affinePoint) {\n        if (!affinePoint && this.equals(JacobianPoint.BASE))\n            affinePoint = Point.BASE;\n        const W = (affinePoint && affinePoint._WINDOW_SIZE) || 1;\n        if (256 % W) {\n            throw new Error('Point#wNAF: Invalid precomputation window, must be power of 2');\n        }\n        let precomputes = affinePoint && pointPrecomputes.get(affinePoint);\n        if (!precomputes) {\n            precomputes = this.precomputeWindow(W);\n            if (affinePoint && W !== 1) {\n                precomputes = JacobianPoint.normalizeZ(precomputes);\n                pointPrecomputes.set(affinePoint, precomputes);\n            }\n        }\n        let p = JacobianPoint.ZERO;\n        let f = JacobianPoint.ZERO;\n        const windows = 1 + (USE_ENDOMORPHISM ? 128 / W : 256 / W);\n        const windowSize = 2 ** (W - 1);\n        const mask = BigInt(2 ** W - 1);\n        const maxNumber = 2 ** W;\n        const shiftBy = BigInt(W);\n        for (let window = 0; window < windows; window++) {\n            const offset = window * windowSize;\n            let wbits = Number(n & mask);\n            n >>= shiftBy;\n            if (wbits > windowSize) {\n                wbits -= maxNumber;\n                n += _1n;\n            }\n            if (wbits === 0) {\n                let pr = precomputes[offset];\n                if (window % 2)\n                    pr = pr.negate();\n                f = f.add(pr);\n            }\n            else {\n                let cached = precomputes[offset + Math.abs(wbits) - 1];\n                if (wbits < 0)\n                    cached = cached.negate();\n                p = p.add(cached);\n            }\n        }\n        return { p, f };\n    }\n    multiply(scalar, affinePoint) {\n        let n = normalizeScalar(scalar);\n        let point;\n        let fake;\n        if (USE_ENDOMORPHISM) {\n            const { k1neg, k1, k2neg, k2 } = splitScalarEndo(n);\n            let { p: k1p, f: f1p } = this.wNAF(k1, affinePoint);\n            let { p: k2p, f: f2p } = this.wNAF(k2, affinePoint);\n            if (k1neg)\n                k1p = k1p.negate();\n            if (k2neg)\n                k2p = k2p.negate();\n            k2p = new JacobianPoint(mod(k2p.x * CURVE.beta), k2p.y, k2p.z);\n            point = k1p.add(k2p);\n            fake = f1p.add(f2p);\n        }\n        else {\n            const { p, f } = this.wNAF(n, affinePoint);\n            point = p;\n            fake = f;\n        }\n        return JacobianPoint.normalizeZ([point, fake])[0];\n    }\n    toAffine(invZ = invert(this.z)) {\n        const { x, y, z } = this;\n        const iz1 = invZ;\n        const iz2 = mod(iz1 * iz1);\n        const iz3 = mod(iz2 * iz1);\n        const ax = mod(x * iz2);\n        const ay = mod(y * iz3);\n        const zz = mod(z * iz1);\n        if (zz !== _1n)\n            throw new Error('invZ was invalid');\n        return new Point(ax, ay);\n    }\n}\nJacobianPoint.BASE = new JacobianPoint(CURVE.Gx, CURVE.Gy, _1n);\nJacobianPoint.ZERO = new JacobianPoint(_0n, _1n, _0n);\nconst pointPrecomputes = new WeakMap();\nexport class Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    _setWindowSize(windowSize) {\n        this._WINDOW_SIZE = windowSize;\n        pointPrecomputes.delete(this);\n    }\n    hasEvenY() {\n        return this.y % _2n === _0n;\n    }\n    static fromCompressedHex(bytes) {\n        const isShort = bytes.length === 32;\n        const x = bytesToNumber(isShort ? bytes : bytes.subarray(1));\n        if (!isValidFieldElement(x))\n            throw new Error('Point is not on curve');\n        const y2 = weistrass(x);\n        let y = sqrtMod(y2);\n        const isYOdd = (y & _1n) === _1n;\n        if (isShort) {\n            if (isYOdd)\n                y = mod(-y);\n        }\n        else {\n            const isFirstByteOdd = (bytes[0] & 1) === 1;\n            if (isFirstByteOdd !== isYOdd)\n                y = mod(-y);\n        }\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromUncompressedHex(bytes) {\n        const x = bytesToNumber(bytes.subarray(1, 33));\n        const y = bytesToNumber(bytes.subarray(33, 65));\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        const len = bytes.length;\n        const header = bytes[0];\n        if (len === 32 || (len === 33 && (header === 0x02 || header === 0x03))) {\n            return this.fromCompressedHex(bytes);\n        }\n        if (len === 65 && header === 0x04)\n            return this.fromUncompressedHex(bytes);\n        throw new Error(`Point.fromHex: received invalid point. Expected 32-33 compressed bytes or 65 uncompressed bytes, not ${len}`);\n    }\n    static fromPrivateKey(privateKey) {\n        return Point.BASE.multiply(normalizePrivateKey(privateKey));\n    }\n    static fromSignature(msgHash, signature, recovery) {\n        msgHash = ensureBytes(msgHash);\n        const h = truncateHash(msgHash);\n        const { r, s } = normalizeSignature(signature);\n        if (recovery !== 0 && recovery !== 1) {\n            throw new Error('Cannot recover signature: invalid recovery bit');\n        }\n        const prefix = recovery & 1 ? '03' : '02';\n        const R = Point.fromHex(prefix + numTo32bStr(r));\n        const { n } = CURVE;\n        const rinv = invert(r, n);\n        const u1 = mod(-h * rinv, n);\n        const u2 = mod(s * rinv, n);\n        const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2);\n        if (!Q)\n            throw new Error('Cannot recover signature: point at infinify');\n        Q.assertValidity();\n        return Q;\n    }\n    toRawBytes(isCompressed = false) {\n        return hexToBytes(this.toHex(isCompressed));\n    }\n    toHex(isCompressed = false) {\n        const x = numTo32bStr(this.x);\n        if (isCompressed) {\n            const prefix = this.hasEvenY() ? '02' : '03';\n            return `${prefix}${x}`;\n        }\n        else {\n            return `04${x}${numTo32bStr(this.y)}`;\n        }\n    }\n    toHexX() {\n        return this.toHex(true).slice(2);\n    }\n    toRawX() {\n        return this.toRawBytes(true).slice(1);\n    }\n    assertValidity() {\n        const msg = 'Point is not on elliptic curve';\n        const { x, y } = this;\n        if (!isValidFieldElement(x) || !isValidFieldElement(y))\n            throw new Error(msg);\n        const left = mod(y * y);\n        const right = weistrass(x);\n        if (mod(left - right) !== _0n)\n            throw new Error(msg);\n    }\n    equals(other) {\n        return this.x === other.x && this.y === other.y;\n    }\n    negate() {\n        return new Point(this.x, mod(-this.y));\n    }\n    double() {\n        return JacobianPoint.fromAffine(this).double().toAffine();\n    }\n    add(other) {\n        return JacobianPoint.fromAffine(this).add(JacobianPoint.fromAffine(other)).toAffine();\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiply(scalar) {\n        return JacobianPoint.fromAffine(this).multiply(scalar, this).toAffine();\n    }\n    multiplyAndAddUnsafe(Q, a, b) {\n        const P = JacobianPoint.fromAffine(this);\n        const aP = a === _0n || a === _1n || this !== Point.BASE ? P.multiplyUnsafe(a) : P.multiply(a);\n        const bQ = JacobianPoint.fromAffine(Q).multiplyUnsafe(b);\n        const sum = aP.add(bQ);\n        return sum.equals(JacobianPoint.ZERO) ? undefined : sum.toAffine();\n    }\n}\nPoint.BASE = new Point(CURVE.Gx, CURVE.Gy);\nPoint.ZERO = new Point(_0n, _0n);\nfunction sliceDER(s) {\n    return Number.parseInt(s[0], 16) >= 8 ? '00' + s : s;\n}\nfunction parseDERInt(data) {\n    if (data.length < 2 || data[0] !== 0x02) {\n        throw new Error(`Invalid signature integer tag: ${bytesToHex(data)}`);\n    }\n    const len = data[1];\n    const res = data.subarray(2, len + 2);\n    if (!len || res.length !== len) {\n        throw new Error(`Invalid signature integer: wrong length`);\n    }\n    if (res[0] === 0x00 && res[1] <= 0x7f) {\n        throw new Error('Invalid signature integer: trailing length');\n    }\n    return { data: bytesToNumber(res), left: data.subarray(len + 2) };\n}\nfunction parseDERSignature(data) {\n    if (data.length < 2 || data[0] != 0x30) {\n        throw new Error(`Invalid signature tag: ${bytesToHex(data)}`);\n    }\n    if (data[1] !== data.length - 2) {\n        throw new Error('Invalid signature: incorrect length');\n    }\n    const { data: r, left: sBytes } = parseDERInt(data.subarray(2));\n    const { data: s, left: rBytesLeft } = parseDERInt(sBytes);\n    if (rBytesLeft.length) {\n        throw new Error(`Invalid signature: left bytes after parsing: ${bytesToHex(rBytesLeft)}`);\n    }\n    return { r, s };\n}\nexport class Signature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromCompact(hex) {\n        const arr = hex instanceof Uint8Array;\n        const name = 'Signature.fromCompact';\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`${name}: Expected string or Uint8Array`);\n        const str = arr ? bytesToHex(hex) : hex;\n        if (str.length !== 128)\n            throw new Error(`${name}: Expected 64-byte hex`);\n        return new Signature(hexToNumber(str.slice(0, 64)), hexToNumber(str.slice(64, 128)));\n    }\n    static fromDER(hex) {\n        const arr = hex instanceof Uint8Array;\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`Signature.fromDER: Expected string or Uint8Array`);\n        const { r, s } = parseDERSignature(arr ? hex : hexToBytes(hex));\n        return new Signature(r, s);\n    }\n    static fromHex(hex) {\n        return this.fromDER(hex);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isWithinCurveOrder(r))\n            throw new Error('Invalid Signature: r must be 0 < r < n');\n        if (!isWithinCurveOrder(s))\n            throw new Error('Invalid Signature: s must be 0 < s < n');\n    }\n    hasHighS() {\n        const HALF = CURVE.n >> _1n;\n        return this.s > HALF;\n    }\n    normalizeS() {\n        return this.hasHighS() ? new Signature(this.r, CURVE.n - this.s) : this;\n    }\n    toDERRawBytes(isCompressed = false) {\n        return hexToBytes(this.toDERHex(isCompressed));\n    }\n    toDERHex(isCompressed = false) {\n        const sHex = sliceDER(numberToHexUnpadded(this.s));\n        if (isCompressed)\n            return sHex;\n        const rHex = sliceDER(numberToHexUnpadded(this.r));\n        const rLen = numberToHexUnpadded(rHex.length / 2);\n        const sLen = numberToHexUnpadded(sHex.length / 2);\n        const length = numberToHexUnpadded(rHex.length / 2 + sHex.length / 2 + 4);\n        return `30${length}02${rLen}${rHex}02${sLen}${sHex}`;\n    }\n    toRawBytes() {\n        return this.toDERRawBytes();\n    }\n    toHex() {\n        return this.toDERHex();\n    }\n    toCompactRawBytes() {\n        return hexToBytes(this.toCompactHex());\n    }\n    toCompactHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n}\nfunction concatBytes(...arrays) {\n    if (!arrays.every((b) => b instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nconst POW_2_256 = BigInt('0x10000000000000000000000000000000000000000000000000000000000000000');\nfunction numTo32bStr(num) {\n    if (typeof num !== 'bigint')\n        throw new Error('Expected bigint');\n    if (!(_0n <= num && num < POW_2_256))\n        throw new Error('Expected number < 2^256');\n    return num.toString(16).padStart(64, '0');\n}\nfunction numTo32b(num) {\n    const b = hexToBytes(numTo32bStr(num));\n    if (b.length !== 32)\n        throw new Error('Error: expected 32 bytes');\n    return b;\n}\nfunction numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nfunction hexToNumber(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToNumber: expected string, got ' + typeof hex);\n    }\n    return BigInt(`0x${hex}`);\n}\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex' + hex.length);\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nfunction bytesToNumber(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nfunction ensureBytes(hex) {\n    return hex instanceof Uint8Array ? Uint8Array.from(hex) : hexToBytes(hex);\n}\nfunction normalizeScalar(num) {\n    if (typeof num === 'number' && Number.isSafeInteger(num) && num > 0)\n        return BigInt(num);\n    if (typeof num === 'bigint' && isWithinCurveOrder(num))\n        return num;\n    throw new TypeError('Expected valid private scalar: 0 < scalar < curve.n');\n}\nfunction mod(a, b = CURVE.P) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\nfunction pow2(x, power) {\n    const { P } = CURVE;\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= P;\n    }\n    return res;\n}\nfunction sqrtMod(x) {\n    const { P } = CURVE;\n    const _6n = BigInt(6);\n    const _11n = BigInt(11);\n    const _22n = BigInt(22);\n    const _23n = BigInt(23);\n    const _44n = BigInt(44);\n    const _88n = BigInt(88);\n    const b2 = (x * x * x) % P;\n    const b3 = (b2 * b2 * x) % P;\n    const b6 = (pow2(b3, _3n) * b3) % P;\n    const b9 = (pow2(b6, _3n) * b3) % P;\n    const b11 = (pow2(b9, _2n) * b2) % P;\n    const b22 = (pow2(b11, _11n) * b11) % P;\n    const b44 = (pow2(b22, _22n) * b22) % P;\n    const b88 = (pow2(b44, _44n) * b44) % P;\n    const b176 = (pow2(b88, _88n) * b88) % P;\n    const b220 = (pow2(b176, _44n) * b44) % P;\n    const b223 = (pow2(b220, _3n) * b3) % P;\n    const t1 = (pow2(b223, _23n) * b22) % P;\n    const t2 = (pow2(t1, _6n) * b2) % P;\n    return pow2(t2, _2n);\n}\nfunction invert(number, modulo = CURVE.P) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    let a = mod(number, modulo);\n    let b = modulo;\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nfunction invertBatch(nums, p = CURVE.P) {\n    const scratch = new Array(nums.length);\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = acc;\n        return mod(acc * num, p);\n    }, _1n);\n    const inverted = invert(lastMultiplied, p);\n    nums.reduceRight((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = mod(acc * scratch[i], p);\n        return mod(acc * num, p);\n    }, inverted);\n    return scratch;\n}\nconst divNearest = (a, b) => (a + b / _2n) / b;\nconst ENDO = {\n    a1: BigInt('0x3086d221a7d46bcde86c90e49284eb15'),\n    b1: -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3'),\n    a2: BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8'),\n    b2: BigInt('0x3086d221a7d46bcde86c90e49284eb15'),\n    POW_2_128: BigInt('0x100000000000000000000000000000000'),\n};\nfunction splitScalarEndo(k) {\n    const { n } = CURVE;\n    const { a1, b1, a2, b2, POW_2_128 } = ENDO;\n    const c1 = divNearest(b2 * k, n);\n    const c2 = divNearest(-b1 * k, n);\n    let k1 = mod(k - c1 * a1 - c2 * a2, n);\n    let k2 = mod(-c1 * b1 - c2 * b2, n);\n    const k1neg = k1 > POW_2_128;\n    const k2neg = k2 > POW_2_128;\n    if (k1neg)\n        k1 = n - k1;\n    if (k2neg)\n        k2 = n - k2;\n    if (k1 > POW_2_128 || k2 > POW_2_128) {\n        throw new Error('splitScalarEndo: Endomorphism failed, k=' + k);\n    }\n    return { k1neg, k1, k2neg, k2 };\n}\nfunction truncateHash(hash) {\n    const { n } = CURVE;\n    const byteLength = hash.length;\n    const delta = byteLength * 8 - 256;\n    let h = bytesToNumber(hash);\n    if (delta > 0)\n        h = h >> BigInt(delta);\n    if (h >= n)\n        h -= n;\n    return h;\n}\nlet _sha256Sync;\nlet _hmacSha256Sync;\nclass HmacDrbg {\n    constructor() {\n        this.v = new Uint8Array(32).fill(1);\n        this.k = new Uint8Array(32).fill(0);\n        this.counter = 0;\n    }\n    hmac(...values) {\n        return utils.hmacSha256(this.k, ...values);\n    }\n    hmacSync(...values) {\n        return _hmacSha256Sync(this.k, ...values);\n    }\n    checkSync() {\n        if (typeof _hmacSha256Sync !== 'function')\n            throw new ShaError('hmacSha256Sync needs to be set');\n    }\n    incr() {\n        if (this.counter >= 1000)\n            throw new Error('Tried 1,000 k values for sign(), all were invalid');\n        this.counter += 1;\n    }\n    async reseed(seed = new Uint8Array()) {\n        this.k = await this.hmac(this.v, Uint8Array.from([0x00]), seed);\n        this.v = await this.hmac(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = await this.hmac(this.v, Uint8Array.from([0x01]), seed);\n        this.v = await this.hmac(this.v);\n    }\n    reseedSync(seed = new Uint8Array()) {\n        this.checkSync();\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x00]), seed);\n        this.v = this.hmacSync(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x01]), seed);\n        this.v = this.hmacSync(this.v);\n    }\n    async generate() {\n        this.incr();\n        this.v = await this.hmac(this.v);\n        return this.v;\n    }\n    generateSync() {\n        this.checkSync();\n        this.incr();\n        this.v = this.hmacSync(this.v);\n        return this.v;\n    }\n}\nfunction isWithinCurveOrder(num) {\n    return _0n < num && num < CURVE.n;\n}\nfunction isValidFieldElement(num) {\n    return _0n < num && num < CURVE.P;\n}\nfunction kmdToSig(kBytes, m, d) {\n    const k = bytesToNumber(kBytes);\n    if (!isWithinCurveOrder(k))\n        return;\n    const { n } = CURVE;\n    const q = Point.BASE.multiply(k);\n    const r = mod(q.x, n);\n    if (r === _0n)\n        return;\n    const s = mod(invert(k, n) * mod(m + d * r, n), n);\n    if (s === _0n)\n        return;\n    const sig = new Signature(r, s);\n    const recovery = (q.x === sig.r ? 0 : 2) | Number(q.y & _1n);\n    return { sig, recovery };\n}\nfunction normalizePrivateKey(key) {\n    let num;\n    if (typeof key === 'bigint') {\n        num = key;\n    }\n    else if (typeof key === 'number' && Number.isSafeInteger(key) && key > 0) {\n        num = BigInt(key);\n    }\n    else if (typeof key === 'string') {\n        if (key.length !== 64)\n            throw new Error('Expected 32 bytes of private key');\n        num = hexToNumber(key);\n    }\n    else if (key instanceof Uint8Array) {\n        if (key.length !== 32)\n            throw new Error('Expected 32 bytes of private key');\n        num = bytesToNumber(key);\n    }\n    else {\n        throw new TypeError('Expected valid private key');\n    }\n    if (!isWithinCurveOrder(num))\n        throw new Error('Expected private key: 0 < key < n');\n    return num;\n}\nfunction normalizePublicKey(publicKey) {\n    if (publicKey instanceof Point) {\n        publicKey.assertValidity();\n        return publicKey;\n    }\n    else {\n        return Point.fromHex(publicKey);\n    }\n}\nfunction normalizeSignature(signature) {\n    if (signature instanceof Signature) {\n        signature.assertValidity();\n        return signature;\n    }\n    try {\n        return Signature.fromDER(signature);\n    }\n    catch (error) {\n        return Signature.fromCompact(signature);\n    }\n}\nexport function getPublicKey(privateKey, isCompressed = false) {\n    return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n}\nexport function recoverPublicKey(msgHash, signature, recovery, isCompressed = false) {\n    return Point.fromSignature(msgHash, signature, recovery).toRawBytes(isCompressed);\n}\nfunction isProbPub(item) {\n    const arr = item instanceof Uint8Array;\n    const str = typeof item === 'string';\n    const len = (arr || str) && item.length;\n    if (arr)\n        return len === 33 || len === 65;\n    if (str)\n        return len === 66 || len === 130;\n    if (item instanceof Point)\n        return true;\n    return false;\n}\nexport function getSharedSecret(privateA, publicB, isCompressed = false) {\n    if (isProbPub(privateA))\n        throw new TypeError('getSharedSecret: first arg must be private key');\n    if (!isProbPub(publicB))\n        throw new TypeError('getSharedSecret: second arg must be public key');\n    const b = normalizePublicKey(publicB);\n    b.assertValidity();\n    return b.multiply(normalizePrivateKey(privateA)).toRawBytes(isCompressed);\n}\nfunction bits2int(bytes) {\n    const slice = bytes.length > 32 ? bytes.slice(0, 32) : bytes;\n    return bytesToNumber(slice);\n}\nfunction bits2octets(bytes) {\n    const z1 = bits2int(bytes);\n    const z2 = mod(z1, CURVE.n);\n    return int2octets(z2 < _0n ? z1 : z2);\n}\nfunction int2octets(num) {\n    return numTo32b(num);\n}\nfunction initSigArgs(msgHash, privateKey, extraEntropy) {\n    if (msgHash == null)\n        throw new Error(`sign: expected valid message hash, not \"${msgHash}\"`);\n    const h1 = ensureBytes(msgHash);\n    const d = normalizePrivateKey(privateKey);\n    const seedArgs = [int2octets(d), bits2octets(h1)];\n    if (extraEntropy != null) {\n        if (extraEntropy === true)\n            extraEntropy = utils.randomBytes(32);\n        const e = ensureBytes(extraEntropy);\n        if (e.length !== 32)\n            throw new Error('sign: Expected 32 bytes of extra data');\n        seedArgs.push(e);\n    }\n    const seed = concatBytes(...seedArgs);\n    const m = bits2int(h1);\n    return { seed, m, d };\n}\nfunction finalizeSig(recSig, opts) {\n    let { sig, recovery } = recSig;\n    const { canonical, der, recovered } = Object.assign({ canonical: true, der: true }, opts);\n    if (canonical && sig.hasHighS()) {\n        sig = sig.normalizeS();\n        recovery ^= 1;\n    }\n    const hashed = der ? sig.toDERRawBytes() : sig.toCompactRawBytes();\n    return recovered ? [hashed, recovery] : hashed;\n}\nasync function sign(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    let sig;\n    const drbg = new HmacDrbg();\n    await drbg.reseed(seed);\n    while (!(sig = kmdToSig(await drbg.generate(), m, d)))\n        await drbg.reseed();\n    return finalizeSig(sig, opts);\n}\nfunction signSync(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    let sig;\n    const drbg = new HmacDrbg();\n    drbg.reseedSync(seed);\n    while (!(sig = kmdToSig(drbg.generateSync(), m, d)))\n        drbg.reseedSync();\n    return finalizeSig(sig, opts);\n}\nexport { sign, signSync };\nconst vopts = { strict: true };\nexport function verify(signature, msgHash, publicKey, opts = vopts) {\n    let sig;\n    try {\n        sig = normalizeSignature(signature);\n        msgHash = ensureBytes(msgHash);\n    }\n    catch (error) {\n        return false;\n    }\n    const { r, s } = sig;\n    if (opts.strict && sig.hasHighS())\n        return false;\n    const h = truncateHash(msgHash);\n    let P;\n    try {\n        P = normalizePublicKey(publicKey);\n    }\n    catch (error) {\n        return false;\n    }\n    const { n } = CURVE;\n    const sinv = invert(s, n);\n    const u1 = mod(h * sinv, n);\n    const u2 = mod(r * sinv, n);\n    const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2);\n    if (!R)\n        return false;\n    const v = mod(R.x, n);\n    return v === r;\n}\nfunction schnorrChallengeFinalize(ch) {\n    return mod(bytesToNumber(ch), CURVE.n);\n}\nclass SchnorrSignature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        if (bytes.length !== 64)\n            throw new TypeError(`SchnorrSignature.fromHex: expected 64 bytes, not ${bytes.length}`);\n        const r = bytesToNumber(bytes.subarray(0, 32));\n        const s = bytesToNumber(bytes.subarray(32, 64));\n        return new SchnorrSignature(r, s);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isValidFieldElement(r) || !isWithinCurveOrder(s))\n            throw new Error('Invalid signature');\n    }\n    toHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n    toRawBytes() {\n        return hexToBytes(this.toHex());\n    }\n}\nfunction schnorrGetPublicKey(privateKey) {\n    return Point.fromPrivateKey(privateKey).toRawX();\n}\nclass InternalSchnorrSignature {\n    constructor(message, privateKey, auxRand = utils.randomBytes()) {\n        if (message == null)\n            throw new TypeError(`sign: Expected valid message, not \"${message}\"`);\n        this.m = ensureBytes(message);\n        const { x, scalar } = this.getScalar(normalizePrivateKey(privateKey));\n        this.px = x;\n        this.d = scalar;\n        this.rand = ensureBytes(auxRand);\n        if (this.rand.length !== 32)\n            throw new TypeError('sign: Expected 32 bytes of aux randomness');\n    }\n    getScalar(priv) {\n        const point = Point.fromPrivateKey(priv);\n        const scalar = point.hasEvenY() ? priv : CURVE.n - priv;\n        return { point, scalar, x: point.toRawX() };\n    }\n    initNonce(d, t0h) {\n        return numTo32b(d ^ bytesToNumber(t0h));\n    }\n    finalizeNonce(k0h) {\n        const k0 = mod(bytesToNumber(k0h), CURVE.n);\n        if (k0 === _0n)\n            throw new Error('sign: Creation of signature failed. k is zero');\n        const { point: R, x: rx, scalar: k } = this.getScalar(k0);\n        return { R, rx, k };\n    }\n    finalizeSig(R, k, e, d) {\n        return new SchnorrSignature(R.x, mod(k + e * d, CURVE.n)).toRawBytes();\n    }\n    error() {\n        throw new Error('sign: Invalid signature produced');\n    }\n    async calc() {\n        const { m, d, px, rand } = this;\n        const tag = utils.taggedHash;\n        const t = this.initNonce(d, await tag(TAGS.aux, rand));\n        const { R, rx, k } = this.finalizeNonce(await tag(TAGS.nonce, t, px, m));\n        const e = schnorrChallengeFinalize(await tag(TAGS.challenge, rx, px, m));\n        const sig = this.finalizeSig(R, k, e, d);\n        if (!(await schnorrVerify(sig, m, px)))\n            this.error();\n        return sig;\n    }\n    calcSync() {\n        const { m, d, px, rand } = this;\n        const tag = utils.taggedHashSync;\n        const t = this.initNonce(d, tag(TAGS.aux, rand));\n        const { R, rx, k } = this.finalizeNonce(tag(TAGS.nonce, t, px, m));\n        const e = schnorrChallengeFinalize(tag(TAGS.challenge, rx, px, m));\n        const sig = this.finalizeSig(R, k, e, d);\n        if (!schnorrVerifySync(sig, m, px))\n            this.error();\n        return sig;\n    }\n}\nasync function schnorrSign(msg, privKey, auxRand) {\n    return new InternalSchnorrSignature(msg, privKey, auxRand).calc();\n}\nfunction schnorrSignSync(msg, privKey, auxRand) {\n    return new InternalSchnorrSignature(msg, privKey, auxRand).calcSync();\n}\nfunction initSchnorrVerify(signature, message, publicKey) {\n    const raw = signature instanceof SchnorrSignature;\n    const sig = raw ? signature : SchnorrSignature.fromHex(signature);\n    if (raw)\n        sig.assertValidity();\n    return {\n        ...sig,\n        m: ensureBytes(message),\n        P: normalizePublicKey(publicKey),\n    };\n}\nfunction finalizeSchnorrVerify(r, P, s, e) {\n    const R = Point.BASE.multiplyAndAddUnsafe(P, normalizePrivateKey(s), mod(-e, CURVE.n));\n    if (!R || !R.hasEvenY() || R.x !== r)\n        return false;\n    return true;\n}\nasync function schnorrVerify(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = schnorrChallengeFinalize(await utils.taggedHash(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        return false;\n    }\n}\nfunction schnorrVerifySync(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = schnorrChallengeFinalize(utils.taggedHashSync(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        if (error instanceof ShaError)\n            throw error;\n        return false;\n    }\n}\nexport const schnorr = {\n    Signature: SchnorrSignature,\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n    signSync: schnorrSignSync,\n    verifySync: schnorrVerifySync,\n};\nPoint.BASE._setWindowSize(8);\nconst crypto = {\n    node: nodeCrypto,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\nconst TAGS = {\n    challenge: 'BIP0340/challenge',\n    aux: 'BIP0340/aux',\n    nonce: 'BIP0340/nonce',\n};\nconst TAGGED_HASH_PREFIXES = {};\nexport const utils = {\n    bytesToHex,\n    hexToBytes,\n    concatBytes,\n    mod,\n    invert,\n    isValidPrivateKey(privateKey) {\n        try {\n            normalizePrivateKey(privateKey);\n            return true;\n        }\n        catch (error) {\n            return false;\n        }\n    },\n    _bigintTo32Bytes: numTo32b,\n    _normalizePrivateKey: normalizePrivateKey,\n    hashToPrivateKey: (hash) => {\n        hash = ensureBytes(hash);\n        if (hash.length < 40 || hash.length > 1024)\n            throw new Error('Expected 40-1024 bytes of private key as per FIPS 186');\n        const num = mod(bytesToNumber(hash), CURVE.n - _1n) + _1n;\n        return numTo32b(num);\n    },\n    randomBytes: (bytesLength = 32) => {\n        if (crypto.web) {\n            return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n        }\n        else if (crypto.node) {\n            const { randomBytes } = crypto.node;\n            return Uint8Array.from(randomBytes(bytesLength));\n        }\n        else {\n            throw new Error(\"The environment doesn't have randomBytes function\");\n        }\n    },\n    randomPrivateKey: () => {\n        return utils.hashToPrivateKey(utils.randomBytes(40));\n    },\n    sha256: async (...messages) => {\n        if (crypto.web) {\n            const buffer = await crypto.web.subtle.digest('SHA-256', concatBytes(...messages));\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHash } = crypto.node;\n            const hash = createHash('sha256');\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have sha256 function\");\n        }\n    },\n    hmacSha256: async (key, ...messages) => {\n        if (crypto.web) {\n            const ckey = await crypto.web.subtle.importKey('raw', key, { name: 'HMAC', hash: { name: 'SHA-256' } }, false, ['sign']);\n            const message = concatBytes(...messages);\n            const buffer = await crypto.web.subtle.sign('HMAC', ckey, message);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHmac } = crypto.node;\n            const hash = createHmac('sha256', key);\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have hmac-sha256 function\");\n        }\n    },\n    sha256Sync: undefined,\n    hmacSha256Sync: undefined,\n    taggedHash: async (tag, ...messages) => {\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = await utils.sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return utils.sha256(tagP, ...messages);\n    },\n    taggedHashSync: (tag, ...messages) => {\n        if (typeof _sha256Sync !== 'function')\n            throw new ShaError('sha256Sync is undefined, you need to set it');\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = _sha256Sync(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return _sha256Sync(tagP, ...messages);\n    },\n    precompute(windowSize = 8, point = Point.BASE) {\n        const cached = point === Point.BASE ? point : new Point(point.x, point.y);\n        cached._setWindowSize(windowSize);\n        cached.multiply(_3n);\n        return cached;\n    },\n};\nObject.defineProperties(utils, {\n    sha256Sync: {\n        configurable: false,\n        get() {\n            return _sha256Sync;\n        },\n        set(val) {\n            if (!_sha256Sync)\n                _sha256Sync = val;\n        },\n    },\n    hmacSha256Sync: {\n        configurable: false,\n        get() {\n            return _hmacSha256Sync;\n        },\n        set(val) {\n            if (!_hmacSha256Sync)\n                _hmacSha256Sync = val;\n        },\n    },\n});\n","import {sha512} from '@noble/hashes/sha512';\nimport * as ed25519 from '@noble/ed25519';\n\n/**\n * A 64 byte secret key, the first 32 bytes of which is the\n * private scalar and the last 32 bytes is the public key.\n * Read more: https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/\n */\ntype Ed25519SecretKey = Uint8Array;\n\n/**\n * Ed25519 Keypair\n */\nexport interface Ed25519Keypair {\n  publicKey: Uint8Array;\n  secretKey: Ed25519SecretKey;\n}\n\ned25519.utils.sha512Sync = (...m) => sha512(ed25519.utils.concatBytes(...m));\n\nexport const generatePrivateKey = ed25519.utils.randomPrivateKey;\nexport const generateKeypair = (): Ed25519Keypair => {\n  const privateScalar = ed25519.utils.randomPrivateKey();\n  const publicKey = getPublicKey(privateScalar);\n  const secretKey = new Uint8Array(64);\n  secretKey.set(privateScalar);\n  secretKey.set(publicKey, 32);\n  return {\n    publicKey,\n    secretKey,\n  };\n};\nexport const getPublicKey = ed25519.sync.getPublicKey;\nexport function isOnCurve(publicKey: Uint8Array): boolean {\n  try {\n    ed25519.Point.fromHex(publicKey, true /* strict */);\n    return true;\n  } catch {\n    return false;\n  }\n}\nexport const sign = (\n  message: Parameters<typeof ed25519.sync.sign>[0],\n  secretKey: Ed25519SecretKey,\n) => ed25519.sync.sign(message, secretKey.slice(0, 32));\nexport const verify = ed25519.sync.verify;\n","import {Buffer} from 'buffer';\n\nexport const toBuffer = (arr: Buffer | Uint8Array | Array<number>): Buffer => {\n  if (Buffer.isBuffer(arr)) {\n    return arr;\n  } else if (arr instanceof Uint8Array) {\n    return Buffer.from(arr.buffer, arr.byteOffset, arr.byteLength);\n  } else {\n    return Buffer.from(arr);\n  }\n};\n","import {Buffer} from 'buffer';\nimport {serialize, deserialize, deserializeUnchecked} from 'borsh';\n\n// Class wrapping a plain object\nexport class Struct {\n  constructor(properties: any) {\n    Object.assign(this, properties);\n  }\n\n  encode(): Buffer {\n    return Buffer.from(serialize(SOLANA_SCHEMA, this));\n  }\n\n  static decode(data: Buffer): any {\n    return deserialize(SOLANA_SCHEMA, this, data);\n  }\n\n  static decodeUnchecked(data: Buffer): any {\n    return deserializeUnchecked(SOLANA_SCHEMA, this, data);\n  }\n}\n\n// Class representing a Rust-compatible enum, since enums are only strings or\n// numbers in pure JS\nexport class Enum extends Struct {\n  enum: string = '';\n  constructor(properties: any) {\n    super(properties);\n    if (Object.keys(properties).length !== 1) {\n      throw new Error('Enum can only take single value');\n    }\n    Object.keys(properties).map(key => {\n      this.enum = key;\n    });\n  }\n}\n\nexport const SOLANA_SCHEMA: Map<Function, any> = new Map();\n","import BN from 'bn.js';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport {sha256} from '@noble/hashes/sha256';\n\nimport {isOnCurve} from './utils/ed25519';\nimport {Struct, SOLANA_SCHEMA} from './utils/borsh-schema';\nimport {toBuffer} from './utils/to-buffer';\n\n/**\n * Maximum length of derived pubkey seed\n */\nexport const MAX_SEED_LENGTH = 32;\n\n/**\n * Size of public key in bytes\n */\nexport const PUBLIC_KEY_LENGTH = 32;\n\n/**\n * Value to be converted into public key\n */\nexport type PublicKeyInitData =\n  | number\n  | string\n  | Uint8Array\n  | Array<number>\n  | PublicKeyData;\n\n/**\n * JSON object representation of PublicKey class\n */\nexport type PublicKeyData = {\n  /** @internal */\n  _bn: BN;\n};\n\nfunction isPublicKeyData(value: PublicKeyInitData): value is PublicKeyData {\n  return (value as PublicKeyData)._bn !== undefined;\n}\n\n// local counter used by PublicKey.unique()\nlet uniquePublicKeyCounter = 1;\n\n/**\n * A public key\n */\nexport class PublicKey extends Struct {\n  /** @internal */\n  _bn: BN;\n\n  /**\n   * Create a new PublicKey object\n   * @param value ed25519 public key as buffer or base-58 encoded string\n   */\n  constructor(value: PublicKeyInitData) {\n    super({});\n    if (isPublicKeyData(value)) {\n      this._bn = value._bn;\n    } else {\n      if (typeof value === 'string') {\n        // assume base 58 encoding by default\n        const decoded = bs58.decode(value);\n        if (decoded.length != PUBLIC_KEY_LENGTH) {\n          throw new Error(`Invalid public key input`);\n        }\n        this._bn = new BN(decoded);\n      } else {\n        this._bn = new BN(value);\n      }\n\n      if (this._bn.byteLength() > 32) {\n        throw new Error(`Invalid public key input`);\n      }\n    }\n  }\n\n  /**\n   * Returns a unique PublicKey for tests and benchmarks using acounter\n   */\n  static unique(): PublicKey {\n    const key = new PublicKey(uniquePublicKeyCounter);\n    uniquePublicKeyCounter += 1;\n    return new PublicKey(key.toBuffer());\n  }\n\n  /**\n   * Default public key value. (All zeros)\n   */\n  static default: PublicKey = new PublicKey('11111111111111111111111111111111');\n\n  /**\n   * Checks if two publicKeys are equal\n   */\n  equals(publicKey: PublicKey): boolean {\n    return this._bn.eq(publicKey._bn);\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toBase58(): string {\n    return bs58.encode(this.toBytes());\n  }\n\n  toJSON(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Return the byte array representation of the public key\n   */\n  toBytes(): Uint8Array {\n    return this.toBuffer();\n  }\n\n  /**\n   * Return the Buffer representation of the public key\n   */\n  toBuffer(): Buffer {\n    const b = this._bn.toArrayLike(Buffer);\n    if (b.length === PUBLIC_KEY_LENGTH) {\n      return b;\n    }\n\n    const zeroPad = Buffer.alloc(32);\n    b.copy(zeroPad, 32 - b.length);\n    return zeroPad;\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toString(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Derive a public key from another key, a seed, and a program ID.\n   * The program ID will also serve as the owner of the public key, giving\n   * it permission to write data to the account.\n   */\n  /* eslint-disable require-await */\n  static async createWithSeed(\n    fromPublicKey: PublicKey,\n    seed: string,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    const buffer = Buffer.concat([\n      fromPublicKey.toBuffer(),\n      Buffer.from(seed),\n      programId.toBuffer(),\n    ]);\n    const publicKeyBytes = sha256(buffer);\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Derive a program address from seeds and a program ID.\n   */\n  /* eslint-disable require-await */\n  static createProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): PublicKey {\n    let buffer = Buffer.alloc(0);\n    seeds.forEach(function (seed) {\n      if (seed.length > MAX_SEED_LENGTH) {\n        throw new TypeError(`Max seed length exceeded`);\n      }\n      buffer = Buffer.concat([buffer, toBuffer(seed)]);\n    });\n    buffer = Buffer.concat([\n      buffer,\n      programId.toBuffer(),\n      Buffer.from('ProgramDerivedAddress'),\n    ]);\n    const publicKeyBytes = sha256(buffer);\n    if (isOnCurve(publicKeyBytes)) {\n      throw new Error(`Invalid seeds, address must fall off the curve`);\n    }\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Async version of createProgramAddressSync\n   * For backwards compatibility\n   */\n  /* eslint-disable require-await */\n  static async createProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    return this.createProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Find a valid program address\n   *\n   * Valid program addresses must fall off the ed25519 curve.  This function\n   * iterates a nonce until it finds one that when combined with the seeds\n   * results in a valid program address.\n   */\n  static findProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): [PublicKey, number] {\n    let nonce = 255;\n    let address;\n    while (nonce != 0) {\n      try {\n        const seedsWithNonce = seeds.concat(Buffer.from([nonce]));\n        address = this.createProgramAddressSync(seedsWithNonce, programId);\n      } catch (err) {\n        if (err instanceof TypeError) {\n          throw err;\n        }\n        nonce--;\n        continue;\n      }\n      return [address, nonce];\n    }\n    throw new Error(`Unable to find a viable program address nonce`);\n  }\n\n  /**\n   * Async version of findProgramAddressSync\n   * For backwards compatibility\n   */\n  static async findProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<[PublicKey, number]> {\n    return this.findProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Check that a pubkey is on the ed25519 curve.\n   */\n  static isOnCurve(pubkeyData: PublicKeyInitData): boolean {\n    const pubkey = new PublicKey(pubkeyData);\n    return isOnCurve(pubkey.toBytes());\n  }\n}\n\nSOLANA_SCHEMA.set(PublicKey, {\n  kind: 'struct',\n  fields: [['_bn', 'u256']],\n});\n","import {PublicKey} from './publickey';\n\nexport const BPF_LOADER_DEPRECATED_PROGRAM_ID = new PublicKey(\n  'BPFLoader1111111111111111111111111111111111',\n);\n","/**\n * Maximum over-the-wire size of a Transaction\n *\n * 1280 is IPv6 minimum MTU\n * 40 bytes is the size of the IPv6 header\n * 8 bytes is the size of the fragment header\n */\nexport const PACKET_DATA_SIZE = 1280 - 40 - 8;\n\nexport const VERSION_PREFIX_MASK = 0x7f;\n\nexport const SIGNATURE_LENGTH_IN_BYTES = 64;\n","export class TransactionExpiredBlockheightExceededError extends Error {\n  signature: string;\n\n  constructor(signature: string) {\n    super(`Signature ${signature} has expired: block height exceeded.`);\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(\n  TransactionExpiredBlockheightExceededError.prototype,\n  'name',\n  {\n    value: 'TransactionExpiredBlockheightExceededError',\n  },\n);\n\nexport class TransactionExpiredTimeoutError extends Error {\n  signature: string;\n\n  constructor(signature: string, timeoutSeconds: number) {\n    super(\n      `Transaction was not confirmed in ${timeoutSeconds.toFixed(\n        2,\n      )} seconds. It is ` +\n        'unknown if it succeeded or failed. Check signature ' +\n        `${signature} using the Solana Explorer or CLI tools.`,\n    );\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(TransactionExpiredTimeoutError.prototype, 'name', {\n  value: 'TransactionExpiredTimeoutError',\n});\n","import {LoadedAddresses} from '../connection';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport {MessageCompiledInstruction} from './index';\n\nexport type AccountKeysFromLookups = LoadedAddresses;\n\nexport class MessageAccountKeys {\n  staticAccountKeys: Array<PublicKey>;\n  accountKeysFromLookups?: AccountKeysFromLookups;\n\n  constructor(\n    staticAccountKeys: Array<PublicKey>,\n    accountKeysFromLookups?: AccountKeysFromLookups,\n  ) {\n    this.staticAccountKeys = staticAccountKeys;\n    this.accountKeysFromLookups = accountKeysFromLookups;\n  }\n\n  keySegments(): Array<Array<PublicKey>> {\n    const keySegments = [this.staticAccountKeys];\n    if (this.accountKeysFromLookups) {\n      keySegments.push(this.accountKeysFromLookups.writable);\n      keySegments.push(this.accountKeysFromLookups.readonly);\n    }\n    return keySegments;\n  }\n\n  get(index: number): PublicKey | undefined {\n    for (const keySegment of this.keySegments()) {\n      if (index < keySegment.length) {\n        return keySegment[index];\n      } else {\n        index -= keySegment.length;\n      }\n    }\n    return;\n  }\n\n  get length(): number {\n    return this.keySegments().flat().length;\n  }\n\n  compileInstructions(\n    instructions: Array<TransactionInstruction>,\n  ): Array<MessageCompiledInstruction> {\n    // Bail early if any account indexes would overflow a u8\n    const U8_MAX = 255;\n    if (this.length > U8_MAX + 1) {\n      throw new Error('Account index overflow encountered during compilation');\n    }\n\n    const keyIndexMap = new Map();\n    this.keySegments()\n      .flat()\n      .forEach((key, index) => {\n        keyIndexMap.set(key.toBase58(), index);\n      });\n\n    const findKeyIndex = (key: PublicKey) => {\n      const keyIndex = keyIndexMap.get(key.toBase58());\n      if (keyIndex === undefined)\n        throw new Error(\n          'Encountered an unknown instruction account key during compilation',\n        );\n      return keyIndex;\n    };\n\n    return instructions.map((instruction): MessageCompiledInstruction => {\n      return {\n        programIdIndex: findKeyIndex(instruction.programId),\n        accountKeyIndexes: instruction.keys.map(meta =>\n          findKeyIndex(meta.pubkey),\n        ),\n        data: instruction.data,\n      };\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {VoteAuthorizeWithSeedArgs} from './programs/vote';\n\n/**\n * Layout for a public key\n */\nexport const publicKey = (property: string = 'publicKey') => {\n  return BufferLayout.blob(32, property);\n};\n\n/**\n * Layout for a signature\n */\nexport const signature = (property: string = 'signature') => {\n  return BufferLayout.blob(64, property);\n};\n\n/**\n * Layout for a 64bit unsigned value\n */\nexport const uint64 = (property: string = 'uint64') => {\n  return BufferLayout.blob(8, property);\n};\n\ninterface IRustStringShim\n  extends Omit<\n    BufferLayout.Structure<\n      Readonly<{\n        length: number;\n        lengthPadding: number;\n        chars: Uint8Array;\n      }>\n    >,\n    'decode' | 'encode' | 'replicate'\n  > {\n  alloc: (str: string) => number;\n  decode: (b: Uint8Array, offset?: number) => string;\n  encode: (str: string, b: Uint8Array, offset?: number) => number;\n  replicate: (property: string) => this;\n}\n\n/**\n * Layout for a Rust String type\n */\nexport const rustString = (\n  property: string = 'string',\n): BufferLayout.Layout<string> => {\n  const rsl = BufferLayout.struct<\n    Readonly<{\n      length?: number;\n      lengthPadding?: number;\n      chars: Uint8Array;\n    }>\n  >(\n    [\n      BufferLayout.u32('length'),\n      BufferLayout.u32('lengthPadding'),\n      BufferLayout.blob(BufferLayout.offset(BufferLayout.u32(), -8), 'chars'),\n    ],\n    property,\n  );\n  const _decode = rsl.decode.bind(rsl);\n  const _encode = rsl.encode.bind(rsl);\n\n  const rslShim = rsl as unknown as IRustStringShim;\n\n  rslShim.decode = (b: Uint8Array, offset?: number) => {\n    const data = _decode(b, offset);\n    return data['chars'].toString();\n  };\n\n  rslShim.encode = (str: string, b: Uint8Array, offset?: number) => {\n    const data = {\n      chars: Buffer.from(str, 'utf8'),\n    };\n    return _encode(data, b, offset);\n  };\n\n  rslShim.alloc = (str: string) => {\n    return (\n      BufferLayout.u32().span +\n      BufferLayout.u32().span +\n      Buffer.from(str, 'utf8').length\n    );\n  };\n\n  return rslShim;\n};\n\n/**\n * Layout for an Authorized object\n */\nexport const authorized = (property: string = 'authorized') => {\n  return BufferLayout.struct<\n    Readonly<{\n      staker: Uint8Array;\n      withdrawer: Uint8Array;\n    }>\n  >([publicKey('staker'), publicKey('withdrawer')], property);\n};\n\n/**\n * Layout for a Lockup object\n */\nexport const lockup = (property: string = 'lockup') => {\n  return BufferLayout.struct<\n    Readonly<{\n      custodian: Uint8Array;\n      epoch: number;\n      unixTimestamp: number;\n    }>\n  >(\n    [\n      BufferLayout.ns64('unixTimestamp'),\n      BufferLayout.ns64('epoch'),\n      publicKey('custodian'),\n    ],\n    property,\n  );\n};\n\n/**\n *  Layout for a VoteInit object\n */\nexport const voteInit = (property: string = 'voteInit') => {\n  return BufferLayout.struct<\n    Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>\n  >(\n    [\n      publicKey('nodePubkey'),\n      publicKey('authorizedVoter'),\n      publicKey('authorizedWithdrawer'),\n      BufferLayout.u8('commission'),\n    ],\n    property,\n  );\n};\n\n/**\n *  Layout for a VoteAuthorizeWithSeedArgs object\n */\nexport const voteAuthorizeWithSeedArgs = (\n  property: string = 'voteAuthorizeWithSeedArgs',\n) => {\n  return BufferLayout.struct<VoteAuthorizeWithSeedArgs>(\n    [\n      BufferLayout.u32('voteAuthorizationType'),\n      publicKey('currentAuthorityDerivedKeyOwnerPubkey'),\n      rustString('currentAuthorityDerivedKeySeed'),\n      publicKey('newAuthorized'),\n    ],\n    property,\n  );\n};\n\nexport function getAlloc(type: any, fields: any): number {\n  const getItemAlloc = (item: any): number => {\n    if (item.span >= 0) {\n      return item.span;\n    } else if (typeof item.alloc === 'function') {\n      return item.alloc(fields[item.property]);\n    } else if ('count' in item && 'elementLayout' in item) {\n      const field = fields[item.property];\n      if (Array.isArray(field)) {\n        return field.length * getItemAlloc(item.elementLayout);\n      }\n    } else if ('fields' in item) {\n      // This is a `Structure` whose size needs to be recursively measured.\n      return getAlloc({layout: item}, fields[item.property]);\n    }\n    // Couldn't determine allocated size of layout\n    return 0;\n  };\n\n  let alloc = 0;\n  type.layout.fields.forEach((item: any) => {\n    alloc += getItemAlloc(item);\n  });\n\n  return alloc;\n}\n","export function decodeLength(bytes: Array<number>): number {\n  let len = 0;\n  let size = 0;\n  for (;;) {\n    let elem = bytes.shift() as number;\n    len |= (elem & 0x7f) << (size * 7);\n    size += 1;\n    if ((elem & 0x80) === 0) {\n      break;\n    }\n  }\n  return len;\n}\n\nexport function encodeLength(bytes: Array<number>, len: number) {\n  let rem_len = len;\n  for (;;) {\n    let elem = rem_len & 0x7f;\n    rem_len >>= 7;\n    if (rem_len == 0) {\n      bytes.push(elem);\n      break;\n    } else {\n      elem |= 0x80;\n      bytes.push(elem);\n    }\n  }\n}\n","export default function (\n  condition: unknown,\n  message?: string,\n): asserts condition {\n  if (!condition) {\n    throw new Error(message || 'Assertion failed');\n  }\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n\nimport {PACKET_DATA_SIZE, SIGNATURE_LENGTH_IN_BYTES} from './constants';\nimport {Connection} from '../connection';\nimport {Message} from '../message';\nimport {PublicKey} from '../publickey';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport {toBuffer} from '../utils/to-buffer';\nimport invariant from '../utils/assert';\nimport type {Signer} from '../keypair';\nimport type {Blockhash} from '../blockhash';\nimport type {CompiledInstruction} from '../message';\nimport {sign, verify} from '../utils/ed25519';\n\n/**\n * Transaction signature as base-58 encoded string\n */\nexport type TransactionSignature = string;\n\nexport const enum TransactionStatus {\n  BLOCKHEIGHT_EXCEEDED,\n  PROCESSED,\n  TIMED_OUT,\n}\n\n/**\n * Default (empty) signature\n */\nconst DEFAULT_SIGNATURE = Buffer.alloc(SIGNATURE_LENGTH_IN_BYTES).fill(0);\n\n/**\n * Account metadata used to define instructions\n */\nexport type AccountMeta = {\n  /** An account's public key */\n  pubkey: PublicKey;\n  /** True if an instruction requires a transaction signature matching `pubkey` */\n  isSigner: boolean;\n  /** True if the `pubkey` can be loaded as a read-write account. */\n  isWritable: boolean;\n};\n\n/**\n * List of TransactionInstruction object fields that may be initialized at construction\n */\nexport type TransactionInstructionCtorFields = {\n  keys: Array<AccountMeta>;\n  programId: PublicKey;\n  data?: Buffer;\n};\n\n/**\n * Configuration object for Transaction.serialize()\n */\nexport type SerializeConfig = {\n  /** Require all transaction signatures be present (default: true) */\n  requireAllSignatures?: boolean;\n  /** Verify provided signatures (default: true) */\n  verifySignatures?: boolean;\n};\n\n/**\n * @internal\n */\nexport interface TransactionInstructionJSON {\n  keys: {\n    pubkey: string;\n    isSigner: boolean;\n    isWritable: boolean;\n  }[];\n  programId: string;\n  data: number[];\n}\n\n/**\n * Transaction Instruction class\n */\nexport class TransactionInstruction {\n  /**\n   * Public keys to include in this transaction\n   * Boolean represents whether this pubkey needs to sign the transaction\n   */\n  keys: Array<AccountMeta>;\n\n  /**\n   * Program Id to execute\n   */\n  programId: PublicKey;\n\n  /**\n   * Program input\n   */\n  data: Buffer = Buffer.alloc(0);\n\n  constructor(opts: TransactionInstructionCtorFields) {\n    this.programId = opts.programId;\n    this.keys = opts.keys;\n    if (opts.data) {\n      this.data = opts.data;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionInstructionJSON {\n    return {\n      keys: this.keys.map(({pubkey, isSigner, isWritable}) => ({\n        pubkey: pubkey.toJSON(),\n        isSigner,\n        isWritable,\n      })),\n      programId: this.programId.toJSON(),\n      data: [...this.data],\n    };\n  }\n}\n\n/**\n * Pair of signature and corresponding public key\n */\nexport type SignaturePubkeyPair = {\n  signature: Buffer | null;\n  publicKey: PublicKey;\n};\n\n/**\n * List of Transaction object fields that may be initialized at construction\n */\nexport type TransactionCtorFields_DEPRECATED = {\n  /** Optional nonce information used for offline nonce'd transactions */\n  nonceInfo?: NonceInformation | null;\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  recentBlockhash?: Blockhash;\n};\n\n// For backward compatibility; an unfortunate consequence of being\n// forced to over-export types by the documentation generator.\n// See https://github.com/solana-labs/solana/pull/25820\nexport type TransactionCtorFields = TransactionCtorFields_DEPRECATED;\n\n/**\n * List of Transaction object fields that may be initialized at construction\n */\nexport type TransactionBlockhashCtor = {\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  blockhash: Blockhash;\n  /** the last block chain can advance to before tx is declared expired */\n  lastValidBlockHeight: number;\n};\n\n/**\n * Nonce information to be used to build an offline Transaction.\n */\nexport type NonceInformation = {\n  /** The current blockhash stored in the nonce */\n  nonce: Blockhash;\n  /** AdvanceNonceAccount Instruction */\n  nonceInstruction: TransactionInstruction;\n};\n\n/**\n * @internal\n */\nexport interface TransactionJSON {\n  recentBlockhash: string | null;\n  feePayer: string | null;\n  nonceInfo: {\n    nonce: string;\n    nonceInstruction: TransactionInstructionJSON;\n  } | null;\n  instructions: TransactionInstructionJSON[];\n  signers: string[];\n}\n\n/**\n * Transaction class\n */\nexport class Transaction {\n  /**\n   * Signatures for the transaction.  Typically created by invoking the\n   * `sign()` method\n   */\n  signatures: Array<SignaturePubkeyPair> = [];\n\n  /**\n   * The first (payer) Transaction signature\n   */\n  get signature(): Buffer | null {\n    if (this.signatures.length > 0) {\n      return this.signatures[0].signature;\n    }\n    return null;\n  }\n\n  /**\n   * The transaction fee payer\n   */\n  feePayer?: PublicKey;\n\n  /**\n   * The instructions to atomically execute\n   */\n  instructions: Array<TransactionInstruction> = [];\n\n  /**\n   * A recent transaction id. Must be populated by the caller\n   */\n  recentBlockhash?: Blockhash;\n\n  /**\n   * the last block chain can advance to before tx is declared expired\n   * */\n  lastValidBlockHeight?: number;\n\n  /**\n   * Optional Nonce information. If populated, transaction will use a durable\n   * Nonce hash instead of a recentBlockhash. Must be populated by the caller\n   */\n  nonceInfo?: NonceInformation;\n\n  /**\n   * @internal\n   */\n  _message?: Message;\n\n  /**\n   * @internal\n   */\n  _json?: TransactionJSON;\n\n  // Construct a transaction with a blockhash and lastValidBlockHeight\n  constructor(opts?: TransactionBlockhashCtor);\n\n  /**\n   * @deprecated `TransactionCtorFields` has been deprecated and will be removed in a future version.\n   * Please supply a `TransactionBlockhashCtor` instead.\n   */\n  constructor(opts?: TransactionCtorFields_DEPRECATED);\n\n  /**\n   * Construct an empty Transaction\n   */\n  constructor(\n    opts?: TransactionBlockhashCtor | TransactionCtorFields_DEPRECATED,\n  ) {\n    if (!opts) {\n      return;\n    }\n    if (opts.feePayer) {\n      this.feePayer = opts.feePayer;\n    }\n    if (opts.signatures) {\n      this.signatures = opts.signatures;\n    }\n    if (Object.prototype.hasOwnProperty.call(opts, 'lastValidBlockHeight')) {\n      const {blockhash, lastValidBlockHeight} =\n        opts as TransactionBlockhashCtor;\n      this.recentBlockhash = blockhash;\n      this.lastValidBlockHeight = lastValidBlockHeight;\n    } else {\n      const {recentBlockhash, nonceInfo} =\n        opts as TransactionCtorFields_DEPRECATED;\n      if (nonceInfo) {\n        this.nonceInfo = nonceInfo;\n      }\n      this.recentBlockhash = recentBlockhash;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionJSON {\n    return {\n      recentBlockhash: this.recentBlockhash || null,\n      feePayer: this.feePayer ? this.feePayer.toJSON() : null,\n      nonceInfo: this.nonceInfo\n        ? {\n            nonce: this.nonceInfo.nonce,\n            nonceInstruction: this.nonceInfo.nonceInstruction.toJSON(),\n          }\n        : null,\n      instructions: this.instructions.map(instruction => instruction.toJSON()),\n      signers: this.signatures.map(({publicKey}) => {\n        return publicKey.toJSON();\n      }),\n    };\n  }\n\n  /**\n   * Add one or more instructions to this Transaction\n   */\n  add(\n    ...items: Array<\n      Transaction | TransactionInstruction | TransactionInstructionCtorFields\n    >\n  ): Transaction {\n    if (items.length === 0) {\n      throw new Error('No instructions');\n    }\n\n    items.forEach((item: any) => {\n      if ('instructions' in item) {\n        this.instructions = this.instructions.concat(item.instructions);\n      } else if ('data' in item && 'programId' in item && 'keys' in item) {\n        this.instructions.push(item);\n      } else {\n        this.instructions.push(new TransactionInstruction(item));\n      }\n    });\n    return this;\n  }\n\n  /**\n   * Compile transaction data\n   */\n  compileMessage(): Message {\n    if (\n      this._message &&\n      JSON.stringify(this.toJSON()) === JSON.stringify(this._json)\n    ) {\n      return this._message;\n    }\n\n    let recentBlockhash;\n    let instructions: TransactionInstruction[];\n    if (this.nonceInfo) {\n      recentBlockhash = this.nonceInfo.nonce;\n      if (this.instructions[0] != this.nonceInfo.nonceInstruction) {\n        instructions = [this.nonceInfo.nonceInstruction, ...this.instructions];\n      } else {\n        instructions = this.instructions;\n      }\n    } else {\n      recentBlockhash = this.recentBlockhash;\n      instructions = this.instructions;\n    }\n    if (!recentBlockhash) {\n      throw new Error('Transaction recentBlockhash required');\n    }\n\n    if (instructions.length < 1) {\n      console.warn('No instructions provided');\n    }\n\n    let feePayer: PublicKey;\n    if (this.feePayer) {\n      feePayer = this.feePayer;\n    } else if (this.signatures.length > 0 && this.signatures[0].publicKey) {\n      // Use implicit fee payer\n      feePayer = this.signatures[0].publicKey;\n    } else {\n      throw new Error('Transaction fee payer required');\n    }\n\n    for (let i = 0; i < instructions.length; i++) {\n      if (instructions[i].programId === undefined) {\n        throw new Error(\n          `Transaction instruction index ${i} has undefined program id`,\n        );\n      }\n    }\n\n    const programIds: string[] = [];\n    const accountMetas: AccountMeta[] = [];\n    instructions.forEach(instruction => {\n      instruction.keys.forEach(accountMeta => {\n        accountMetas.push({...accountMeta});\n      });\n\n      const programId = instruction.programId.toString();\n      if (!programIds.includes(programId)) {\n        programIds.push(programId);\n      }\n    });\n\n    // Append programID account metas\n    programIds.forEach(programId => {\n      accountMetas.push({\n        pubkey: new PublicKey(programId),\n        isSigner: false,\n        isWritable: false,\n      });\n    });\n\n    // Cull duplicate account metas\n    const uniqueMetas: AccountMeta[] = [];\n    accountMetas.forEach(accountMeta => {\n      const pubkeyString = accountMeta.pubkey.toString();\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.toString() === pubkeyString;\n      });\n      if (uniqueIndex > -1) {\n        uniqueMetas[uniqueIndex].isWritable =\n          uniqueMetas[uniqueIndex].isWritable || accountMeta.isWritable;\n        uniqueMetas[uniqueIndex].isSigner =\n          uniqueMetas[uniqueIndex].isSigner || accountMeta.isSigner;\n      } else {\n        uniqueMetas.push(accountMeta);\n      }\n    });\n\n    // Sort. Prioritizing first by signer, then by writable\n    uniqueMetas.sort(function (x, y) {\n      if (x.isSigner !== y.isSigner) {\n        // Signers always come before non-signers\n        return x.isSigner ? -1 : 1;\n      }\n      if (x.isWritable !== y.isWritable) {\n        // Writable accounts always come before read-only accounts\n        return x.isWritable ? -1 : 1;\n      }\n      // Otherwise, sort by pubkey, stringwise.\n      return x.pubkey.toBase58().localeCompare(y.pubkey.toBase58());\n    });\n\n    // Move fee payer to the front\n    const feePayerIndex = uniqueMetas.findIndex(x => {\n      return x.pubkey.equals(feePayer);\n    });\n    if (feePayerIndex > -1) {\n      const [payerMeta] = uniqueMetas.splice(feePayerIndex, 1);\n      payerMeta.isSigner = true;\n      payerMeta.isWritable = true;\n      uniqueMetas.unshift(payerMeta);\n    } else {\n      uniqueMetas.unshift({\n        pubkey: feePayer,\n        isSigner: true,\n        isWritable: true,\n      });\n    }\n\n    // Disallow unknown signers\n    for (const signature of this.signatures) {\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.equals(signature.publicKey);\n      });\n      if (uniqueIndex > -1) {\n        if (!uniqueMetas[uniqueIndex].isSigner) {\n          uniqueMetas[uniqueIndex].isSigner = true;\n          console.warn(\n            'Transaction references a signature that is unnecessary, ' +\n              'only the fee payer and instruction signer accounts should sign a transaction. ' +\n              'This behavior is deprecated and will throw an error in the next major version release.',\n          );\n        }\n      } else {\n        throw new Error(`unknown signer: ${signature.publicKey.toString()}`);\n      }\n    }\n\n    let numRequiredSignatures = 0;\n    let numReadonlySignedAccounts = 0;\n    let numReadonlyUnsignedAccounts = 0;\n\n    // Split out signing from non-signing keys and count header values\n    const signedKeys: string[] = [];\n    const unsignedKeys: string[] = [];\n    uniqueMetas.forEach(({pubkey, isSigner, isWritable}) => {\n      if (isSigner) {\n        signedKeys.push(pubkey.toString());\n        numRequiredSignatures += 1;\n        if (!isWritable) {\n          numReadonlySignedAccounts += 1;\n        }\n      } else {\n        unsignedKeys.push(pubkey.toString());\n        if (!isWritable) {\n          numReadonlyUnsignedAccounts += 1;\n        }\n      }\n    });\n\n    const accountKeys = signedKeys.concat(unsignedKeys);\n    const compiledInstructions: CompiledInstruction[] = instructions.map(\n      instruction => {\n        const {data, programId} = instruction;\n        return {\n          programIdIndex: accountKeys.indexOf(programId.toString()),\n          accounts: instruction.keys.map(meta =>\n            accountKeys.indexOf(meta.pubkey.toString()),\n          ),\n          data: bs58.encode(data),\n        };\n      },\n    );\n\n    compiledInstructions.forEach(instruction => {\n      invariant(instruction.programIdIndex >= 0);\n      instruction.accounts.forEach(keyIndex => invariant(keyIndex >= 0));\n    });\n\n    return new Message({\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      accountKeys,\n      recentBlockhash,\n      instructions: compiledInstructions,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _compile(): Message {\n    const message = this.compileMessage();\n    const signedKeys = message.accountKeys.slice(\n      0,\n      message.header.numRequiredSignatures,\n    );\n\n    if (this.signatures.length === signedKeys.length) {\n      const valid = this.signatures.every((pair, index) => {\n        return signedKeys[index].equals(pair.publicKey);\n      });\n\n      if (valid) return message;\n    }\n\n    this.signatures = signedKeys.map(publicKey => ({\n      signature: null,\n      publicKey,\n    }));\n\n    return message;\n  }\n\n  /**\n   * Get a buffer of the Transaction data that need to be covered by signatures\n   */\n  serializeMessage(): Buffer {\n    return this._compile().serialize();\n  }\n\n  /**\n   * Get the estimated fee associated with a transaction\n   */\n  async getEstimatedFee(connection: Connection): Promise<number> {\n    return (await connection.getFeeForMessage(this.compileMessage())).value;\n  }\n\n  /**\n   * Specify the public keys which will be used to sign the Transaction.\n   * The first signer will be used as the transaction fee payer account.\n   *\n   * Signatures can be added with either `partialSign` or `addSignature`\n   *\n   * @deprecated Deprecated since v0.84.0. Only the fee payer needs to be\n   * specified and it can be set in the Transaction constructor or with the\n   * `feePayer` property.\n   */\n  setSigners(...signers: Array<PublicKey>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    const seen = new Set();\n    this.signatures = signers\n      .filter(publicKey => {\n        const key = publicKey.toString();\n        if (seen.has(key)) {\n          return false;\n        } else {\n          seen.add(key);\n          return true;\n        }\n      })\n      .map(publicKey => ({signature: null, publicKey}));\n  }\n\n  /**\n   * Sign the Transaction with the specified signers. Multiple signatures may\n   * be applied to a Transaction. The first signature is considered \"primary\"\n   * and is used identify and confirm transactions.\n   *\n   * If the Transaction `feePayer` is not set, the first signer will be used\n   * as the transaction fee payer account.\n   *\n   * Transaction fields should not be modified after the first call to `sign`,\n   * as doing so may invalidate the signature and cause the Transaction to be\n   * rejected.\n   *\n   * The Transaction must be assigned a valid `recentBlockhash` before invoking this method\n   */\n  sign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    this.signatures = uniqueSigners.map(signer => ({\n      signature: null,\n      publicKey: signer.publicKey,\n    }));\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * Partially sign a transaction with the specified accounts. All accounts must\n   * correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * All the caveats from the `sign` method apply to `partialSign`\n   */\n  partialSign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * @internal\n   */\n  _partialSign(message: Message, ...signers: Array<Signer>) {\n    const signData = message.serialize();\n    signers.forEach(signer => {\n      const signature = sign(signData, signer.secretKey);\n      this._addSignature(signer.publicKey, toBuffer(signature));\n    });\n  }\n\n  /**\n   * Add an externally created signature to a transaction. The public key\n   * must correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   */\n  addSignature(pubkey: PublicKey, signature: Buffer) {\n    this._compile(); // Ensure signatures array is populated\n    this._addSignature(pubkey, signature);\n  }\n\n  /**\n   * @internal\n   */\n  _addSignature(pubkey: PublicKey, signature: Buffer) {\n    invariant(signature.length === 64);\n\n    const index = this.signatures.findIndex(sigpair =>\n      pubkey.equals(sigpair.publicKey),\n    );\n    if (index < 0) {\n      throw new Error(`unknown signer: ${pubkey.toString()}`);\n    }\n\n    this.signatures[index].signature = Buffer.from(signature);\n  }\n\n  /**\n   * Verify signatures of a complete, signed Transaction\n   */\n  verifySignatures(): boolean {\n    return this._verifySignatures(this.serializeMessage(), true);\n  }\n\n  /**\n   * @internal\n   */\n  _verifySignatures(signData: Buffer, requireAllSignatures: boolean): boolean {\n    for (const {signature, publicKey} of this.signatures) {\n      if (signature === null) {\n        if (requireAllSignatures) {\n          return false;\n        }\n      } else {\n        if (!verify(signature, signData, publicKey.toBuffer())) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Serialize the Transaction in the wire format.\n   */\n  serialize(config?: SerializeConfig): Buffer {\n    const {requireAllSignatures, verifySignatures} = Object.assign(\n      {requireAllSignatures: true, verifySignatures: true},\n      config,\n    );\n\n    const signData = this.serializeMessage();\n    if (\n      verifySignatures &&\n      !this._verifySignatures(signData, requireAllSignatures)\n    ) {\n      throw new Error('Signature verification failed');\n    }\n\n    return this._serialize(signData);\n  }\n\n  /**\n   * @internal\n   */\n  _serialize(signData: Buffer): Buffer {\n    const {signatures} = this;\n    const signatureCount: number[] = [];\n    shortvec.encodeLength(signatureCount, signatures.length);\n    const transactionLength =\n      signatureCount.length + signatures.length * 64 + signData.length;\n    const wireTransaction = Buffer.alloc(transactionLength);\n    invariant(signatures.length < 256);\n    Buffer.from(signatureCount).copy(wireTransaction, 0);\n    signatures.forEach(({signature}, index) => {\n      if (signature !== null) {\n        invariant(signature.length === 64, `signature has invalid length`);\n        Buffer.from(signature).copy(\n          wireTransaction,\n          signatureCount.length + index * 64,\n        );\n      }\n    });\n    signData.copy(\n      wireTransaction,\n      signatureCount.length + signatures.length * 64,\n    );\n    invariant(\n      wireTransaction.length <= PACKET_DATA_SIZE,\n      `Transaction too large: ${wireTransaction.length} > ${PACKET_DATA_SIZE}`,\n    );\n    return wireTransaction;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get keys(): Array<PublicKey> {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].keys.map(keyObj => keyObj.pubkey);\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get programId(): PublicKey {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].programId;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get data(): Buffer {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].data;\n  }\n\n  /**\n   * Parse a wire transaction into a Transaction object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Transaction {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const signatureCount = shortvec.decodeLength(byteArray);\n    let signatures = [];\n    for (let i = 0; i < signatureCount; i++) {\n      const signature = byteArray.slice(0, SIGNATURE_LENGTH_IN_BYTES);\n      byteArray = byteArray.slice(SIGNATURE_LENGTH_IN_BYTES);\n      signatures.push(bs58.encode(Buffer.from(signature)));\n    }\n\n    return Transaction.populate(Message.from(byteArray), signatures);\n  }\n\n  /**\n   * Populate Transaction object from message and signatures\n   */\n  static populate(\n    message: Message,\n    signatures: Array<string> = [],\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.recentBlockhash = message.recentBlockhash;\n    if (message.header.numRequiredSignatures > 0) {\n      transaction.feePayer = message.accountKeys[0];\n    }\n    signatures.forEach((signature, index) => {\n      const sigPubkeyPair = {\n        signature:\n          signature == bs58.encode(DEFAULT_SIGNATURE)\n            ? null\n            : bs58.decode(signature),\n        publicKey: message.accountKeys[index],\n      };\n      transaction.signatures.push(sigPubkeyPair);\n    });\n\n    message.instructions.forEach(instruction => {\n      const keys = instruction.accounts.map(account => {\n        const pubkey = message.accountKeys[account];\n        return {\n          pubkey,\n          isSigner:\n            transaction.signatures.some(\n              keyObj => keyObj.publicKey.toString() === pubkey.toString(),\n            ) || message.isAccountSigner(account),\n          isWritable: message.isAccountWritable(account),\n        };\n      });\n\n      transaction.instructions.push(\n        new TransactionInstruction({\n          keys,\n          programId: message.accountKeys[instruction.programIdIndex],\n          data: bs58.decode(instruction.data),\n        }),\n      );\n    });\n\n    transaction._message = message;\n    transaction._json = transaction.toJSON();\n\n    return transaction;\n  }\n}\n","import {MessageHeader, MessageAddressTableLookup} from './index';\nimport {AccountKeysFromLookups} from './account-keys';\nimport {AddressLookupTableAccount} from '../programs';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {PublicKey} from '../publickey';\n\nexport type CompiledKeyMeta = {\n  isSigner: boolean;\n  isWritable: boolean;\n  isInvoked: boolean;\n};\n\ntype KeyMetaMap = Map<string, CompiledKeyMeta>;\n\nexport class CompiledKeys {\n  payer: PublicKey;\n  keyMetaMap: KeyMetaMap;\n\n  constructor(payer: PublicKey, keyMetaMap: KeyMetaMap) {\n    this.payer = payer;\n    this.keyMetaMap = keyMetaMap;\n  }\n\n  static compile(\n    instructions: Array<TransactionInstruction>,\n    payer: PublicKey,\n  ): CompiledKeys {\n    const keyMetaMap: KeyMetaMap = new Map();\n    const getOrInsertDefault = (pubkey: PublicKey): CompiledKeyMeta => {\n      const address = pubkey.toBase58();\n      let keyMeta = keyMetaMap.get(address);\n      if (keyMeta === undefined) {\n        keyMeta = {\n          isSigner: false,\n          isWritable: false,\n          isInvoked: false,\n        };\n        keyMetaMap.set(address, keyMeta);\n      }\n      return keyMeta;\n    };\n\n    const payerKeyMeta = getOrInsertDefault(payer);\n    payerKeyMeta.isSigner = true;\n    payerKeyMeta.isWritable = true;\n\n    for (const ix of instructions) {\n      getOrInsertDefault(ix.programId).isInvoked = true;\n      for (const accountMeta of ix.keys) {\n        const keyMeta = getOrInsertDefault(accountMeta.pubkey);\n        keyMeta.isSigner ||= accountMeta.isSigner;\n        keyMeta.isWritable ||= accountMeta.isWritable;\n      }\n    }\n\n    return new CompiledKeys(payer, keyMetaMap);\n  }\n\n  getMessageComponents(): [MessageHeader, Array<PublicKey>] {\n    const mapEntries = [...this.keyMetaMap.entries()];\n    assert(mapEntries.length <= 256, 'Max static account keys length exceeded');\n\n    const writableSigners = mapEntries.filter(\n      ([, meta]) => meta.isSigner && meta.isWritable,\n    );\n    const readonlySigners = mapEntries.filter(\n      ([, meta]) => meta.isSigner && !meta.isWritable,\n    );\n    const writableNonSigners = mapEntries.filter(\n      ([, meta]) => !meta.isSigner && meta.isWritable,\n    );\n    const readonlyNonSigners = mapEntries.filter(\n      ([, meta]) => !meta.isSigner && !meta.isWritable,\n    );\n\n    const header: MessageHeader = {\n      numRequiredSignatures: writableSigners.length + readonlySigners.length,\n      numReadonlySignedAccounts: readonlySigners.length,\n      numReadonlyUnsignedAccounts: readonlyNonSigners.length,\n    };\n\n    // sanity checks\n    {\n      assert(\n        writableSigners.length > 0,\n        'Expected at least one writable signer key',\n      );\n      const [payerAddress] = writableSigners[0];\n      assert(\n        payerAddress === this.payer.toBase58(),\n        'Expected first writable signer key to be the fee payer',\n      );\n    }\n\n    const staticAccountKeys = [\n      ...writableSigners.map(([address]) => new PublicKey(address)),\n      ...readonlySigners.map(([address]) => new PublicKey(address)),\n      ...writableNonSigners.map(([address]) => new PublicKey(address)),\n      ...readonlyNonSigners.map(([address]) => new PublicKey(address)),\n    ];\n\n    return [header, staticAccountKeys];\n  }\n\n  extractTableLookup(\n    lookupTable: AddressLookupTableAccount,\n  ): [MessageAddressTableLookup, AccountKeysFromLookups] | undefined {\n    const [writableIndexes, drainedWritableKeys] =\n      this.drainKeysFoundInLookupTable(\n        lookupTable.state.addresses,\n        keyMeta =>\n          !keyMeta.isSigner && !keyMeta.isInvoked && keyMeta.isWritable,\n      );\n    const [readonlyIndexes, drainedReadonlyKeys] =\n      this.drainKeysFoundInLookupTable(\n        lookupTable.state.addresses,\n        keyMeta =>\n          !keyMeta.isSigner && !keyMeta.isInvoked && !keyMeta.isWritable,\n      );\n\n    // Don't extract lookup if no keys were found\n    if (writableIndexes.length === 0 && readonlyIndexes.length === 0) {\n      return;\n    }\n\n    return [\n      {\n        accountKey: lookupTable.key,\n        writableIndexes,\n        readonlyIndexes,\n      },\n      {\n        writable: drainedWritableKeys,\n        readonly: drainedReadonlyKeys,\n      },\n    ];\n  }\n\n  /** @internal */\n  private drainKeysFoundInLookupTable(\n    lookupTableEntries: Array<PublicKey>,\n    keyMetaFilter: (keyMeta: CompiledKeyMeta) => boolean,\n  ): [Array<number>, Array<PublicKey>] {\n    const lookupTableIndexes = new Array();\n    const drainedKeys = new Array();\n\n    for (const [address, keyMeta] of this.keyMetaMap.entries()) {\n      if (keyMetaFilter(keyMeta)) {\n        const key = new PublicKey(address);\n        const lookupTableIndex = lookupTableEntries.findIndex(entry =>\n          entry.equals(key),\n        );\n        if (lookupTableIndex >= 0) {\n          assert(lookupTableIndex < 256, 'Max lookup table index exceeded');\n          lookupTableIndexes.push(lookupTableIndex);\n          drainedKeys.push(key);\n          this.keyMetaMap.delete(address);\n        }\n      }\n    }\n\n    return [lookupTableIndexes, drainedKeys];\n  }\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey, PUBLIC_KEY_LENGTH} from '../publickey';\nimport type {Blockhash} from '../blockhash';\nimport * as Layout from '../layout';\nimport {PACKET_DATA_SIZE, VERSION_PREFIX_MASK} from '../transaction/constants';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport {toBuffer} from '../utils/to-buffer';\nimport {\n  MessageHeader,\n  MessageAddressTableLookup,\n  MessageCompiledInstruction,\n} from './index';\nimport {TransactionInstruction} from '../transaction';\nimport {CompiledKeys} from './compiled-keys';\nimport {MessageAccountKeys} from './account-keys';\n\n/**\n * An instruction to execute by a program\n *\n * @property {number} programIdIndex\n * @property {number[]} accounts\n * @property {string} data\n */\nexport type CompiledInstruction = {\n  /** Index into the transaction keys array indicating the program account that executes this instruction */\n  programIdIndex: number;\n  /** Ordered indices into the transaction keys array indicating which accounts to pass to the program */\n  accounts: number[];\n  /** The program input data encoded as base 58 */\n  data: string;\n};\n\n/**\n * Message constructor arguments\n */\nexport type MessageArgs = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** All the account keys used by this transaction */\n  accountKeys: string[] | PublicKey[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  instructions: CompiledInstruction[];\n};\n\nexport type CompileLegacyArgs = {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n};\n\n/**\n * List of instructions to be processed atomically\n */\nexport class Message {\n  header: MessageHeader;\n  accountKeys: PublicKey[];\n  recentBlockhash: Blockhash;\n  instructions: CompiledInstruction[];\n\n  private indexToProgramIds: Map<number, PublicKey> = new Map<\n    number,\n    PublicKey\n  >();\n\n  constructor(args: MessageArgs) {\n    this.header = args.header;\n    this.accountKeys = args.accountKeys.map(account => new PublicKey(account));\n    this.recentBlockhash = args.recentBlockhash;\n    this.instructions = args.instructions;\n    this.instructions.forEach(ix =>\n      this.indexToProgramIds.set(\n        ix.programIdIndex,\n        this.accountKeys[ix.programIdIndex],\n      ),\n    );\n  }\n\n  get version(): 'legacy' {\n    return 'legacy';\n  }\n\n  get staticAccountKeys(): Array<PublicKey> {\n    return this.accountKeys;\n  }\n\n  get compiledInstructions(): Array<MessageCompiledInstruction> {\n    return this.instructions.map(\n      (ix): MessageCompiledInstruction => ({\n        programIdIndex: ix.programIdIndex,\n        accountKeyIndexes: ix.accounts,\n        data: bs58.decode(ix.data),\n      }),\n    );\n  }\n\n  get addressTableLookups(): Array<MessageAddressTableLookup> {\n    return [];\n  }\n\n  getAccountKeys(): MessageAccountKeys {\n    return new MessageAccountKeys(this.staticAccountKeys);\n  }\n\n  static compile(args: CompileLegacyArgs): Message {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(staticAccountKeys);\n    const instructions = accountKeys.compileInstructions(args.instructions).map(\n      (ix: MessageCompiledInstruction): CompiledInstruction => ({\n        programIdIndex: ix.programIdIndex,\n        accounts: ix.accountKeyIndexes,\n        data: bs58.encode(ix.data),\n      }),\n    );\n    return new Message({\n      header,\n      accountKeys: staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      instructions,\n    });\n  }\n\n  isAccountSigner(index: number): boolean {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index: number): boolean {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = this.accountKeys.length - numSignedAccounts;\n      const numWritableUnsignedAccounts =\n        numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts =\n        numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n\n  isProgramId(index: number): boolean {\n    return this.indexToProgramIds.has(index);\n  }\n\n  programIds(): PublicKey[] {\n    return [...this.indexToProgramIds.values()];\n  }\n\n  nonProgramIds(): PublicKey[] {\n    return this.accountKeys.filter((_, index) => !this.isProgramId(index));\n  }\n\n  serialize(): Buffer {\n    const numKeys = this.accountKeys.length;\n\n    let keyCount: number[] = [];\n    shortvec.encodeLength(keyCount, numKeys);\n\n    const instructions = this.instructions.map(instruction => {\n      const {accounts, programIdIndex} = instruction;\n      const data = Array.from(bs58.decode(instruction.data));\n\n      let keyIndicesCount: number[] = [];\n      shortvec.encodeLength(keyIndicesCount, accounts.length);\n\n      let dataCount: number[] = [];\n      shortvec.encodeLength(dataCount, data.length);\n\n      return {\n        programIdIndex,\n        keyIndicesCount: Buffer.from(keyIndicesCount),\n        keyIndices: accounts,\n        dataLength: Buffer.from(dataCount),\n        data,\n      };\n    });\n\n    let instructionCount: number[] = [];\n    shortvec.encodeLength(instructionCount, instructions.length);\n    let instructionBuffer = Buffer.alloc(PACKET_DATA_SIZE);\n    Buffer.from(instructionCount).copy(instructionBuffer);\n    let instructionBufferLength = instructionCount.length;\n\n    instructions.forEach(instruction => {\n      const instructionLayout = BufferLayout.struct<\n        Readonly<{\n          data: number[];\n          dataLength: Uint8Array;\n          keyIndices: number[];\n          keyIndicesCount: Uint8Array;\n          programIdIndex: number;\n        }>\n      >([\n        BufferLayout.u8('programIdIndex'),\n\n        BufferLayout.blob(\n          instruction.keyIndicesCount.length,\n          'keyIndicesCount',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8('keyIndex'),\n          instruction.keyIndices.length,\n          'keyIndices',\n        ),\n        BufferLayout.blob(instruction.dataLength.length, 'dataLength'),\n        BufferLayout.seq(\n          BufferLayout.u8('userdatum'),\n          instruction.data.length,\n          'data',\n        ),\n      ]);\n      const length = instructionLayout.encode(\n        instruction,\n        instructionBuffer,\n        instructionBufferLength,\n      );\n      instructionBufferLength += length;\n    });\n    instructionBuffer = instructionBuffer.slice(0, instructionBufferLength);\n\n    const signDataLayout = BufferLayout.struct<\n      Readonly<{\n        keyCount: Uint8Array;\n        keys: Uint8Array[];\n        numReadonlySignedAccounts: Uint8Array;\n        numReadonlyUnsignedAccounts: Uint8Array;\n        numRequiredSignatures: Uint8Array;\n        recentBlockhash: Uint8Array;\n      }>\n    >([\n      BufferLayout.blob(1, 'numRequiredSignatures'),\n      BufferLayout.blob(1, 'numReadonlySignedAccounts'),\n      BufferLayout.blob(1, 'numReadonlyUnsignedAccounts'),\n      BufferLayout.blob(keyCount.length, 'keyCount'),\n      BufferLayout.seq(Layout.publicKey('key'), numKeys, 'keys'),\n      Layout.publicKey('recentBlockhash'),\n    ]);\n\n    const transaction = {\n      numRequiredSignatures: Buffer.from([this.header.numRequiredSignatures]),\n      numReadonlySignedAccounts: Buffer.from([\n        this.header.numReadonlySignedAccounts,\n      ]),\n      numReadonlyUnsignedAccounts: Buffer.from([\n        this.header.numReadonlyUnsignedAccounts,\n      ]),\n      keyCount: Buffer.from(keyCount),\n      keys: this.accountKeys.map(key => toBuffer(key.toBytes())),\n      recentBlockhash: bs58.decode(this.recentBlockhash),\n    };\n\n    let signData = Buffer.alloc(2048);\n    const length = signDataLayout.encode(transaction, signData);\n    instructionBuffer.copy(signData, length);\n    return signData.slice(0, length + instructionBuffer.length);\n  }\n\n  /**\n   * Decode a compiled message into a Message object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Message {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const numRequiredSignatures = byteArray.shift() as number;\n    if (\n      numRequiredSignatures !==\n      (numRequiredSignatures & VERSION_PREFIX_MASK)\n    ) {\n      throw new Error(\n        'Versioned messages must be deserialized with VersionedMessage.deserialize()',\n      );\n    }\n\n    const numReadonlySignedAccounts = byteArray.shift() as number;\n    const numReadonlyUnsignedAccounts = byteArray.shift() as number;\n\n    const accountCount = shortvec.decodeLength(byteArray);\n    let accountKeys = [];\n    for (let i = 0; i < accountCount; i++) {\n      const account = byteArray.slice(0, PUBLIC_KEY_LENGTH);\n      byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n      accountKeys.push(new PublicKey(Buffer.from(account)));\n    }\n\n    const recentBlockhash = byteArray.slice(0, PUBLIC_KEY_LENGTH);\n    byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    let instructions: CompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift() as number;\n      const accountCount = shortvec.decodeLength(byteArray);\n      const accounts = byteArray.slice(0, accountCount);\n      byteArray = byteArray.slice(accountCount);\n      const dataLength = shortvec.decodeLength(byteArray);\n      const dataSlice = byteArray.slice(0, dataLength);\n      const data = bs58.encode(Buffer.from(dataSlice));\n      byteArray = byteArray.slice(dataLength);\n      instructions.push({\n        programIdIndex,\n        accounts,\n        data,\n      });\n    }\n\n    const messageArgs = {\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      recentBlockhash: bs58.encode(Buffer.from(recentBlockhash)),\n      accountKeys,\n      instructions,\n    };\n\n    return new Message(messageArgs);\n  }\n}\n","import bs58 from 'bs58';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from '../layout';\nimport {Blockhash} from '../blockhash';\nimport {\n  MessageHeader,\n  MessageAddressTableLookup,\n  MessageCompiledInstruction,\n} from './index';\nimport {PublicKey, PUBLIC_KEY_LENGTH} from '../publickey';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport assert from '../utils/assert';\nimport {PACKET_DATA_SIZE, VERSION_PREFIX_MASK} from '../transaction/constants';\nimport {TransactionInstruction} from '../transaction';\nimport {AddressLookupTableAccount} from '../programs';\nimport {CompiledKeys} from './compiled-keys';\nimport {AccountKeysFromLookups, MessageAccountKeys} from './account-keys';\n\n/**\n * Message constructor arguments\n */\nexport type MessageV0Args = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** The static account keys used by this transaction */\n  staticAccountKeys: PublicKey[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  compiledInstructions: MessageCompiledInstruction[];\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  addressTableLookups: MessageAddressTableLookup[];\n};\n\nexport type CompileV0Args = {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n  addressLookupTableAccounts?: Array<AddressLookupTableAccount>;\n};\n\nexport type GetAccountKeysArgs =\n  | {\n      accountKeysFromLookups?: AccountKeysFromLookups | null;\n    }\n  | {\n      addressLookupTableAccounts?: AddressLookupTableAccount[] | null;\n    };\n\nexport class MessageV0 {\n  header: MessageHeader;\n  staticAccountKeys: Array<PublicKey>;\n  recentBlockhash: Blockhash;\n  compiledInstructions: Array<MessageCompiledInstruction>;\n  addressTableLookups: Array<MessageAddressTableLookup>;\n\n  constructor(args: MessageV0Args) {\n    this.header = args.header;\n    this.staticAccountKeys = args.staticAccountKeys;\n    this.recentBlockhash = args.recentBlockhash;\n    this.compiledInstructions = args.compiledInstructions;\n    this.addressTableLookups = args.addressTableLookups;\n  }\n\n  get version(): 0 {\n    return 0;\n  }\n\n  get numAccountKeysFromLookups(): number {\n    let count = 0;\n    for (const lookup of this.addressTableLookups) {\n      count += lookup.readonlyIndexes.length + lookup.writableIndexes.length;\n    }\n    return count;\n  }\n\n  getAccountKeys(args?: GetAccountKeysArgs): MessageAccountKeys {\n    let accountKeysFromLookups: AccountKeysFromLookups | undefined;\n    if (\n      args &&\n      'accountKeysFromLookups' in args &&\n      args.accountKeysFromLookups\n    ) {\n      if (\n        this.numAccountKeysFromLookups !=\n        args.accountKeysFromLookups.writable.length +\n          args.accountKeysFromLookups.readonly.length\n      ) {\n        throw new Error(\n          'Failed to get account keys because of a mismatch in the number of account keys from lookups',\n        );\n      }\n      accountKeysFromLookups = args.accountKeysFromLookups;\n    } else if (\n      args &&\n      'addressLookupTableAccounts' in args &&\n      args.addressLookupTableAccounts\n    ) {\n      accountKeysFromLookups = this.resolveAddressTableLookups(\n        args.addressLookupTableAccounts,\n      );\n    } else if (this.addressTableLookups.length > 0) {\n      throw new Error(\n        'Failed to get account keys because address table lookups were not resolved',\n      );\n    }\n    return new MessageAccountKeys(\n      this.staticAccountKeys,\n      accountKeysFromLookups,\n    );\n  }\n\n  isAccountSigner(index: number): boolean {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index: number): boolean {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    const numStaticAccountKeys = this.staticAccountKeys.length;\n    if (index >= numStaticAccountKeys) {\n      const lookupAccountKeysIndex = index - numStaticAccountKeys;\n      const numWritableLookupAccountKeys = this.addressTableLookups.reduce(\n        (count, lookup) => count + lookup.writableIndexes.length,\n        0,\n      );\n      return lookupAccountKeysIndex < numWritableLookupAccountKeys;\n    } else if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = numStaticAccountKeys - numSignedAccounts;\n      const numWritableUnsignedAccounts =\n        numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts =\n        numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n\n  resolveAddressTableLookups(\n    addressLookupTableAccounts: AddressLookupTableAccount[],\n  ): AccountKeysFromLookups {\n    const accountKeysFromLookups: AccountKeysFromLookups = {\n      writable: [],\n      readonly: [],\n    };\n\n    for (const tableLookup of this.addressTableLookups) {\n      const tableAccount = addressLookupTableAccounts.find(account =>\n        account.key.equals(tableLookup.accountKey),\n      );\n      if (!tableAccount) {\n        throw new Error(\n          `Failed to find address lookup table account for table key ${tableLookup.accountKey.toBase58()}`,\n        );\n      }\n\n      for (const index of tableLookup.writableIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.writable.push(\n            tableAccount.state.addresses[index],\n          );\n        } else {\n          throw new Error(\n            `Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`,\n          );\n        }\n      }\n\n      for (const index of tableLookup.readonlyIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.readonly.push(\n            tableAccount.state.addresses[index],\n          );\n        } else {\n          throw new Error(\n            `Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`,\n          );\n        }\n      }\n    }\n\n    return accountKeysFromLookups;\n  }\n\n  static compile(args: CompileV0Args): MessageV0 {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n\n    const addressTableLookups = new Array<MessageAddressTableLookup>();\n    const accountKeysFromLookups: AccountKeysFromLookups = {\n      writable: new Array(),\n      readonly: new Array(),\n    };\n    const lookupTableAccounts = args.addressLookupTableAccounts || [];\n    for (const lookupTable of lookupTableAccounts) {\n      const extractResult = compiledKeys.extractTableLookup(lookupTable);\n      if (extractResult !== undefined) {\n        const [addressTableLookup, {writable, readonly}] = extractResult;\n        addressTableLookups.push(addressTableLookup);\n        accountKeysFromLookups.writable.push(...writable);\n        accountKeysFromLookups.readonly.push(...readonly);\n      }\n    }\n\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(\n      staticAccountKeys,\n      accountKeysFromLookups,\n    );\n    const compiledInstructions = accountKeys.compileInstructions(\n      args.instructions,\n    );\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      compiledInstructions,\n      addressTableLookups,\n    });\n  }\n\n  serialize(): Uint8Array {\n    const encodedStaticAccountKeysLength = Array<number>();\n    shortvec.encodeLength(\n      encodedStaticAccountKeysLength,\n      this.staticAccountKeys.length,\n    );\n\n    const serializedInstructions = this.serializeInstructions();\n    const encodedInstructionsLength = Array<number>();\n    shortvec.encodeLength(\n      encodedInstructionsLength,\n      this.compiledInstructions.length,\n    );\n\n    const serializedAddressTableLookups = this.serializeAddressTableLookups();\n    const encodedAddressTableLookupsLength = Array<number>();\n    shortvec.encodeLength(\n      encodedAddressTableLookupsLength,\n      this.addressTableLookups.length,\n    );\n\n    const messageLayout = BufferLayout.struct<{\n      prefix: number;\n      header: MessageHeader;\n      staticAccountKeysLength: Uint8Array;\n      staticAccountKeys: Array<Uint8Array>;\n      recentBlockhash: Uint8Array;\n      instructionsLength: Uint8Array;\n      serializedInstructions: Uint8Array;\n      addressTableLookupsLength: Uint8Array;\n      serializedAddressTableLookups: Uint8Array;\n    }>([\n      BufferLayout.u8('prefix'),\n      BufferLayout.struct<MessageHeader>(\n        [\n          BufferLayout.u8('numRequiredSignatures'),\n          BufferLayout.u8('numReadonlySignedAccounts'),\n          BufferLayout.u8('numReadonlyUnsignedAccounts'),\n        ],\n        'header',\n      ),\n      BufferLayout.blob(\n        encodedStaticAccountKeysLength.length,\n        'staticAccountKeysLength',\n      ),\n      BufferLayout.seq(\n        Layout.publicKey(),\n        this.staticAccountKeys.length,\n        'staticAccountKeys',\n      ),\n      Layout.publicKey('recentBlockhash'),\n      BufferLayout.blob(encodedInstructionsLength.length, 'instructionsLength'),\n      BufferLayout.blob(\n        serializedInstructions.length,\n        'serializedInstructions',\n      ),\n      BufferLayout.blob(\n        encodedAddressTableLookupsLength.length,\n        'addressTableLookupsLength',\n      ),\n      BufferLayout.blob(\n        serializedAddressTableLookups.length,\n        'serializedAddressTableLookups',\n      ),\n    ]);\n\n    const serializedMessage = new Uint8Array(PACKET_DATA_SIZE);\n    const MESSAGE_VERSION_0_PREFIX = 1 << 7;\n    const serializedMessageLength = messageLayout.encode(\n      {\n        prefix: MESSAGE_VERSION_0_PREFIX,\n        header: this.header,\n        staticAccountKeysLength: new Uint8Array(encodedStaticAccountKeysLength),\n        staticAccountKeys: this.staticAccountKeys.map(key => key.toBytes()),\n        recentBlockhash: bs58.decode(this.recentBlockhash),\n        instructionsLength: new Uint8Array(encodedInstructionsLength),\n        serializedInstructions,\n        addressTableLookupsLength: new Uint8Array(\n          encodedAddressTableLookupsLength,\n        ),\n        serializedAddressTableLookups,\n      },\n      serializedMessage,\n    );\n    return serializedMessage.slice(0, serializedMessageLength);\n  }\n\n  private serializeInstructions(): Uint8Array {\n    let serializedLength = 0;\n    const serializedInstructions = new Uint8Array(PACKET_DATA_SIZE);\n    for (const instruction of this.compiledInstructions) {\n      const encodedAccountKeyIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedAccountKeyIndexesLength,\n        instruction.accountKeyIndexes.length,\n      );\n\n      const encodedDataLength = Array<number>();\n      shortvec.encodeLength(encodedDataLength, instruction.data.length);\n\n      const instructionLayout = BufferLayout.struct<{\n        programIdIndex: number;\n        encodedAccountKeyIndexesLength: Uint8Array;\n        accountKeyIndexes: number[];\n        encodedDataLength: Uint8Array;\n        data: Uint8Array;\n      }>([\n        BufferLayout.u8('programIdIndex'),\n        BufferLayout.blob(\n          encodedAccountKeyIndexesLength.length,\n          'encodedAccountKeyIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          instruction.accountKeyIndexes.length,\n          'accountKeyIndexes',\n        ),\n        BufferLayout.blob(encodedDataLength.length, 'encodedDataLength'),\n        BufferLayout.blob(instruction.data.length, 'data'),\n      ]);\n\n      serializedLength += instructionLayout.encode(\n        {\n          programIdIndex: instruction.programIdIndex,\n          encodedAccountKeyIndexesLength: new Uint8Array(\n            encodedAccountKeyIndexesLength,\n          ),\n          accountKeyIndexes: instruction.accountKeyIndexes,\n          encodedDataLength: new Uint8Array(encodedDataLength),\n          data: instruction.data,\n        },\n        serializedInstructions,\n        serializedLength,\n      );\n    }\n\n    return serializedInstructions.slice(0, serializedLength);\n  }\n\n  private serializeAddressTableLookups(): Uint8Array {\n    let serializedLength = 0;\n    const serializedAddressTableLookups = new Uint8Array(PACKET_DATA_SIZE);\n    for (const lookup of this.addressTableLookups) {\n      const encodedWritableIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedWritableIndexesLength,\n        lookup.writableIndexes.length,\n      );\n\n      const encodedReadonlyIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedReadonlyIndexesLength,\n        lookup.readonlyIndexes.length,\n      );\n\n      const addressTableLookupLayout = BufferLayout.struct<{\n        accountKey: Uint8Array;\n        encodedWritableIndexesLength: Uint8Array;\n        writableIndexes: number[];\n        encodedReadonlyIndexesLength: Uint8Array;\n        readonlyIndexes: number[];\n      }>([\n        Layout.publicKey('accountKey'),\n        BufferLayout.blob(\n          encodedWritableIndexesLength.length,\n          'encodedWritableIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          lookup.writableIndexes.length,\n          'writableIndexes',\n        ),\n        BufferLayout.blob(\n          encodedReadonlyIndexesLength.length,\n          'encodedReadonlyIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          lookup.readonlyIndexes.length,\n          'readonlyIndexes',\n        ),\n      ]);\n\n      serializedLength += addressTableLookupLayout.encode(\n        {\n          accountKey: lookup.accountKey.toBytes(),\n          encodedWritableIndexesLength: new Uint8Array(\n            encodedWritableIndexesLength,\n          ),\n          writableIndexes: lookup.writableIndexes,\n          encodedReadonlyIndexesLength: new Uint8Array(\n            encodedReadonlyIndexesLength,\n          ),\n          readonlyIndexes: lookup.readonlyIndexes,\n        },\n        serializedAddressTableLookups,\n        serializedLength,\n      );\n    }\n\n    return serializedAddressTableLookups.slice(0, serializedLength);\n  }\n\n  static deserialize(serializedMessage: Uint8Array): MessageV0 {\n    let byteArray = [...serializedMessage];\n\n    const prefix = byteArray.shift() as number;\n    const maskedPrefix = prefix & VERSION_PREFIX_MASK;\n    assert(\n      prefix !== maskedPrefix,\n      `Expected versioned message but received legacy message`,\n    );\n\n    const version = maskedPrefix;\n    assert(\n      version === 0,\n      `Expected versioned message with version 0 but found version ${version}`,\n    );\n\n    const header: MessageHeader = {\n      numRequiredSignatures: byteArray.shift() as number,\n      numReadonlySignedAccounts: byteArray.shift() as number,\n      numReadonlyUnsignedAccounts: byteArray.shift() as number,\n    };\n\n    const staticAccountKeys = [];\n    const staticAccountKeysLength = shortvec.decodeLength(byteArray);\n    for (let i = 0; i < staticAccountKeysLength; i++) {\n      staticAccountKeys.push(\n        new PublicKey(byteArray.splice(0, PUBLIC_KEY_LENGTH)),\n      );\n    }\n\n    const recentBlockhash = bs58.encode(byteArray.splice(0, PUBLIC_KEY_LENGTH));\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    const compiledInstructions: MessageCompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift() as number;\n      const accountKeyIndexesLength = shortvec.decodeLength(byteArray);\n      const accountKeyIndexes = byteArray.splice(0, accountKeyIndexesLength);\n      const dataLength = shortvec.decodeLength(byteArray);\n      const data = new Uint8Array(byteArray.splice(0, dataLength));\n      compiledInstructions.push({\n        programIdIndex,\n        accountKeyIndexes,\n        data,\n      });\n    }\n\n    const addressTableLookupsCount = shortvec.decodeLength(byteArray);\n    const addressTableLookups: MessageAddressTableLookup[] = [];\n    for (let i = 0; i < addressTableLookupsCount; i++) {\n      const accountKey = new PublicKey(byteArray.splice(0, PUBLIC_KEY_LENGTH));\n      const writableIndexesLength = shortvec.decodeLength(byteArray);\n      const writableIndexes = byteArray.splice(0, writableIndexesLength);\n      const readonlyIndexesLength = shortvec.decodeLength(byteArray);\n      const readonlyIndexes = byteArray.splice(0, readonlyIndexesLength);\n      addressTableLookups.push({\n        accountKey,\n        writableIndexes,\n        readonlyIndexes,\n      });\n    }\n\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash,\n      compiledInstructions,\n      addressTableLookups,\n    });\n  }\n}\n","import {PublicKey} from './publickey';\n\nexport const SYSVAR_CLOCK_PUBKEY = new PublicKey(\n  'SysvarC1ock11111111111111111111111111111111',\n);\n\nexport const SYSVAR_EPOCH_SCHEDULE_PUBKEY = new PublicKey(\n  'SysvarEpochSchedu1e111111111111111111111111',\n);\n\nexport const SYSVAR_INSTRUCTIONS_PUBKEY = new PublicKey(\n  'Sysvar1nstructions1111111111111111111111111',\n);\n\nexport const SYSVAR_RECENT_BLOCKHASHES_PUBKEY = new PublicKey(\n  'SysvarRecentB1ockHashes11111111111111111111',\n);\n\nexport const SYSVAR_RENT_PUBKEY = new PublicKey(\n  'SysvarRent111111111111111111111111111111111',\n);\n\nexport const SYSVAR_REWARDS_PUBKEY = new PublicKey(\n  'SysvarRewards111111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HASHES_PUBKEY = new PublicKey(\n  'SysvarS1otHashes111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HISTORY_PUBKEY = new PublicKey(\n  'SysvarS1otHistory11111111111111111111111111',\n);\n\nexport const SYSVAR_STAKE_HISTORY_PUBKEY = new PublicKey(\n  'SysvarStakeHistory1111111111111111111111111',\n);\n","import {Connection} from '../connection';\nimport {Transaction} from '../transaction';\nimport type {ConfirmOptions} from '../connection';\nimport type {Signer} from '../keypair';\nimport type {TransactionSignature} from '../transaction';\n\n/**\n * Sign, send and confirm a transaction.\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Transaction} transaction\n * @param {Array<Signer>} signers\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nexport async function sendAndConfirmTransaction(\n  connection: Connection,\n  transaction: Transaction,\n  signers: Array<Signer>,\n  options?: ConfirmOptions,\n): Promise<TransactionSignature> {\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    maxRetries: options.maxRetries,\n    minContextSlot: options.minContextSlot,\n  };\n\n  const signature = await connection.sendTransaction(\n    transaction,\n    signers,\n    sendOptions,\n  );\n\n  const status =\n    transaction.recentBlockhash != null &&\n    transaction.lastValidBlockHeight != null\n      ? (\n          await connection.confirmTransaction(\n            {\n              signature: signature,\n              blockhash: transaction.recentBlockhash,\n              lastValidBlockHeight: transaction.lastValidBlockHeight,\n            },\n            options && options.commitment,\n          )\n        ).value\n      : (\n          await connection.confirmTransaction(\n            signature,\n            options && options.commitment,\n          )\n        ).value;\n\n  if (status.err) {\n    throw new Error(\n      `Transaction ${signature} failed (${JSON.stringify(status)})`,\n    );\n  }\n\n  return signature;\n}\n","// zzz\nexport function sleep(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from './layout';\n\nexport interface IInstructionInputData {\n  readonly instruction: number;\n}\n\n/**\n * @internal\n */\nexport type InstructionType<TInputData extends IInstructionInputData> = {\n  /** The Instruction index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<TInputData>;\n};\n\n/**\n * Populate a buffer of instruction data using an InstructionType\n * @internal\n */\nexport function encodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  fields?: any,\n): Buffer {\n  const allocLength =\n    type.layout.span >= 0 ? type.layout.span : Layout.getAlloc(type, fields);\n  const data = Buffer.alloc(allocLength);\n  const layoutFields = Object.assign({instruction: type.index}, fields);\n  type.layout.encode(layoutFields, data);\n  return data;\n}\n\n/**\n * Decode instruction data buffer using an InstructionType\n * @internal\n */\nexport function decodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  buffer: Buffer,\n): TInputData {\n  let data: TInputData;\n  try {\n    data = type.layout.decode(buffer);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (data.instruction !== type.index) {\n    throw new Error(\n      `invalid instruction; instruction index mismatch ${data.instruction} != ${type.index}`,\n    );\n  }\n\n  return data;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\n/**\n * https://github.com/solana-labs/solana/blob/90bedd7e067b5b8f3ddbb45da00a4e9cabb22c62/sdk/src/fee_calculator.rs#L7-L11\n *\n * @internal\n */\nexport const FeeCalculatorLayout = BufferLayout.nu64('lamportsPerSignature');\n\n/**\n * Calculator for transaction fees.\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport interface FeeCalculator {\n  /** Cost in lamports to validate a signature. */\n  lamportsPerSignature: number;\n}\n","import {Buffer} from 'buffer';\nimport {blob, Layout} from '@solana/buffer-layout';\nimport {toBigIntLE, toBufferLE} from 'bigint-buffer';\n\ninterface EncodeDecode<T> {\n  decode(buffer: Buffer, offset?: number): T;\n  encode(src: T, buffer: Buffer, offset?: number): number;\n}\n\nconst encodeDecode = <T>(layout: Layout<T>): EncodeDecode<T> => {\n  const decode = layout.decode.bind(layout);\n  const encode = layout.encode.bind(layout);\n  return {decode, encode};\n};\n\nconst bigInt =\n  (length: number) =>\n  (property?: string): Layout<bigint> => {\n    const layout = blob(length, property);\n    const {encode, decode} = encodeDecode(layout);\n\n    const bigIntLayout = layout as Layout<unknown> as Layout<bigint>;\n\n    bigIntLayout.decode = (buffer: Buffer, offset: number) => {\n      const src = decode(buffer, offset);\n      return toBigIntLE(Buffer.from(src));\n    };\n\n    bigIntLayout.encode = (bigInt: bigint, buffer: Buffer, offset: number) => {\n      const src = toBufferLE(bigInt, length);\n      return encode(src, buffer, offset);\n    };\n\n    return bigIntLayout;\n  };\n\nexport const u64 = bigInt(8);\n\nexport const u128 = bigInt(16);\n\nexport const u192 = bigInt(24);\n\nexport const u256 = bigInt(32);\n","import * as BufferLayout from '@solana/buffer-layout';\nimport {Buffer} from 'buffer';\n\nimport type {Blockhash} from './blockhash';\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport type {FeeCalculator} from './fee-calculator';\nimport {FeeCalculatorLayout} from './fee-calculator';\nimport {toBuffer} from './utils/to-buffer';\n\n/**\n * See https://github.com/solana-labs/solana/blob/0ea2843ec9cdc517572b8e62c959f41b55cf4453/sdk/src/nonce_state.rs#L29-L32\n *\n * @internal\n */\nconst NonceAccountLayout = BufferLayout.struct<\n  Readonly<{\n    authorizedPubkey: Uint8Array;\n    feeCalculator: Readonly<{\n      lamportsPerSignature: number;\n    }>;\n    nonce: Uint8Array;\n    state: number;\n    version: number;\n  }>\n>([\n  BufferLayout.u32('version'),\n  BufferLayout.u32('state'),\n  Layout.publicKey('authorizedPubkey'),\n  Layout.publicKey('nonce'),\n  BufferLayout.struct<Readonly<{lamportsPerSignature: number}>>(\n    [FeeCalculatorLayout],\n    'feeCalculator',\n  ),\n]);\n\nexport const NONCE_ACCOUNT_LENGTH = NonceAccountLayout.span;\n\ntype NonceAccountArgs = {\n  authorizedPubkey: PublicKey;\n  nonce: Blockhash;\n  feeCalculator: FeeCalculator;\n};\n\n/**\n * NonceAccount class\n */\nexport class NonceAccount {\n  authorizedPubkey: PublicKey;\n  nonce: Blockhash;\n  feeCalculator: FeeCalculator;\n\n  /**\n   * @internal\n   */\n  constructor(args: NonceAccountArgs) {\n    this.authorizedPubkey = args.authorizedPubkey;\n    this.nonce = args.nonce;\n    this.feeCalculator = args.feeCalculator;\n  }\n\n  /**\n   * Deserialize NonceAccount from the account data.\n   *\n   * @param buffer account data\n   * @return NonceAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): NonceAccount {\n    const nonceAccount = NonceAccountLayout.decode(toBuffer(buffer), 0);\n    return new NonceAccount({\n      authorizedPubkey: new PublicKey(nonceAccount.authorizedPubkey),\n      nonce: new PublicKey(nonceAccount.nonce).toString(),\n      feeCalculator: nonceAccount.feeCalculator,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {NONCE_ACCOUNT_LENGTH} from '../nonce-account';\nimport {PublicKey} from '../publickey';\nimport {SYSVAR_RECENT_BLOCKHASHES_PUBKEY, SYSVAR_RENT_PUBKEY} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\nimport {u64} from '../utils/bigint';\n\n/**\n * Create account system transaction params\n */\nexport type CreateAccountParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account */\n  newAccountPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Transfer system transaction params\n */\nexport type TransferParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number | bigint;\n};\n\n/**\n * Assign system transaction params\n */\nexport type AssignParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Create account with seed system transaction params\n */\nexport type CreateAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account. Must be pre-calculated with PublicKey.createWithSeed() */\n  newAccountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the created account. Must be the same as the base key used to create `newAccountPubkey` */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the created account. Must be the same as the seed used to create `newAccountPubkey` */\n  seed: string;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Create nonce account system transaction params\n */\nexport type CreateNonceAccountParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n};\n\n/**\n * Create nonce account with seed system transaction params\n */\nexport type CreateNonceAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n  /** Base public key to use to derive the address of the nonce account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the nonce account */\n  seed: string;\n};\n\n/**\n * Initialize nonce account system instruction params\n */\nexport type InitializeNonceParams = {\n  /** Nonce account which will be initialized */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the initialized nonce account */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Advance nonce account system instruction params\n */\nexport type AdvanceNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Withdraw nonce account system transaction params\n */\nexport type WithdrawNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key of the account which will receive the withdrawn nonce account balance */\n  toPubkey: PublicKey;\n  /** Amount of lamports to withdraw from the nonce account */\n  lamports: number;\n};\n\n/**\n * Authorize nonce account system transaction params\n */\nexport type AuthorizeNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the current nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key to set as the new nonce authority */\n  newAuthorizedPubkey: PublicKey;\n};\n\n/**\n * Allocate account system transaction params\n */\nexport type AllocateParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Amount of space in bytes to allocate */\n  space: number;\n};\n\n/**\n * Allocate account with seed system transaction params\n */\nexport type AllocateWithSeedParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the allocated account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the allocated account */\n  seed: string;\n  /** Amount of space in bytes to allocate */\n  space: number;\n  /** Public key of the program to assign as the owner of the allocated account */\n  programId: PublicKey;\n};\n\n/**\n * Assign account with seed system transaction params\n */\nexport type AssignWithSeedParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the assigned account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the assigned account */\n  seed: string;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Transfer with seed system transaction params\n */\nexport type TransferWithSeedParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number | bigint;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/** Decoded transfer system transaction instruction */\nexport type DecodedTransferInstruction = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: bigint;\n};\n\n/** Decoded transferWithSeed system transaction instruction */\nexport type DecodedTransferWithSeedInstruction = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: bigint;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/**\n * System Instruction class\n */\nexport class SystemInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a system instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): SystemInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: SystemInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(SYSTEM_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as SystemInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a SystemInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a create account system instruction and retrieve the instruction params.\n   */\n  static decodeCreateAccount(\n    instruction: TransactionInstruction,\n  ): CreateAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Create,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a transfer system instruction and retrieve the instruction params.\n   */\n  static decodeTransfer(\n    instruction: TransactionInstruction,\n  ): DecodedTransferInstruction {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Transfer,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a transfer with seed system instruction and retrieve the instruction params.\n   */\n  static decodeTransferWithSeed(\n    instruction: TransactionInstruction,\n  ): DecodedTransferWithSeedInstruction {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      basePubkey: instruction.keys[1].pubkey,\n      toPubkey: instruction.keys[2].pubkey,\n      lamports,\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an allocate system instruction and retrieve the instruction params.\n   */\n  static decodeAllocate(instruction: TransactionInstruction): AllocateParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {space} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Allocate,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      space,\n    };\n  }\n\n  /**\n   * Decode an allocate with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAllocateWithSeed(\n    instruction: TransactionInstruction,\n  ): AllocateWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign system instruction and retrieve the instruction params.\n   */\n  static decodeAssign(instruction: TransactionInstruction): AssignParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Assign,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAssignWithSeed(\n    instruction: TransactionInstruction,\n  ): AssignWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a create account with seed system instruction and retrieve the instruction params.\n   */\n  static decodeCreateWithSeed(\n    instruction: TransactionInstruction,\n  ): CreateAccountWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {base, seed, lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a nonce initialize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * Decode a nonce advance system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAdvance(\n    instruction: TransactionInstruction,\n  ): AdvanceNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * Decode a nonce withdraw system instruction and retrieve the instruction params.\n   */\n  static decodeNonceWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a nonce authorize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[1].pubkey,\n      newAuthorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(SystemProgram.programId)) {\n      throw new Error('invalid instruction; programId is not SystemProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid SystemInstructionType's\n */\nexport type SystemInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof SystemInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'AdvanceNonceAccount'\n  | 'Allocate'\n  | 'AllocateWithSeed'\n  | 'Assign'\n  | 'AssignWithSeed'\n  | 'AuthorizeNonceAccount'\n  | 'Create'\n  | 'CreateWithSeed'\n  | 'InitializeNonceAccount'\n  | 'Transfer'\n  | 'TransferWithSeed'\n  | 'WithdrawNonceAccount'\n  | 'UpgradeNonceAccount';\n\ntype SystemInstructionInputData = {\n  AdvanceNonceAccount: IInstructionInputData;\n  Allocate: IInstructionInputData & {\n    space: number;\n  };\n  AllocateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  Assign: IInstructionInputData & {\n    programId: Uint8Array;\n  };\n  AssignWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    seed: string;\n    programId: Uint8Array;\n  };\n  AuthorizeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Create: IInstructionInputData & {\n    lamports: number;\n    programId: Uint8Array;\n    space: number;\n  };\n  CreateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    lamports: number;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  InitializeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Transfer: IInstructionInputData & {\n    lamports: bigint;\n  };\n  TransferWithSeed: IInstructionInputData & {\n    lamports: bigint;\n    programId: Uint8Array;\n    seed: string;\n  };\n  WithdrawNonceAccount: IInstructionInputData & {\n    lamports: number;\n  };\n  UpgradeNonceAccount: IInstructionInputData;\n};\n\n/**\n * An enumeration of valid system InstructionType's\n * @internal\n */\nexport const SYSTEM_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in SystemInstructionType]: InstructionType<\n    SystemInstructionInputData[Instruction]\n  >;\n}>({\n  Create: {\n    index: 0,\n    layout: BufferLayout.struct<SystemInstructionInputData['Create']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Assign: {\n    index: 1,\n    layout: BufferLayout.struct<SystemInstructionInputData['Assign']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Transfer: {\n    index: 2,\n    layout: BufferLayout.struct<SystemInstructionInputData['Transfer']>([\n      BufferLayout.u32('instruction'),\n      u64('lamports'),\n    ]),\n  },\n  CreateWithSeed: {\n    index: 3,\n    layout: BufferLayout.struct<SystemInstructionInputData['CreateWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  AdvanceNonceAccount: {\n    index: 4,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AdvanceNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n  WithdrawNonceAccount: {\n    index: 5,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['WithdrawNonceAccount']\n    >([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')]),\n  },\n  InitializeNonceAccount: {\n    index: 6,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['InitializeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  AuthorizeNonceAccount: {\n    index: 7,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AuthorizeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  Allocate: {\n    index: 8,\n    layout: BufferLayout.struct<SystemInstructionInputData['Allocate']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('space'),\n    ]),\n  },\n  AllocateWithSeed: {\n    index: 9,\n    layout: BufferLayout.struct<SystemInstructionInputData['AllocateWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('base'),\n        Layout.rustString('seed'),\n        BufferLayout.ns64('space'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  AssignWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct<SystemInstructionInputData['AssignWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  TransferWithSeed: {\n    index: 11,\n    layout: BufferLayout.struct<SystemInstructionInputData['TransferWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        u64('lamports'),\n        Layout.rustString('seed'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  UpgradeNonceAccount: {\n    index: 12,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['UpgradeNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n});\n\n/**\n * Factory class for transactions to interact with the System program\n */\nexport class SystemProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the System program\n   */\n  static programId: PublicKey = new PublicKey(\n    '11111111111111111111111111111111',\n  );\n\n  /**\n   * Generate a transaction instruction that creates a new account\n   */\n  static createAccount(params: CreateAccountParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.Create;\n    const data = encodeData(type, {\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.newAccountPubkey, isSigner: true, isWritable: true},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that transfers lamports from one account to another\n   */\n  static transfer(\n    params: TransferParams | TransferWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed;\n      data = encodeData(type, {\n        lamports: BigInt(params.lamports),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Transfer;\n      data = encodeData(type, {lamports: BigInt(params.lamports)});\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that assigns an account to a program\n   */\n  static assign(\n    params: AssignParams | AssignWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Assign;\n      data = encodeData(type, {\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that creates a new account at\n   *   an address generated with `from`, a seed, and programId\n   */\n  static createAccountWithSeed(\n    params: CreateAccountWithSeedParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed;\n    const data = encodeData(type, {\n      base: toBuffer(params.basePubkey.toBuffer()),\n      seed: params.seed,\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n    let keys = [\n      {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n      {pubkey: params.newAccountPubkey, isSigner: false, isWritable: true},\n    ];\n    if (params.basePubkey != params.fromPubkey) {\n      keys.push({pubkey: params.basePubkey, isSigner: true, isWritable: false});\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that creates a new Nonce account\n   */\n  static createNonceAccount(\n    params: CreateNonceAccountParams | CreateNonceAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    if ('basePubkey' in params && 'seed' in params) {\n      transaction.add(\n        SystemProgram.createAccountWithSeed({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          basePubkey: params.basePubkey,\n          seed: params.seed,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    } else {\n      transaction.add(\n        SystemProgram.createAccount({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    }\n\n    const initParams = {\n      noncePubkey: params.noncePubkey,\n      authorizedPubkey: params.authorizedPubkey,\n    };\n\n    transaction.add(this.nonceInitialize(initParams));\n    return transaction;\n  }\n\n  /**\n   * Generate an instruction to initialize a Nonce account\n   */\n  static nonceInitialize(\n    params: InitializeNonceParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.authorizedPubkey.toBuffer()),\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate an instruction to advance the nonce in a Nonce account\n   */\n  static nonceAdvance(params: AdvanceNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount;\n    const data = encodeData(type);\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction instruction that withdraws lamports from a Nonce account\n   */\n  static nonceWithdraw(params: WithdrawNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount;\n    const data = encodeData(type, {lamports: params.lamports});\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {\n          pubkey: SYSVAR_RENT_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that authorizes a new PublicKey as the authority\n   * on a Nonce account.\n   */\n  static nonceAuthorize(params: AuthorizeNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.newAuthorizedPubkey.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that allocates space in an account without funding\n   */\n  static allocate(\n    params: AllocateParams | AllocateWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        space: params.space,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Allocate;\n      data = encodeData(type, {\n        space: params.space,\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey} from './publickey';\nimport {Transaction, PACKET_DATA_SIZE} from './transaction';\nimport {SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {sendAndConfirmTransaction} from './utils/send-and-confirm-transaction';\nimport {sleep} from './utils/sleep';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\nimport {SystemProgram} from './programs/system';\nimport {IInstructionInputData} from './instruction';\n\n// Keep program chunks under PACKET_DATA_SIZE, leaving enough room for the\n// rest of the Transaction fields\n//\n// TODO: replace 300 with a proper constant for the size of the other\n// Transaction fields\nconst CHUNK_SIZE = PACKET_DATA_SIZE - 300;\n\n/**\n * Program loader interface\n */\nexport class Loader {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Amount of program data placed in each load Transaction\n   */\n  static chunkSize: number = CHUNK_SIZE;\n\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return (\n      2 * // Every transaction requires two signatures (payer + program)\n      (Math.ceil(dataLength / Loader.chunkSize) +\n        1 + // Add one for Create transaction\n        1) // Add one for Finalize transaction\n    );\n  }\n\n  /**\n   * Loads a generic program\n   *\n   * @param connection The connection to use\n   * @param payer System account that pays to load the program\n   * @param program Account to load the program into\n   * @param programId Public key that identifies the loader\n   * @param data Program octets\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static async load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    programId: PublicKey,\n    data: Buffer | Uint8Array | Array<number>,\n  ): Promise<boolean> {\n    {\n      const balanceNeeded = await connection.getMinimumBalanceForRentExemption(\n        data.length,\n      );\n\n      // Fetch program account info to check if it has already been created\n      const programInfo = await connection.getAccountInfo(\n        program.publicKey,\n        'confirmed',\n      );\n\n      let transaction: Transaction | null = null;\n      if (programInfo !== null) {\n        if (programInfo.executable) {\n          console.error('Program load failed, account is already executable');\n          return false;\n        }\n\n        if (programInfo.data.length !== data.length) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.allocate({\n              accountPubkey: program.publicKey,\n              space: data.length,\n            }),\n          );\n        }\n\n        if (!programInfo.owner.equals(programId)) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.assign({\n              accountPubkey: program.publicKey,\n              programId,\n            }),\n          );\n        }\n\n        if (programInfo.lamports < balanceNeeded) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.transfer({\n              fromPubkey: payer.publicKey,\n              toPubkey: program.publicKey,\n              lamports: balanceNeeded - programInfo.lamports,\n            }),\n          );\n        }\n      } else {\n        transaction = new Transaction().add(\n          SystemProgram.createAccount({\n            fromPubkey: payer.publicKey,\n            newAccountPubkey: program.publicKey,\n            lamports: balanceNeeded > 0 ? balanceNeeded : 1,\n            space: data.length,\n            programId,\n          }),\n        );\n      }\n\n      // If the account is already created correctly, skip this step\n      // and proceed directly to loading instructions\n      if (transaction !== null) {\n        await sendAndConfirmTransaction(\n          connection,\n          transaction,\n          [payer, program],\n          {\n            commitment: 'confirmed',\n          },\n        );\n      }\n    }\n\n    const dataLayout = BufferLayout.struct<\n      Readonly<{\n        bytes: number[];\n        bytesLength: number;\n        bytesLengthPadding: number;\n        instruction: number;\n        offset: number;\n      }>\n    >([\n      BufferLayout.u32('instruction'),\n      BufferLayout.u32('offset'),\n      BufferLayout.u32('bytesLength'),\n      BufferLayout.u32('bytesLengthPadding'),\n      BufferLayout.seq(\n        BufferLayout.u8('byte'),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'bytes',\n      ),\n    ]);\n\n    const chunkSize = Loader.chunkSize;\n    let offset = 0;\n    let array = data;\n    let transactions = [];\n    while (array.length > 0) {\n      const bytes = array.slice(0, chunkSize);\n      const data = Buffer.alloc(chunkSize + 16);\n      dataLayout.encode(\n        {\n          instruction: 0, // Load instruction\n          offset,\n          bytes: bytes as number[],\n          bytesLength: 0,\n          bytesLengthPadding: 0,\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [{pubkey: program.publicKey, isSigner: true, isWritable: true}],\n        programId,\n        data,\n      });\n      transactions.push(\n        sendAndConfirmTransaction(connection, transaction, [payer, program], {\n          commitment: 'confirmed',\n        }),\n      );\n\n      // Delay between sends in an attempt to reduce rate limit errors\n      if (connection._rpcEndpoint.includes('solana.com')) {\n        const REQUESTS_PER_SECOND = 4;\n        await sleep(1000 / REQUESTS_PER_SECOND);\n      }\n\n      offset += chunkSize;\n      array = array.slice(chunkSize);\n    }\n    await Promise.all(transactions);\n\n    // Finalize the account loaded with program data for execution\n    {\n      const dataLayout = BufferLayout.struct<IInstructionInputData>([\n        BufferLayout.u32('instruction'),\n      ]);\n\n      const data = Buffer.alloc(dataLayout.span);\n      dataLayout.encode(\n        {\n          instruction: 1, // Finalize instruction\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [\n          {pubkey: program.publicKey, isSigner: true, isWritable: true},\n          {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        ],\n        programId,\n        data,\n      });\n      await sendAndConfirmTransaction(\n        connection,\n        transaction,\n        [payer, program],\n        {\n          commitment: 'confirmed',\n        },\n      );\n    }\n\n    // success\n    return true;\n  }\n}\n","import type {Buffer} from 'buffer';\n\nimport {PublicKey} from './publickey';\nimport {Loader} from './loader';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\n\nexport const BPF_LOADER_PROGRAM_ID = new PublicKey(\n  'BPFLoader2111111111111111111111111111111111',\n);\n\n/**\n * Factory class for transactions to interact with a program loader\n */\nexport class BpfLoader {\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return Loader.getMinNumSignatures(dataLength);\n  }\n\n  /**\n   * Load a BPF program\n   *\n   * @param connection The connection to use\n   * @param payer Account that will pay program loading fees\n   * @param program Account to load the program into\n   * @param elf The entire ELF containing the BPF program\n   * @param loaderProgramId The program id of the BPF loader to use\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    elf: Buffer | Uint8Array | Array<number>,\n    loaderProgramId: PublicKey,\n  ): Promise<boolean> {\n    return Loader.load(connection, payer, program, loaderProgramId, elf);\n  }\n}\n","var objToString = Object.prototype.toString;\nvar objKeys = Object.keys || function(obj) {\n\t\tvar keys = [];\n\t\tfor (var name in obj) {\n\t\t\tkeys.push(name);\n\t\t}\n\t\treturn keys;\n\t};\n\nfunction stringify(val, isArrayProp) {\n\tvar i, max, str, keys, key, propVal, toStr;\n\tif (val === true) {\n\t\treturn \"true\";\n\t}\n\tif (val === false) {\n\t\treturn \"false\";\n\t}\n\tswitch (typeof val) {\n\t\tcase \"object\":\n\t\t\tif (val === null) {\n\t\t\t\treturn null;\n\t\t\t} else if (val.toJSON && typeof val.toJSON === \"function\") {\n\t\t\t\treturn stringify(val.toJSON(), isArrayProp);\n\t\t\t} else {\n\t\t\t\ttoStr = objToString.call(val);\n\t\t\t\tif (toStr === \"[object Array]\") {\n\t\t\t\t\tstr = '[';\n\t\t\t\t\tmax = val.length - 1;\n\t\t\t\t\tfor(i = 0; i < max; i++) {\n\t\t\t\t\t\tstr += stringify(val[i], true) + ',';\n\t\t\t\t\t}\n\t\t\t\t\tif (max > -1) {\n\t\t\t\t\t\tstr += stringify(val[i], true);\n\t\t\t\t\t}\n\t\t\t\t\treturn str + ']';\n\t\t\t\t} else if (toStr === \"[object Object]\") {\n\t\t\t\t\t// only object is left\n\t\t\t\t\tkeys = objKeys(val).sort();\n\t\t\t\t\tmax = keys.length;\n\t\t\t\t\tstr = \"\";\n\t\t\t\t\ti = 0;\n\t\t\t\t\twhile (i < max) {\n\t\t\t\t\t\tkey = keys[i];\n\t\t\t\t\t\tpropVal = stringify(val[key], false);\n\t\t\t\t\t\tif (propVal !== undefined) {\n\t\t\t\t\t\t\tif (str) {\n\t\t\t\t\t\t\t\tstr += ',';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstr += JSON.stringify(key) + ':' + propVal;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\treturn '{' + str + '}';\n\t\t\t\t} else {\n\t\t\t\t\treturn JSON.stringify(val);\n\t\t\t\t}\n\t\t\t}\n\t\tcase \"function\":\n\t\tcase \"undefined\":\n\t\t\treturn isArrayProp ? null : undefined;\n\t\tcase \"string\":\n\t\t\treturn JSON.stringify(val);\n\t\tdefault:\n\t\t\treturn isFinite(val) ? val : null;\n\t}\n}\n\nmodule.exports = function(val) {\n\tvar returnVal = stringify(val, false);\n\tif (returnVal !== undefined) {\n\t\treturn ''+ returnVal;\n\t}\n};\n","const MINIMUM_SLOT_PER_EPOCH = 32;\n\n// Returns the number of trailing zeros in the binary representation of self.\nfunction trailingZeros(n: number) {\n  let trailingZeros = 0;\n  while (n > 1) {\n    n /= 2;\n    trailingZeros++;\n  }\n  return trailingZeros;\n}\n\n// Returns the smallest power of two greater than or equal to n\nfunction nextPowerOfTwo(n: number) {\n  if (n === 0) return 1;\n  n--;\n  n |= n >> 1;\n  n |= n >> 2;\n  n |= n >> 4;\n  n |= n >> 8;\n  n |= n >> 16;\n  n |= n >> 32;\n  return n + 1;\n}\n\n/**\n * Epoch schedule\n * (see https://docs.solana.com/terminology#epoch)\n * Can be retrieved with the {@link connection.getEpochSchedule} method\n */\nexport class EpochSchedule {\n  /** The maximum number of slots in each epoch */\n  public slotsPerEpoch: number;\n  /** The number of slots before beginning of an epoch to calculate a leader schedule for that epoch */\n  public leaderScheduleSlotOffset: number;\n  /** Indicates whether epochs start short and grow */\n  public warmup: boolean;\n  /** The first epoch with `slotsPerEpoch` slots */\n  public firstNormalEpoch: number;\n  /** The first slot of `firstNormalEpoch` */\n  public firstNormalSlot: number;\n\n  constructor(\n    slotsPerEpoch: number,\n    leaderScheduleSlotOffset: number,\n    warmup: boolean,\n    firstNormalEpoch: number,\n    firstNormalSlot: number,\n  ) {\n    this.slotsPerEpoch = slotsPerEpoch;\n    this.leaderScheduleSlotOffset = leaderScheduleSlotOffset;\n    this.warmup = warmup;\n    this.firstNormalEpoch = firstNormalEpoch;\n    this.firstNormalSlot = firstNormalSlot;\n  }\n\n  getEpoch(slot: number): number {\n    return this.getEpochAndSlotIndex(slot)[0];\n  }\n\n  getEpochAndSlotIndex(slot: number): [number, number] {\n    if (slot < this.firstNormalSlot) {\n      const epoch =\n        trailingZeros(nextPowerOfTwo(slot + MINIMUM_SLOT_PER_EPOCH + 1)) -\n        trailingZeros(MINIMUM_SLOT_PER_EPOCH) -\n        1;\n\n      const epochLen = this.getSlotsInEpoch(epoch);\n      const slotIndex = slot - (epochLen - MINIMUM_SLOT_PER_EPOCH);\n      return [epoch, slotIndex];\n    } else {\n      const normalSlotIndex = slot - this.firstNormalSlot;\n      const normalEpochIndex = Math.floor(normalSlotIndex / this.slotsPerEpoch);\n      const epoch = this.firstNormalEpoch + normalEpochIndex;\n      const slotIndex = normalSlotIndex % this.slotsPerEpoch;\n      return [epoch, slotIndex];\n    }\n  }\n\n  getFirstSlotInEpoch(epoch: number): number {\n    if (epoch <= this.firstNormalEpoch) {\n      return (Math.pow(2, epoch) - 1) * MINIMUM_SLOT_PER_EPOCH;\n    } else {\n      return (\n        (epoch - this.firstNormalEpoch) * this.slotsPerEpoch +\n        this.firstNormalSlot\n      );\n    }\n  }\n\n  getLastSlotInEpoch(epoch: number): number {\n    return this.getFirstSlotInEpoch(epoch) + this.getSlotsInEpoch(epoch) - 1;\n  }\n\n  getSlotsInEpoch(epoch: number) {\n    if (epoch < this.firstNormalEpoch) {\n      return Math.pow(2, epoch + trailingZeros(MINIMUM_SLOT_PER_EPOCH));\n    } else {\n      return this.slotsPerEpoch;\n    }\n  }\n}\n","export class SendTransactionError extends Error {\n  logs: string[] | undefined;\n\n  constructor(message: string, logs?: string[]) {\n    super(message);\n\n    this.logs = logs;\n  }\n}\n\n// Keep in sync with client/src/rpc_custom_errors.rs\n// Typescript `enums` thwart tree-shaking. See https://bargsten.org/jsts/enums/\nexport const SolanaJSONRPCErrorCode = {\n  JSON_RPC_SERVER_ERROR_BLOCK_CLEANED_UP: -32001,\n  JSON_RPC_SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE: -32002,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE: -32003,\n  JSON_RPC_SERVER_ERROR_BLOCK_NOT_AVAILABLE: -32004,\n  JSON_RPC_SERVER_ERROR_NODE_UNHEALTHY: -32005,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE: -32006,\n  JSON_RPC_SERVER_ERROR_SLOT_SKIPPED: -32007,\n  JSON_RPC_SERVER_ERROR_NO_SNAPSHOT: -32008,\n  JSON_RPC_SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED: -32009,\n  JSON_RPC_SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX: -32010,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE: -32011,\n  JSON_RPC_SCAN_ERROR: -32012,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH: -32013,\n  JSON_RPC_SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET: -32014,\n  JSON_RPC_SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION: -32015,\n  JSON_RPC_SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED: -32016,\n} as const;\nexport type SolanaJSONRPCErrorCodeEnum =\n  typeof SolanaJSONRPCErrorCode[keyof typeof SolanaJSONRPCErrorCode];\n\nexport class SolanaJSONRPCError extends Error {\n  code: SolanaJSONRPCErrorCodeEnum | unknown;\n  data?: any;\n  constructor(\n    {\n      code,\n      message,\n      data,\n    }: Readonly<{code: unknown; message: string; data?: any}>,\n    customMessage?: string,\n  ) {\n    super(customMessage != null ? `${customMessage}: ${message}` : message);\n    this.code = code;\n    this.data = data;\n    this.name = 'SolanaJSONRPCError';\n  }\n}\n","export const Headers = globalThis.Headers;\nexport const Request = globalThis.Request;\nexport const Response = globalThis.Response;\nexport default globalThis.fetch;\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport assert from '../../utils/assert';\nimport * as Layout from '../../layout';\nimport {PublicKey} from '../../publickey';\nimport {u64} from '../../utils/bigint';\nimport {decodeData} from '../../account-data';\n\nexport type AddressLookupTableState = {\n  deactivationSlot: bigint;\n  lastExtendedSlot: number;\n  lastExtendedSlotStartIndex: number;\n  authority?: PublicKey;\n  addresses: Array<PublicKey>;\n};\n\nexport type AddressLookupTableAccountArgs = {\n  key: PublicKey;\n  state: AddressLookupTableState;\n};\n\n/// The serialized size of lookup table metadata\nconst LOOKUP_TABLE_META_SIZE = 56;\n\nexport class AddressLookupTableAccount {\n  key: PublicKey;\n  state: AddressLookupTableState;\n\n  constructor(args: AddressLookupTableAccountArgs) {\n    this.key = args.key;\n    this.state = args.state;\n  }\n\n  isActive(): boolean {\n    const U64_MAX = BigInt('0xffffffffffffffff');\n    return this.state.deactivationSlot === U64_MAX;\n  }\n\n  static deserialize(accountData: Uint8Array): AddressLookupTableState {\n    const meta = decodeData(LookupTableMetaLayout, accountData);\n\n    const serializedAddressesLen = accountData.length - LOOKUP_TABLE_META_SIZE;\n    assert(serializedAddressesLen >= 0, 'lookup table is invalid');\n    assert(serializedAddressesLen % 32 === 0, 'lookup table is invalid');\n\n    const numSerializedAddresses = serializedAddressesLen / 32;\n    const {addresses} = BufferLayout.struct<{addresses: Array<Uint8Array>}>([\n      BufferLayout.seq(Layout.publicKey(), numSerializedAddresses, 'addresses'),\n    ]).decode(accountData.slice(LOOKUP_TABLE_META_SIZE));\n\n    return {\n      deactivationSlot: meta.deactivationSlot,\n      lastExtendedSlot: meta.lastExtendedSlot,\n      lastExtendedSlotStartIndex: meta.lastExtendedStartIndex,\n      authority:\n        meta.authority.length !== 0\n          ? new PublicKey(meta.authority[0])\n          : undefined,\n      addresses: addresses.map(address => new PublicKey(address)),\n    };\n  }\n}\n\nconst LookupTableMetaLayout = {\n  index: 1,\n  layout: BufferLayout.struct<{\n    typeIndex: number;\n    deactivationSlot: bigint;\n    lastExtendedSlot: number;\n    lastExtendedStartIndex: number;\n    authority: Array<Uint8Array>;\n  }>([\n    BufferLayout.u32('typeIndex'),\n    u64('deactivationSlot'),\n    BufferLayout.nu64('lastExtendedSlot'),\n    BufferLayout.u8('lastExtendedStartIndex'),\n    BufferLayout.u8(), // option\n    BufferLayout.seq(\n      Layout.publicKey(),\n      BufferLayout.offset(BufferLayout.u8(), -1),\n      'authority',\n    ),\n  ]),\n};\n","import * as BufferLayout from '@solana/buffer-layout';\n\nexport interface IAccountStateData {\n  readonly typeIndex: number;\n}\n\n/**\n * @internal\n */\nexport type AccountType<TInputData extends IAccountStateData> = {\n  /** The account type index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<TInputData>;\n};\n\n/**\n * Decode account data buffer using an AccountType\n * @internal\n */\nexport function decodeData<TAccountStateData extends IAccountStateData>(\n  type: AccountType<TAccountStateData>,\n  data: Uint8Array,\n): TAccountStateData {\n  let decoded: TAccountStateData;\n  try {\n    decoded = type.layout.decode(data);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (decoded.typeIndex !== type.index) {\n    throw new Error(\n      `invalid account data; account type mismatch ${decoded.typeIndex} != ${type.index}`,\n    );\n  }\n\n  return decoded;\n}\n","const URL_RE = /^[^:]+:\\/\\/([^:[]+|\\[[^\\]]+\\])(:\\d+)?(.*)/i;\n\nexport function makeWebsocketUrl(endpoint: string) {\n  const matches = endpoint.match(URL_RE);\n  if (matches == null) {\n    throw TypeError(`Failed to validate endpoint URL \\`${endpoint}\\``);\n  }\n  const [\n    _, // eslint-disable-line @typescript-eslint/no-unused-vars\n    hostish,\n    portWithColon,\n    rest,\n  ] = matches;\n  const protocol = endpoint.startsWith('https:') ? 'wss:' : 'ws:';\n  const startPort =\n    portWithColon == null ? null : parseInt(portWithColon.slice(1), 10);\n  const websocketPort =\n    // Only shift the port by +1 as a convention for ws(s) only if given endpoint\n    // is explictly specifying the endpoint port (HTTP-based RPC), assuming\n    // we're directly trying to connect to solana-validator's ws listening port.\n    // When the endpoint omits the port, we're connecting to the protocol\n    // default ports: http(80) or https(443) and it's assumed we're behind a reverse\n    // proxy which manages WebSocket upgrade and backend port redirection.\n    startPort == null ? '' : `:${startPort + 1}`;\n  return `${protocol}//${hostish}${websocketPort}${rest}`;\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n// @ts-ignore\nimport fastStableStringify from 'fast-stable-stringify';\nimport {\n  type as pick,\n  number,\n  string,\n  array,\n  boolean,\n  literal,\n  record,\n  union,\n  optional,\n  nullable,\n  coerce,\n  instance,\n  create,\n  tuple,\n  unknown,\n  any,\n} from 'superstruct';\nimport type {Struct} from 'superstruct';\nimport {Client as RpcWebSocketClient} from 'rpc-websockets';\nimport RpcClient from 'jayson/lib/client/browser';\n\nimport {AgentManager} from './agent-manager';\nimport {EpochSchedule} from './epoch-schedule';\nimport {SendTransactionError, SolanaJSONRPCError} from './errors';\nimport fetchImpl, {Response} from './fetch-impl';\nimport {NonceAccount} from './nonce-account';\nimport {PublicKey} from './publickey';\nimport {Signer} from './keypair';\nimport {MS_PER_SLOT} from './timing';\nimport {\n  Transaction,\n  TransactionStatus,\n  TransactionVersion,\n  VersionedTransaction,\n} from './transaction';\nimport {Message, MessageHeader, MessageV0, VersionedMessage} from './message';\nimport {AddressLookupTableAccount} from './programs/address-lookup-table/state';\nimport assert from './utils/assert';\nimport {sleep} from './utils/sleep';\nimport {toBuffer} from './utils/to-buffer';\nimport {\n  TransactionExpiredBlockheightExceededError,\n  TransactionExpiredTimeoutError,\n} from './transaction/expiry-custom-errors';\nimport {makeWebsocketUrl} from './utils/makeWebsocketUrl';\nimport type {Blockhash} from './blockhash';\nimport type {FeeCalculator} from './fee-calculator';\nimport type {TransactionSignature} from './transaction';\nimport type {CompiledInstruction} from './message';\n\nconst PublicKeyFromString = coerce(\n  instance(PublicKey),\n  string(),\n  value => new PublicKey(value),\n);\n\nconst RawAccountDataResult = tuple([string(), literal('base64')]);\n\nconst BufferFromRawAccountData = coerce(\n  instance(Buffer),\n  RawAccountDataResult,\n  value => Buffer.from(value[0], 'base64'),\n);\n\n/**\n * Attempt to use a recent blockhash for up to 30 seconds\n * @internal\n */\nexport const BLOCKHASH_CACHE_TIMEOUT_MS = 30 * 1000;\n\n/**\n * HACK.\n * Copied from rpc-websockets/dist/lib/client.\n * Otherwise, `yarn build` fails with:\n * https://gist.github.com/steveluscher/c057eca81d479ef705cdb53162f9971d\n */\ninterface IWSRequestParams {\n  [x: string]: any;\n  [x: number]: any;\n}\n\ntype ClientSubscriptionId = number;\n/** @internal */ type ServerSubscriptionId = number;\n/** @internal */ type SubscriptionConfigHash = string;\n/** @internal */ type SubscriptionDisposeFn = () => Promise<void>;\n/**\n * @internal\n * Every subscription contains the args used to open the subscription with\n * the server, and a list of callers interested in notifications.\n */\ntype BaseSubscription<TMethod = SubscriptionConfig['method']> = Readonly<{\n  args: IWSRequestParams;\n  callbacks: Set<Extract<SubscriptionConfig, {method: TMethod}>['callback']>;\n}>;\n/**\n * @internal\n * A subscription may be in various states of connectedness. Only when it is\n * fully connected will it have a server subscription id associated with it.\n * This id can be returned to the server to unsubscribe the client entirely.\n */\ntype StatefulSubscription = Readonly<\n  // New subscriptions that have not yet been\n  // sent to the server start in this state.\n  | {\n      state: 'pending';\n    }\n  // These subscriptions have been sent to the server\n  // and are waiting for the server to acknowledge them.\n  | {\n      state: 'subscribing';\n    }\n  // These subscriptions have been acknowledged by the\n  // server and have been assigned server subscription ids.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'subscribed';\n    }\n  // These subscriptions are intended to be torn down and\n  // are waiting on an acknowledgement from the server.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribing';\n    }\n  // The request to tear down these subscriptions has been\n  // acknowledged by the server. The `serverSubscriptionId`\n  // is the id of the now-dead subscription.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribed';\n    }\n>;\n/**\n * A type that encapsulates a subscription's RPC method\n * names and notification (callback) signature.\n */\ntype SubscriptionConfig = Readonly<\n  | {\n      callback: AccountChangeCallback;\n      method: 'accountSubscribe';\n      unsubscribeMethod: 'accountUnsubscribe';\n    }\n  | {\n      callback: LogsCallback;\n      method: 'logsSubscribe';\n      unsubscribeMethod: 'logsUnsubscribe';\n    }\n  | {\n      callback: ProgramAccountChangeCallback;\n      method: 'programSubscribe';\n      unsubscribeMethod: 'programUnsubscribe';\n    }\n  | {\n      callback: RootChangeCallback;\n      method: 'rootSubscribe';\n      unsubscribeMethod: 'rootUnsubscribe';\n    }\n  | {\n      callback: SignatureSubscriptionCallback;\n      method: 'signatureSubscribe';\n      unsubscribeMethod: 'signatureUnsubscribe';\n    }\n  | {\n      callback: SlotChangeCallback;\n      method: 'slotSubscribe';\n      unsubscribeMethod: 'slotUnsubscribe';\n    }\n  | {\n      callback: SlotUpdateCallback;\n      method: 'slotsUpdatesSubscribe';\n      unsubscribeMethod: 'slotsUpdatesUnsubscribe';\n    }\n>;\n/**\n * @internal\n * Utility type that keeps tagged unions intact while omitting properties.\n */\ntype DistributiveOmit<T, K extends PropertyKey> = T extends unknown\n  ? Omit<T, K>\n  : never;\n/**\n * @internal\n * This type represents a single subscribable 'topic.' It's made up of:\n *\n * - The args used to open the subscription with the server,\n * - The state of the subscription, in terms of its connectedness, and\n * - The set of callbacks to call when the server publishes notifications\n *\n * This record gets indexed by `SubscriptionConfigHash` and is used to\n * set up subscriptions, fan out notifications, and track subscription state.\n */\ntype Subscription = BaseSubscription &\n  StatefulSubscription &\n  DistributiveOmit<SubscriptionConfig, 'callback'>;\n\ntype RpcRequest = (methodName: string, args: Array<any>) => Promise<any>;\n\ntype RpcBatchRequest = (requests: RpcParams[]) => Promise<any[]>;\n\n/**\n * @internal\n */\nexport type RpcParams = {\n  methodName: string;\n  args: Array<any>;\n};\n\nexport type TokenAccountsFilter =\n  | {\n      mint: PublicKey;\n    }\n  | {\n      programId: PublicKey;\n    };\n\n/**\n * Extra contextual information for RPC responses\n */\nexport type Context = {\n  slot: number;\n};\n\n/**\n * Options for sending transactions\n */\nexport type SendOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Options for confirming transactions\n */\nexport type ConfirmOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** desired commitment level */\n  commitment?: Commitment;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Options for getConfirmedSignaturesForAddress2\n */\nexport type ConfirmedSignaturesForAddress2Options = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n};\n\n/**\n * Options for getSignaturesForAddress\n */\nexport type SignaturesForAddressOptions = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * RPC Response with extra contextual information\n */\nexport type RpcResponseAndContext<T> = {\n  /** response context */\n  context: Context;\n  /** response value */\n  value: T;\n};\n\nexport type BlockhashWithExpiryBlockHeight = Readonly<{\n  blockhash: Blockhash;\n  lastValidBlockHeight: number;\n}>;\n\n/**\n * A strategy for confirming transactions that uses the last valid\n * block height for a given blockhash to check for transaction expiration.\n */\nexport type BlockheightBasedTransactionConfirmationStrategy = {\n  signature: TransactionSignature;\n} & BlockhashWithExpiryBlockHeight;\n\n/* @internal */\nfunction assertEndpointUrl(putativeUrl: string) {\n  if (/^https?:/.test(putativeUrl) === false) {\n    throw new TypeError('Endpoint URL must start with `http:` or `https:`.');\n  }\n  return putativeUrl;\n}\n\n/** @internal */\nfunction extractCommitmentFromConfig<TConfig>(\n  commitmentOrConfig?: Commitment | ({commitment?: Commitment} & TConfig),\n) {\n  let commitment: Commitment | undefined;\n  let config: Omit<TConfig, 'commitment'> | undefined;\n  if (typeof commitmentOrConfig === 'string') {\n    commitment = commitmentOrConfig;\n  } else if (commitmentOrConfig) {\n    const {commitment: specifiedCommitment, ...specifiedConfig} =\n      commitmentOrConfig;\n    commitment = specifiedCommitment;\n    config = specifiedConfig;\n  }\n  return {commitment, config};\n}\n\n/**\n * @internal\n */\nfunction createRpcResult<T, U>(result: Struct<T, U>) {\n  return union([\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      result,\n    }),\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      error: pick({\n        code: unknown(),\n        message: string(),\n        data: optional(any()),\n      }),\n    }),\n  ]);\n}\n\nconst UnknownRpcResult = createRpcResult(unknown());\n\n/**\n * @internal\n */\nfunction jsonRpcResult<T, U>(schema: Struct<T, U>) {\n  return coerce(createRpcResult(schema), UnknownRpcResult, value => {\n    if ('error' in value) {\n      return value;\n    } else {\n      return {\n        ...value,\n        result: create(value.result, schema),\n      };\n    }\n  });\n}\n\n/**\n * @internal\n */\nfunction jsonRpcResultAndContext<T, U>(value: Struct<T, U>) {\n  return jsonRpcResult(\n    pick({\n      context: pick({\n        slot: number(),\n      }),\n      value,\n    }),\n  );\n}\n\n/**\n * @internal\n */\nfunction notificationResultAndContext<T, U>(value: Struct<T, U>) {\n  return pick({\n    context: pick({\n      slot: number(),\n    }),\n    value,\n  });\n}\n\n/**\n * @internal\n */\nfunction versionedMessageFromResponse(\n  version: TransactionVersion | undefined,\n  response: MessageResponse,\n): VersionedMessage {\n  if (version === 0) {\n    return new MessageV0({\n      header: response.header,\n      staticAccountKeys: response.accountKeys.map(\n        accountKey => new PublicKey(accountKey),\n      ),\n      recentBlockhash: response.recentBlockhash,\n      compiledInstructions: response.instructions.map(ix => ({\n        programIdIndex: ix.programIdIndex,\n        accountKeyIndexes: ix.accounts,\n        data: bs58.decode(ix.data),\n      })),\n      addressTableLookups: response.addressTableLookups!,\n    });\n  } else {\n    return new Message(response);\n  }\n}\n\n/**\n * The level of commitment desired when querying state\n * <pre>\n *   'processed': Query the most recent block which has reached 1 confirmation by the connected node\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Commitment =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized'\n  | 'recent' // Deprecated as of v1.5.5\n  | 'single' // Deprecated as of v1.5.5\n  | 'singleGossip' // Deprecated as of v1.5.5\n  | 'root' // Deprecated as of v1.5.5\n  | 'max'; // Deprecated as of v1.5.5\n\n/**\n * A subset of Commitment levels, which are at least optimistically confirmed\n * <pre>\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Finality = 'confirmed' | 'finalized';\n\n/**\n * Filter for largest accounts query\n * <pre>\n *   'circulating':    Return the largest accounts that are part of the circulating supply\n *   'nonCirculating': Return the largest accounts that are not part of the circulating supply\n * </pre>\n */\nexport type LargestAccountsFilter = 'circulating' | 'nonCirculating';\n\n/**\n * Configuration object for changing `getAccountInfo` query behavior\n */\nexport type GetAccountInfoConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getBalance` query behavior\n */\nexport type GetBalanceConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\nexport type GetBlockConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n};\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\nexport type GetVersionedBlockConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /** The max transaction version to return in responses. If the requested transaction is a higher version, an error will be returned */\n  maxSupportedTransactionVersion?: number;\n};\n\n/**\n * Configuration object for changing `getStakeMinimumDelegation` query behavior\n */\nexport type GetStakeMinimumDelegationConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n};\n\n/**\n * Configuration object for changing `getBlockHeight` query behavior\n */\nexport type GetBlockHeightConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getEpochInfo` query behavior\n */\nexport type GetEpochInfoConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getInflationReward` query behavior\n */\nexport type GetInflationRewardConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** An epoch for which the reward occurs. If omitted, the previous epoch will be used */\n  epoch?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getLatestBlockhash` query behavior\n */\nexport type GetLatestBlockhashConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getSlot` query behavior\n */\nexport type GetSlotConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getSlotLeader` query behavior\n */\nexport type GetSlotLeaderConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\nexport type GetTransactionConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n};\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\nexport type GetVersionedTransactionConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /** The max transaction version to return in responses. If the requested transaction is a higher version, an error will be returned */\n  maxSupportedTransactionVersion?: number;\n};\n\n/**\n * Configuration object for changing `getLargestAccounts` query behavior\n */\nexport type GetLargestAccountsConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Filter largest accounts by whether they are part of the circulating supply */\n  filter?: LargestAccountsFilter;\n};\n\n/**\n * Configuration object for changing `getSupply` request behavior\n */\nexport type GetSupplyConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Exclude non circulating accounts list from response */\n  excludeNonCirculatingAccountsList?: boolean;\n};\n\n/**\n * Configuration object for changing query behavior\n */\nexport type SignatureStatusConfig = {\n  /** enable searching status history, not needed for recent transactions */\n  searchTransactionHistory: boolean;\n};\n\n/**\n * Information describing a cluster node\n */\nexport type ContactInfo = {\n  /** Identity public key of the node */\n  pubkey: string;\n  /** Gossip network address for the node */\n  gossip: string | null;\n  /** TPU network address for the node (null if not available) */\n  tpu: string | null;\n  /** JSON RPC network address for the node (null if not available) */\n  rpc: string | null;\n  /** Software version of the node (null if not available) */\n  version: string | null;\n};\n\n/**\n * Information describing a vote account\n */\nexport type VoteAccountInfo = {\n  /** Public key of the vote account */\n  votePubkey: string;\n  /** Identity public key of the node voting with this account */\n  nodePubkey: string;\n  /** The stake, in lamports, delegated to this vote account and activated */\n  activatedStake: number;\n  /** Whether the vote account is staked for this epoch */\n  epochVoteAccount: boolean;\n  /** Recent epoch voting credit history for this voter */\n  epochCredits: Array<[number, number, number]>;\n  /** A percentage (0-100) of rewards payout owed to the voter */\n  commission: number;\n  /** Most recent slot voted on by this vote account */\n  lastVote: number;\n};\n\n/**\n * A collection of cluster vote accounts\n */\nexport type VoteAccountStatus = {\n  /** Active vote accounts */\n  current: Array<VoteAccountInfo>;\n  /** Inactive vote accounts */\n  delinquent: Array<VoteAccountInfo>;\n};\n\n/**\n * Network Inflation\n * (see https://docs.solana.com/implemented-proposals/ed_overview)\n */\nexport type InflationGovernor = {\n  foundation: number;\n  foundationTerm: number;\n  initial: number;\n  taper: number;\n  terminal: number;\n};\n\nconst GetInflationGovernorResult = pick({\n  foundation: number(),\n  foundationTerm: number(),\n  initial: number(),\n  taper: number(),\n  terminal: number(),\n});\n\n/**\n * The inflation reward for an epoch\n */\nexport type InflationReward = {\n  /** epoch for which the reward occurs */\n  epoch: number;\n  /** the slot in which the rewards are effective */\n  effectiveSlot: number;\n  /** reward amount in lamports */\n  amount: number;\n  /** post balance of the account in lamports */\n  postBalance: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getInflationReward\" message\n */\nconst GetInflationRewardResult = jsonRpcResult(\n  array(\n    nullable(\n      pick({\n        epoch: number(),\n        effectiveSlot: number(),\n        amount: number(),\n        postBalance: number(),\n      }),\n    ),\n  ),\n);\n\n/**\n * Information about the current epoch\n */\nexport type EpochInfo = {\n  epoch: number;\n  slotIndex: number;\n  slotsInEpoch: number;\n  absoluteSlot: number;\n  blockHeight?: number;\n  transactionCount?: number;\n};\n\nconst GetEpochInfoResult = pick({\n  epoch: number(),\n  slotIndex: number(),\n  slotsInEpoch: number(),\n  absoluteSlot: number(),\n  blockHeight: optional(number()),\n  transactionCount: optional(number()),\n});\n\nconst GetEpochScheduleResult = pick({\n  slotsPerEpoch: number(),\n  leaderScheduleSlotOffset: number(),\n  warmup: boolean(),\n  firstNormalEpoch: number(),\n  firstNormalSlot: number(),\n});\n\n/**\n * Leader schedule\n * (see https://docs.solana.com/terminology#leader-schedule)\n */\nexport type LeaderSchedule = {\n  [address: string]: number[];\n};\n\nconst GetLeaderScheduleResult = record(string(), array(number()));\n\n/**\n * Transaction error or null\n */\nconst TransactionErrorResult = nullable(union([pick({}), string()]));\n\n/**\n * Signature status for a transaction\n */\nconst SignatureStatusResult = pick({\n  err: TransactionErrorResult,\n});\n\n/**\n * Transaction signature received notification\n */\nconst SignatureReceivedResult = literal('receivedSignature');\n\n/**\n * Version info for a node\n */\nexport type Version = {\n  /** Version of solana-core */\n  'solana-core': string;\n  'feature-set'?: number;\n};\n\nconst VersionResult = pick({\n  'solana-core': string(),\n  'feature-set': optional(number()),\n});\n\nexport type SimulatedTransactionAccountInfo = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: string;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: string[];\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\nexport type TransactionReturnDataEncoding = 'base64';\n\nexport type TransactionReturnData = {\n  programId: string;\n  data: [string, TransactionReturnDataEncoding];\n};\n\nexport type SimulateTransactionConfig = {\n  /** Optional parameter used to enable signature verification before simulation */\n  sigVerify?: boolean;\n  /** Optional parameter used to replace the simulated transaction's recent blockhash with the latest blockhash */\n  replaceRecentBlockhash?: boolean;\n  /** Optional parameter used to set the commitment level when selecting the latest block */\n  commitment?: Commitment;\n  /** Optional parameter used to specify a list of account addresses to return post simulation state for */\n  accounts?: {\n    encoding: 'base64';\n    addresses: string[];\n  };\n  /** Optional parameter used to specify the minimum block slot that can be used for simulation */\n  minContextSlot?: number;\n};\n\nexport type SimulatedTransactionResponse = {\n  err: TransactionError | string | null;\n  logs: Array<string> | null;\n  accounts?: (SimulatedTransactionAccountInfo | null)[] | null;\n  unitsConsumed?: number;\n  returnData?: TransactionReturnData | null;\n};\nconst SimulatedTransactionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    err: nullable(union([pick({}), string()])),\n    logs: nullable(array(string())),\n    accounts: optional(\n      nullable(\n        array(\n          nullable(\n            pick({\n              executable: boolean(),\n              owner: string(),\n              lamports: number(),\n              data: array(string()),\n              rentEpoch: optional(number()),\n            }),\n          ),\n        ),\n      ),\n    ),\n    unitsConsumed: optional(number()),\n    returnData: optional(\n      nullable(\n        pick({\n          programId: string(),\n          data: tuple([string(), literal('base64')]),\n        }),\n      ),\n    ),\n  }),\n);\n\nexport type ParsedInnerInstruction = {\n  index: number;\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n};\n\nexport type TokenBalance = {\n  accountIndex: number;\n  mint: string;\n  owner?: string;\n  uiTokenAmount: TokenAmount;\n};\n\n/**\n * Metadata for a parsed confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionMeta} instead.\n */\nexport type ParsedConfirmedTransactionMeta = ParsedTransactionMeta;\n\n/**\n * Collection of addresses loaded by a transaction using address table lookups\n */\nexport type LoadedAddresses = {\n  writable: Array<PublicKey>;\n  readonly: Array<PublicKey>;\n};\n\n/**\n * Metadata for a parsed transaction on the ledger\n */\nexport type ParsedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked parsed instructions */\n  innerInstructions?: ParsedInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n  /** The collection of addresses loaded using address lookup tables */\n  loadedAddresses?: LoadedAddresses;\n  /** The compute units consumed after processing the transaction */\n  computeUnitsConsumed?: number;\n};\n\nexport type CompiledInnerInstruction = {\n  index: number;\n  instructions: CompiledInstruction[];\n};\n\n/**\n * Metadata for a confirmed transaction on the ledger\n */\nexport type ConfirmedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked instructions */\n  innerInstructions?: CompiledInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n  /** The collection of addresses loaded using address lookup tables */\n  loadedAddresses?: LoadedAddresses;\n  /** The compute units consumed after processing the transaction */\n  computeUnitsConsumed?: number;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type TransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: Message;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type VersionedTransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: VersionedMessage;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** The transaction version */\n  version?: TransactionVersion;\n};\n\n/**\n * A processed transaction message from the RPC API\n */\ntype MessageResponse = {\n  accountKeys: string[];\n  header: MessageHeader;\n  instructions: CompiledInstruction[];\n  recentBlockhash: string;\n  addressTableLookups?: ParsedAddressTableLookup[];\n};\n\n/**\n * A confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport type ConfirmedTransaction = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: Transaction;\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A partially decoded transaction instruction\n */\nexport type PartiallyDecodedInstruction = {\n  /** Program id called by this instruction */\n  programId: PublicKey;\n  /** Public keys of accounts passed to this instruction */\n  accounts: Array<PublicKey>;\n  /** Raw base-58 instruction data */\n  data: string;\n};\n\n/**\n * A parsed transaction message account\n */\nexport type ParsedMessageAccount = {\n  /** Public key of the account */\n  pubkey: PublicKey;\n  /** Indicates if the account signed the transaction */\n  signer: boolean;\n  /** Indicates if the account is writable for this transaction */\n  writable: boolean;\n  /** Indicates if the account key came from the transaction or a lookup table */\n  source?: 'transaction' | 'lookupTable';\n};\n\n/**\n * A parsed transaction instruction\n */\nexport type ParsedInstruction = {\n  /** Name of the program for this instruction */\n  program: string;\n  /** ID of the program for this instruction */\n  programId: PublicKey;\n  /** Parsed instruction info */\n  parsed: any;\n};\n\n/**\n * A parsed address table lookup\n */\nexport type ParsedAddressTableLookup = {\n  /** Address lookup table account key */\n  accountKey: PublicKey;\n  /** Parsed instruction info */\n  writableIndexes: number[];\n  /** Parsed instruction info */\n  readonlyIndexes: number[];\n};\n\n/**\n * A parsed transaction message\n */\nexport type ParsedMessage = {\n  /** Accounts used in the instructions */\n  accountKeys: ParsedMessageAccount[];\n  /** The atomically executed instructions for the transaction */\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n  /** Recent blockhash */\n  recentBlockhash: string;\n  /** Address table lookups used to load additional accounts */\n  addressTableLookups?: ParsedAddressTableLookup[] | null;\n};\n\n/**\n * A parsed transaction\n */\nexport type ParsedTransaction = {\n  /** Signatures for the transaction */\n  signatures: Array<string>;\n  /** Message of the transaction */\n  message: ParsedMessage;\n};\n\n/**\n * A parsed and confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionWithMeta} instead.\n */\nexport type ParsedConfirmedTransaction = ParsedTransactionWithMeta;\n\n/**\n * A parsed transaction on the ledger with meta\n */\nexport type ParsedTransactionWithMeta = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: ParsedTransaction;\n  /** Metadata produced from the transaction */\n  meta: ParsedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** The version of the transaction message */\n  version?: TransactionVersion;\n};\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type BlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: Message;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type VersionedBlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: VersionedMessage;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A confirmed block on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport type ConfirmedBlock = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions and status metas */\n  transactions: Array<{\n    transaction: Transaction;\n    meta: ConfirmedTransactionMeta | null;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    pubkey: string;\n    lamports: number;\n    postBalance: number | null;\n    rewardType: string | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A Block on the ledger with signatures only\n */\nexport type BlockSignatures = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of signatures */\n  signatures: Array<string>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * recent block production information\n */\nexport type BlockProduction = Readonly<{\n  /** a dictionary of validator identities, as base-58 encoded strings. Value is a two element array containing the number of leader slots and the number of blocks produced */\n  byIdentity: Readonly<Record<string, ReadonlyArray<number>>>;\n  /** Block production slot range */\n  range: Readonly<{\n    /** first slot of the block production information (inclusive) */\n    firstSlot: number;\n    /** last slot of block production information (inclusive) */\n    lastSlot: number;\n  }>;\n}>;\n\nexport type GetBlockProductionConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Slot range to return block production for. If parameter not provided, defaults to current epoch. */\n  range?: {\n    /** first slot to return block production information for (inclusive) */\n    firstSlot: number;\n    /** last slot to return block production information for (inclusive). If parameter not provided, defaults to the highest slot */\n    lastSlot?: number;\n  };\n  /** Only return results for this validator identity (base-58 encoded) */\n  identity?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getBlockProduction\" message\n */\nconst BlockProductionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    byIdentity: record(string(), array(number())),\n    range: pick({\n      firstSlot: number(),\n      lastSlot: number(),\n    }),\n  }),\n);\n\n/**\n * A performance sample\n */\nexport type PerfSample = {\n  /** Slot number of sample */\n  slot: number;\n  /** Number of transactions in a sample window */\n  numTransactions: number;\n  /** Number of slots in a sample window */\n  numSlots: number;\n  /** Sample window in seconds */\n  samplePeriodSecs: number;\n};\n\nfunction createRpcClient(\n  url: string,\n  httpHeaders?: HttpHeaders,\n  customFetch?: FetchFn,\n  fetchMiddleware?: FetchMiddleware,\n  disableRetryOnRateLimit?: boolean,\n): RpcClient {\n  const fetch = customFetch ? customFetch : fetchImpl;\n  let agentManager: AgentManager | undefined;\n  if (!process.env.BROWSER) {\n    agentManager = new AgentManager(url.startsWith('https:') /* useHttps */);\n  }\n\n  let fetchWithMiddleware: FetchFn | undefined;\n\n  if (fetchMiddleware) {\n    fetchWithMiddleware = async (info, init) => {\n      const modifiedFetchArgs = await new Promise<Parameters<FetchFn>>(\n        (resolve, reject) => {\n          try {\n            fetchMiddleware(info, init, (modifiedInfo, modifiedInit) =>\n              resolve([modifiedInfo, modifiedInit]),\n            );\n          } catch (error) {\n            reject(error);\n          }\n        },\n      );\n      return await fetch(...modifiedFetchArgs);\n    };\n  }\n\n  const clientBrowser = new RpcClient(async (request, callback) => {\n    const agent = agentManager ? agentManager.requestStart() : undefined;\n    const options = {\n      method: 'POST',\n      body: request,\n      agent,\n      headers: Object.assign(\n        {\n          'Content-Type': 'application/json',\n        },\n        httpHeaders || {},\n        COMMON_HTTP_HEADERS,\n      ),\n    };\n\n    try {\n      let too_many_requests_retries = 5;\n      let res: Response;\n      let waitTime = 500;\n      for (;;) {\n        if (fetchWithMiddleware) {\n          res = await fetchWithMiddleware(url, options);\n        } else {\n          res = await fetch(url, options);\n        }\n\n        if (res.status !== 429 /* Too many requests */) {\n          break;\n        }\n        if (disableRetryOnRateLimit === true) {\n          break;\n        }\n        too_many_requests_retries -= 1;\n        if (too_many_requests_retries === 0) {\n          break;\n        }\n        console.log(\n          `Server responded with ${res.status} ${res.statusText}.  Retrying after ${waitTime}ms delay...`,\n        );\n        await sleep(waitTime);\n        waitTime *= 2;\n      }\n\n      const text = await res.text();\n      if (res.ok) {\n        callback(null, text);\n      } else {\n        callback(new Error(`${res.status} ${res.statusText}: ${text}`));\n      }\n    } catch (err) {\n      if (err instanceof Error) callback(err);\n    } finally {\n      agentManager && agentManager.requestEnd();\n    }\n  }, {});\n\n  return clientBrowser;\n}\n\nfunction createRpcRequest(client: RpcClient): RpcRequest {\n  return (method, args) => {\n    return new Promise((resolve, reject) => {\n      client.request(method, args, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\nfunction createRpcBatchRequest(client: RpcClient): RpcBatchRequest {\n  return (requests: RpcParams[]) => {\n    return new Promise((resolve, reject) => {\n      // Do nothing if requests is empty\n      if (requests.length === 0) resolve([]);\n\n      const batch = requests.map((params: RpcParams) => {\n        return client.request(params.methodName, params.args);\n      });\n\n      client.request(batch, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\n/**\n * Expected JSON RPC response for the \"getInflationGovernor\" message\n */\nconst GetInflationGovernorRpcResult = jsonRpcResult(GetInflationGovernorResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochInfo\" message\n */\nconst GetEpochInfoRpcResult = jsonRpcResult(GetEpochInfoResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochSchedule\" message\n */\nconst GetEpochScheduleRpcResult = jsonRpcResult(GetEpochScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"getLeaderSchedule\" message\n */\nconst GetLeaderScheduleRpcResult = jsonRpcResult(GetLeaderScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"minimumLedgerSlot\" and \"getFirstAvailableBlock\" messages\n */\nconst SlotRpcResult = jsonRpcResult(number());\n\n/**\n * Supply\n */\nexport type Supply = {\n  /** Total supply in lamports */\n  total: number;\n  /** Circulating supply in lamports */\n  circulating: number;\n  /** Non-circulating supply in lamports */\n  nonCirculating: number;\n  /** List of non-circulating account addresses */\n  nonCirculatingAccounts: Array<PublicKey>;\n};\n\n/**\n * Expected JSON RPC response for the \"getSupply\" message\n */\nconst GetSupplyRpcResult = jsonRpcResultAndContext(\n  pick({\n    total: number(),\n    circulating: number(),\n    nonCirculating: number(),\n    nonCirculatingAccounts: array(PublicKeyFromString),\n  }),\n);\n\n/**\n * Token amount object which returns a token amount in different formats\n * for various client use cases.\n */\nexport type TokenAmount = {\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC structure for token amounts\n */\nconst TokenAmountResult = pick({\n  amount: string(),\n  uiAmount: nullable(number()),\n  decimals: number(),\n  uiAmountString: optional(string()),\n});\n\n/**\n * Token address and balance.\n */\nexport type TokenAccountBalancePair = {\n  /** Address of the token account */\n  address: PublicKey;\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getTokenLargestAccounts\" message\n */\nconst GetTokenLargestAccountsResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      address: PublicKeyFromString,\n      amount: string(),\n      uiAmount: nullable(number()),\n      decimals: number(),\n      uiAmountString: optional(string()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message\n */\nconst GetTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: BufferFromRawAccountData,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\nconst ParsedAccountDataResult = pick({\n  program: string(),\n  parsed: unknown(),\n  space: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message with parsed data\n */\nconst GetParsedTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: ParsedAccountDataResult,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Pair of an account address and its balance\n */\nexport type AccountBalancePair = {\n  address: PublicKey;\n  lamports: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getLargestAccounts\" message\n */\nconst GetLargestAccountsRpcResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      lamports: number(),\n      address: PublicKeyFromString,\n    }),\n  ),\n);\n\n/**\n * @internal\n */\nconst AccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: BufferFromRawAccountData,\n  rentEpoch: number(),\n});\n\n/**\n * @internal\n */\nconst KeyedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\nconst ParsedOrRawAccountData = coerce(\n  union([instance(Buffer), ParsedAccountDataResult]),\n  union([RawAccountDataResult, ParsedAccountDataResult]),\n  value => {\n    if (Array.isArray(value)) {\n      return create(value, BufferFromRawAccountData);\n    } else {\n      return value;\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedAccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: ParsedOrRawAccountData,\n  rentEpoch: number(),\n});\n\nconst KeyedParsedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: ParsedAccountInfoResult,\n});\n\n/**\n * @internal\n */\nconst StakeActivationResult = pick({\n  state: union([\n    literal('active'),\n    literal('inactive'),\n    literal('activating'),\n    literal('deactivating'),\n  ]),\n  active: number(),\n  inactive: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getConfirmedSignaturesForAddress2\" message\n */\n\nconst GetConfirmedSignaturesForAddress2RpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getSignaturesForAddress\" message\n */\nconst GetSignaturesForAddressRpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/***\n * Expected JSON RPC response for the \"accountNotification\" message\n */\nconst AccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(AccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst ProgramAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\n/***\n * Expected JSON RPC response for the \"programNotification\" message\n */\nconst ProgramAccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(ProgramAccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst SlotInfoResult = pick({\n  parent: number(),\n  slot: number(),\n  root: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"slotNotification\" message\n */\nconst SlotNotificationResult = pick({\n  subscription: number(),\n  result: SlotInfoResult,\n});\n\n/**\n * Slot updates which can be used for tracking the live progress of a cluster.\n * - `\"firstShredReceived\"`: connected node received the first shred of a block.\n * Indicates that a new block that is being produced.\n * - `\"completed\"`: connected node has received all shreds of a block. Indicates\n * a block was recently produced.\n * - `\"optimisticConfirmation\"`: block was optimistically confirmed by the\n * cluster. It is not guaranteed that an optimistic confirmation notification\n * will be sent for every finalized blocks.\n * - `\"root\"`: the connected node rooted this block.\n * - `\"createdBank\"`: the connected node has started validating this block.\n * - `\"frozen\"`: the connected node has validated this block.\n * - `\"dead\"`: the connected node failed to validate this block.\n */\nexport type SlotUpdate =\n  | {\n      type: 'firstShredReceived';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'completed';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'createdBank';\n      slot: number;\n      timestamp: number;\n      parent: number;\n    }\n  | {\n      type: 'frozen';\n      slot: number;\n      timestamp: number;\n      stats: {\n        numTransactionEntries: number;\n        numSuccessfulTransactions: number;\n        numFailedTransactions: number;\n        maxTransactionsPerEntry: number;\n      };\n    }\n  | {\n      type: 'dead';\n      slot: number;\n      timestamp: number;\n      err: string;\n    }\n  | {\n      type: 'optimisticConfirmation';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'root';\n      slot: number;\n      timestamp: number;\n    };\n\n/**\n * @internal\n */\nconst SlotUpdateResult = union([\n  pick({\n    type: union([\n      literal('firstShredReceived'),\n      literal('completed'),\n      literal('optimisticConfirmation'),\n      literal('root'),\n    ]),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('createdBank'),\n    parent: number(),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('frozen'),\n    slot: number(),\n    timestamp: number(),\n    stats: pick({\n      numTransactionEntries: number(),\n      numSuccessfulTransactions: number(),\n      numFailedTransactions: number(),\n      maxTransactionsPerEntry: number(),\n    }),\n  }),\n  pick({\n    type: literal('dead'),\n    slot: number(),\n    timestamp: number(),\n    err: string(),\n  }),\n]);\n\n/**\n * Expected JSON RPC response for the \"slotsUpdatesNotification\" message\n */\nconst SlotUpdateNotificationResult = pick({\n  subscription: number(),\n  result: SlotUpdateResult,\n});\n\n/**\n * Expected JSON RPC response for the \"signatureNotification\" message\n */\nconst SignatureNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(\n    union([SignatureStatusResult, SignatureReceivedResult]),\n  ),\n});\n\n/**\n * Expected JSON RPC response for the \"rootNotification\" message\n */\nconst RootNotificationResult = pick({\n  subscription: number(),\n  result: number(),\n});\n\nconst ContactInfoResult = pick({\n  pubkey: string(),\n  gossip: nullable(string()),\n  tpu: nullable(string()),\n  rpc: nullable(string()),\n  version: nullable(string()),\n});\n\nconst VoteAccountInfoResult = pick({\n  votePubkey: string(),\n  nodePubkey: string(),\n  activatedStake: number(),\n  epochVoteAccount: boolean(),\n  epochCredits: array(tuple([number(), number(), number()])),\n  commission: number(),\n  lastVote: number(),\n  rootSlot: nullable(number()),\n});\n\n/**\n * Expected JSON RPC response for the \"getVoteAccounts\" message\n */\nconst GetVoteAccounts = jsonRpcResult(\n  pick({\n    current: array(VoteAccountInfoResult),\n    delinquent: array(VoteAccountInfoResult),\n  }),\n);\n\nconst ConfirmationStatus = union([\n  literal('processed'),\n  literal('confirmed'),\n  literal('finalized'),\n]);\n\nconst SignatureStatusResponse = pick({\n  slot: number(),\n  confirmations: nullable(number()),\n  err: TransactionErrorResult,\n  confirmationStatus: optional(ConfirmationStatus),\n});\n\n/**\n * Expected JSON RPC response for the \"getSignatureStatuses\" message\n */\nconst GetSignatureStatusesRpcResult = jsonRpcResultAndContext(\n  array(nullable(SignatureStatusResponse)),\n);\n\n/**\n * Expected JSON RPC response for the \"getMinimumBalanceForRentExemption\" message\n */\nconst GetMinimumBalanceForRentExemptionRpcResult = jsonRpcResult(number());\n\nconst AddressTableLookupStruct = pick({\n  accountKey: PublicKeyFromString,\n  writableIndexes: array(number()),\n  readonlyIndexes: array(number()),\n});\n\nconst ConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(string()),\n    header: pick({\n      numRequiredSignatures: number(),\n      numReadonlySignedAccounts: number(),\n      numReadonlyUnsignedAccounts: number(),\n    }),\n    instructions: array(\n      pick({\n        accounts: array(number()),\n        data: string(),\n        programIdIndex: number(),\n      }),\n    ),\n    recentBlockhash: string(),\n    addressTableLookups: optional(array(AddressTableLookupStruct)),\n  }),\n});\n\nconst ParsedInstructionResult = pick({\n  parsed: unknown(),\n  program: string(),\n  programId: PublicKeyFromString,\n});\n\nconst RawInstructionResult = pick({\n  accounts: array(PublicKeyFromString),\n  data: string(),\n  programId: PublicKeyFromString,\n});\n\nconst InstructionResult = union([\n  RawInstructionResult,\n  ParsedInstructionResult,\n]);\n\nconst UnknownInstructionResult = union([\n  pick({\n    parsed: unknown(),\n    program: string(),\n    programId: string(),\n  }),\n  pick({\n    accounts: array(string()),\n    data: string(),\n    programId: string(),\n  }),\n]);\n\nconst ParsedOrRawInstruction = coerce(\n  InstructionResult,\n  UnknownInstructionResult,\n  value => {\n    if ('accounts' in value) {\n      return create(value, RawInstructionResult);\n    } else {\n      return create(value, ParsedInstructionResult);\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(\n      pick({\n        pubkey: PublicKeyFromString,\n        signer: boolean(),\n        writable: boolean(),\n        source: optional(\n          union([literal('transaction'), literal('lookupTable')]),\n        ),\n      }),\n    ),\n    instructions: array(ParsedOrRawInstruction),\n    recentBlockhash: string(),\n    addressTableLookups: optional(nullable(array(AddressTableLookupStruct))),\n  }),\n});\n\nconst TokenBalanceResult = pick({\n  accountIndex: number(),\n  mint: string(),\n  owner: optional(string()),\n  uiTokenAmount: TokenAmountResult,\n});\n\nconst LoadedAddressesResult = pick({\n  writable: array(PublicKeyFromString),\n  readonly: array(PublicKeyFromString),\n});\n\n/**\n * @internal\n */\nconst ConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(\n            pick({\n              accounts: array(number()),\n              data: string(),\n              programIdIndex: number(),\n            }),\n          ),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number()),\n});\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(ParsedOrRawInstruction),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number()),\n});\n\nconst TransactionVersionStruct = union([literal(0), literal('legacy')]);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(\n        array(\n          pick({\n            pubkey: string(),\n            lamports: number(),\n            postBalance: nullable(number()),\n            rewardType: nullable(string()),\n          }),\n        ),\n      ),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getConfirmedBlock\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetBlockRpcResult} instead.\n */\nconst GetConfirmedBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n        }),\n      ),\n      rewards: optional(\n        array(\n          pick({\n            pubkey: string(),\n            lamports: number(),\n            postBalance: nullable(number()),\n            rewardType: nullable(string()),\n          }),\n        ),\n      ),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockSignaturesRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      signatures: array(string()),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTransaction\" message\n */\nconst GetTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      meta: ConfirmedTransactionMetaResult,\n      blockTime: optional(nullable(number())),\n      transaction: ConfirmedTransactionResult,\n      version: optional(TransactionVersionStruct),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getTransaction\" message\n */\nconst GetParsedTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      transaction: ParsedConfirmedTransactionResult,\n      meta: nullable(ParsedConfirmedTransactionMetaResult),\n      blockTime: optional(nullable(number())),\n      version: optional(TransactionVersionStruct),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getRecentBlockhash\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetLatestBlockhashRpcResult} instead.\n */\nconst GetRecentBlockhashAndContextRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    feeCalculator: pick({\n      lamportsPerSignature: number(),\n    }),\n  }),\n);\n\n/**\n * Expected JSON RPC response for the \"getLatestBlockhash\" message\n */\nconst GetLatestBlockhashRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    lastValidBlockHeight: number(),\n  }),\n);\n\nconst PerfSampleResult = pick({\n  slot: number(),\n  numTransactions: number(),\n  numSlots: number(),\n  samplePeriodSecs: number(),\n});\n\n/*\n * Expected JSON RPC response for \"getRecentPerformanceSamples\" message\n */\nconst GetRecentPerformanceSamplesRpcResult = jsonRpcResult(\n  array(PerfSampleResult),\n);\n\n/**\n * Expected JSON RPC response for the \"getFeeCalculatorForBlockhash\" message\n */\nconst GetFeeCalculatorRpcResult = jsonRpcResultAndContext(\n  nullable(\n    pick({\n      feeCalculator: pick({\n        lamportsPerSignature: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"requestAirdrop\" message\n */\nconst RequestAirdropRpcResult = jsonRpcResult(string());\n\n/**\n * Expected JSON RPC response for the \"sendTransaction\" message\n */\nconst SendTransactionRpcResult = jsonRpcResult(string());\n\n/**\n * Information about the latest slot being processed by a node\n */\nexport type SlotInfo = {\n  /** Currently processing slot */\n  slot: number;\n  /** Parent of the current slot */\n  parent: number;\n  /** The root block of the current slot's fork */\n  root: number;\n};\n\n/**\n * Parsed account data\n */\nexport type ParsedAccountData = {\n  /** Name of the program that owns this account */\n  program: string;\n  /** Parsed account data */\n  parsed: any;\n  /** Space used by account data */\n  space: number;\n};\n\n/**\n * Stake Activation data\n */\nexport type StakeActivationData = {\n  /** the stake account's activation state */\n  state: 'active' | 'inactive' | 'activating' | 'deactivating';\n  /** stake active during the epoch */\n  active: number;\n  /** stake inactive during the epoch */\n  inactive: number;\n};\n\n/**\n * Data slice argument for getProgramAccounts\n */\nexport type DataSlice = {\n  /** offset of data slice */\n  offset: number;\n  /** length of data slice */\n  length: number;\n};\n\n/**\n * Memory comparison filter for getProgramAccounts\n */\nexport type MemcmpFilter = {\n  memcmp: {\n    /** offset into program account data to start comparison */\n    offset: number;\n    /** data to match, as base-58 encoded string and limited to less than 129 bytes */\n    bytes: string;\n  };\n};\n\n/**\n * Data size comparison filter for getProgramAccounts\n */\nexport type DataSizeFilter = {\n  /** Size of data for program account data length comparison */\n  dataSize: number;\n};\n\n/**\n * A filter object for getProgramAccounts\n */\nexport type GetProgramAccountsFilter = MemcmpFilter | DataSizeFilter;\n\n/**\n * Configuration object for getProgramAccounts requests\n */\nexport type GetProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional encoding for account data (default base64)\n   * To use \"jsonParsed\" encoding, please refer to `getParsedProgramAccounts` in connection.ts\n   * */\n  encoding?: 'base64';\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for getParsedProgramAccounts\n */\nexport type GetParsedProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for getMultipleAccounts\n */\nexport type GetMultipleAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetStakeActivationConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Epoch for which to calculate activation details. If parameter not provided, defaults to current epoch */\n  epoch?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetTokenAccountsByOwnerConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetTransactionCountConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Information describing an account\n */\nexport type AccountInfo<T> = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: PublicKey;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: T;\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\n/**\n * Account information identified by pubkey\n */\nexport type KeyedAccountInfo = {\n  accountId: PublicKey;\n  accountInfo: AccountInfo<Buffer>;\n};\n\n/**\n * Callback function for account change notifications\n */\nexport type AccountChangeCallback = (\n  accountInfo: AccountInfo<Buffer>,\n  context: Context,\n) => void;\n\n/**\n * Callback function for program account change notifications\n */\nexport type ProgramAccountChangeCallback = (\n  keyedAccountInfo: KeyedAccountInfo,\n  context: Context,\n) => void;\n\n/**\n * Callback function for slot change notifications\n */\nexport type SlotChangeCallback = (slotInfo: SlotInfo) => void;\n\n/**\n * Callback function for slot update notifications\n */\nexport type SlotUpdateCallback = (slotUpdate: SlotUpdate) => void;\n\n/**\n * Callback function for signature status notifications\n */\nexport type SignatureResultCallback = (\n  signatureResult: SignatureResult,\n  context: Context,\n) => void;\n\n/**\n * Signature status notification with transaction result\n */\nexport type SignatureStatusNotification = {\n  type: 'status';\n  result: SignatureResult;\n};\n\n/**\n * Signature received notification\n */\nexport type SignatureReceivedNotification = {\n  type: 'received';\n};\n\n/**\n * Callback function for signature notifications\n */\nexport type SignatureSubscriptionCallback = (\n  notification: SignatureStatusNotification | SignatureReceivedNotification,\n  context: Context,\n) => void;\n\n/**\n * Signature subscription options\n */\nexport type SignatureSubscriptionOptions = {\n  commitment?: Commitment;\n  enableReceivedNotification?: boolean;\n};\n\n/**\n * Callback function for root change notifications\n */\nexport type RootChangeCallback = (root: number) => void;\n\n/**\n * @internal\n */\nconst LogsResult = pick({\n  err: TransactionErrorResult,\n  logs: array(string()),\n  signature: string(),\n});\n\n/**\n * Logs result.\n */\nexport type Logs = {\n  err: TransactionError | null;\n  logs: string[];\n  signature: string;\n};\n\n/**\n * Expected JSON RPC response for the \"logsNotification\" message.\n */\nconst LogsNotificationResult = pick({\n  result: notificationResultAndContext(LogsResult),\n  subscription: number(),\n});\n\n/**\n * Filter for log subscriptions.\n */\nexport type LogsFilter = PublicKey | 'all' | 'allWithVotes';\n\n/**\n * Callback function for log notifications.\n */\nexport type LogsCallback = (logs: Logs, ctx: Context) => void;\n\n/**\n * Signature result\n */\nexport type SignatureResult = {\n  err: TransactionError | null;\n};\n\n/**\n * Transaction error\n */\nexport type TransactionError = {} | string;\n\n/**\n * Transaction confirmation status\n * <pre>\n *   'processed': Transaction landed in a block which has reached 1 confirmation by the connected node\n *   'confirmed': Transaction landed in a block which has reached 1 confirmation by the cluster\n *   'finalized': Transaction landed in a block which has been finalized by the cluster\n * </pre>\n */\nexport type TransactionConfirmationStatus =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized';\n\n/**\n * Signature status\n */\nexport type SignatureStatus = {\n  /** when the transaction was processed */\n  slot: number;\n  /** the number of blocks that have been confirmed and voted on in the fork containing `slot` */\n  confirmations: number | null;\n  /** transaction error, if any */\n  err: TransactionError | null;\n  /** cluster confirmation status, if data available. Possible responses: `processed`, `confirmed`, `finalized` */\n  confirmationStatus?: TransactionConfirmationStatus;\n};\n\n/**\n * A confirmed signature with its status\n */\nexport type ConfirmedSignatureInfo = {\n  /** the transaction signature */\n  signature: string;\n  /** when the transaction was processed */\n  slot: number;\n  /** error, if any */\n  err: TransactionError | null;\n  /** memo associated with the transaction, if any */\n  memo: string | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * An object defining headers to be passed to the RPC server\n */\nexport type HttpHeaders = {\n  [header: string]: string;\n} & {\n  // Prohibited headers; for internal use only.\n  'solana-client'?: never;\n};\n\n/**\n * The type of the JavaScript `fetch()` API\n */\nexport type FetchFn = typeof fetchImpl;\n\n/**\n * A callback used to augment the outgoing HTTP request\n */\nexport type FetchMiddleware = (\n  info: Parameters<FetchFn>[0],\n  init: Parameters<FetchFn>[1],\n  fetch: (...a: Parameters<FetchFn>) => void,\n) => void;\n\n/**\n * Configuration for instantiating a Connection\n */\nexport type ConnectionConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional endpoint URL to the fullnode JSON RPC PubSub WebSocket Endpoint */\n  wsEndpoint?: string;\n  /** Optional HTTP headers object */\n  httpHeaders?: HttpHeaders;\n  /** Optional custom fetch function */\n  fetch?: FetchFn;\n  /** Optional fetch middleware callback */\n  fetchMiddleware?: FetchMiddleware;\n  /** Optional Disable retrying calls when server responds with HTTP 429 (Too Many Requests) */\n  disableRetryOnRateLimit?: boolean;\n  /** time to allow for the server to initially process a transaction (in milliseconds) */\n  confirmTransactionInitialTimeout?: number;\n};\n\n/** @internal */\nconst COMMON_HTTP_HEADERS = {\n  'solana-client': `js/${process.env.npm_package_version ?? 'UNKNOWN'}`,\n};\n\n/**\n * A connection to a fullnode JSON RPC endpoint\n */\nexport class Connection {\n  /** @internal */ _commitment?: Commitment;\n  /** @internal */ _confirmTransactionInitialTimeout?: number;\n  /** @internal */ _rpcEndpoint: string;\n  /** @internal */ _rpcWsEndpoint: string;\n  /** @internal */ _rpcClient: RpcClient;\n  /** @internal */ _rpcRequest: RpcRequest;\n  /** @internal */ _rpcBatchRequest: RpcBatchRequest;\n  /** @internal */ _rpcWebSocket: RpcWebSocketClient;\n  /** @internal */ _rpcWebSocketConnected: boolean = false;\n  /** @internal */ _rpcWebSocketHeartbeat: ReturnType<\n    typeof setInterval\n  > | null = null;\n  /** @internal */ _rpcWebSocketIdleTimeout: ReturnType<\n    typeof setTimeout\n  > | null = null;\n  /** @internal\n   * A number that we increment every time an active connection closes.\n   * Used to determine whether the same socket connection that was open\n   * when an async operation started is the same one that's active when\n   * its continuation fires.\n   *\n   */ private _rpcWebSocketGeneration: number = 0;\n\n  /** @internal */ _disableBlockhashCaching: boolean = false;\n  /** @internal */ _pollingBlockhash: boolean = false;\n  /** @internal */ _blockhashInfo: {\n    latestBlockhash: BlockhashWithExpiryBlockHeight | null;\n    lastFetch: number;\n    simulatedSignatures: Array<string>;\n    transactionSignatures: Array<string>;\n  } = {\n    latestBlockhash: null,\n    lastFetch: 0,\n    transactionSignatures: [],\n    simulatedSignatures: [],\n  };\n\n  /** @internal */ private _nextClientSubscriptionId: ClientSubscriptionId = 0;\n  /** @internal */ private _subscriptionDisposeFunctionsByClientSubscriptionId: {\n    [clientSubscriptionId: ClientSubscriptionId]:\n      | SubscriptionDisposeFn\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionCallbacksByServerSubscriptionId: {\n    [serverSubscriptionId: ServerSubscriptionId]:\n      | Set<SubscriptionConfig['callback']>\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionsByHash: {\n    [hash: SubscriptionConfigHash]: Subscription | undefined;\n  } = {};\n  /**\n   * Special case.\n   * After a signature is processed, RPCs automatically dispose of the\n   * subscription on the server side. We need to track which of these\n   * subscriptions have been disposed in such a way, so that we know\n   * whether the client is dealing with a not-yet-processed signature\n   * (in which case we must tear down the server subscription) or an\n   * already-processed signature (in which case the client can simply\n   * clear out the subscription locally without telling the server).\n   *\n   * NOTE: There is a proposal to eliminate this special case, here:\n   * https://github.com/solana-labs/solana/issues/18892\n   */\n  /** @internal */ private _subscriptionsAutoDisposedByRpc: Set<ServerSubscriptionId> =\n    new Set();\n\n  /**\n   * Establish a JSON RPC connection\n   *\n   * @param endpoint URL to the fullnode JSON RPC endpoint\n   * @param commitmentOrConfig optional default commitment level or optional ConnectionConfig configuration object\n   */\n  constructor(\n    endpoint: string,\n    commitmentOrConfig?: Commitment | ConnectionConfig,\n  ) {\n    let wsEndpoint;\n    let httpHeaders;\n    let fetch;\n    let fetchMiddleware;\n    let disableRetryOnRateLimit;\n    if (commitmentOrConfig && typeof commitmentOrConfig === 'string') {\n      this._commitment = commitmentOrConfig;\n    } else if (commitmentOrConfig) {\n      this._commitment = commitmentOrConfig.commitment;\n      this._confirmTransactionInitialTimeout =\n        commitmentOrConfig.confirmTransactionInitialTimeout;\n      wsEndpoint = commitmentOrConfig.wsEndpoint;\n      httpHeaders = commitmentOrConfig.httpHeaders;\n      fetch = commitmentOrConfig.fetch;\n      fetchMiddleware = commitmentOrConfig.fetchMiddleware;\n      disableRetryOnRateLimit = commitmentOrConfig.disableRetryOnRateLimit;\n    }\n\n    this._rpcEndpoint = assertEndpointUrl(endpoint);\n    this._rpcWsEndpoint = wsEndpoint || makeWebsocketUrl(endpoint);\n\n    this._rpcClient = createRpcClient(\n      endpoint,\n      httpHeaders,\n      fetch,\n      fetchMiddleware,\n      disableRetryOnRateLimit,\n    );\n    this._rpcRequest = createRpcRequest(this._rpcClient);\n    this._rpcBatchRequest = createRpcBatchRequest(this._rpcClient);\n\n    this._rpcWebSocket = new RpcWebSocketClient(this._rpcWsEndpoint, {\n      autoconnect: false,\n      max_reconnects: Infinity,\n    });\n    this._rpcWebSocket.on('open', this._wsOnOpen.bind(this));\n    this._rpcWebSocket.on('error', this._wsOnError.bind(this));\n    this._rpcWebSocket.on('close', this._wsOnClose.bind(this));\n    this._rpcWebSocket.on(\n      'accountNotification',\n      this._wsOnAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'programNotification',\n      this._wsOnProgramAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotNotification',\n      this._wsOnSlotNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotsUpdatesNotification',\n      this._wsOnSlotUpdatesNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'signatureNotification',\n      this._wsOnSignatureNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'rootNotification',\n      this._wsOnRootNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'logsNotification',\n      this._wsOnLogsNotification.bind(this),\n    );\n  }\n\n  /**\n   * The default commitment used for requests\n   */\n  get commitment(): Commitment | undefined {\n    return this._commitment;\n  }\n\n  /**\n   * The RPC endpoint\n   */\n  get rpcEndpoint(): string {\n    return this._rpcEndpoint;\n  }\n\n  /**\n   * Fetch the balance for the specified public key, return with context\n   */\n  async getBalanceAndContext(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetBalanceConfig,\n  ): Promise<RpcResponseAndContext<number>> {\n    /** @internal */\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get balance for ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the balance for the specified public key\n   */\n  async getBalance(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetBalanceConfig,\n  ): Promise<number> {\n    return await this.getBalanceAndContext(publicKey, commitmentOrConfig)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get balance of account ' + publicKey.toBase58() + ': ' + e,\n        );\n      });\n  }\n\n  /**\n   * Fetch the estimated production time of a block\n   */\n  async getBlockTime(slot: number): Promise<number | null> {\n    const unsafeRes = await this._rpcRequest('getBlockTime', [slot]);\n    const res = create(unsafeRes, jsonRpcResult(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get block time for slot ${slot}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the lowest slot that the node has information about in its ledger.\n   * This value may increase over time if the node is configured to purge older ledger data\n   */\n  async getMinimumLedgerSlot(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('minimumLedgerSlot', []);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get minimum ledger slot',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the slot of the lowest confirmed block that has not been purged from the ledger\n   */\n  async getFirstAvailableBlock(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('getFirstAvailableBlock', []);\n    const res = create(unsafeRes, SlotRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get first available block',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch information about the current supply\n   */\n  async getSupply(\n    config?: GetSupplyConfig | Commitment,\n  ): Promise<RpcResponseAndContext<Supply>> {\n    let configArg: GetSupplyConfig = {};\n    if (typeof config === 'string') {\n      configArg = {commitment: config};\n    } else if (config) {\n      configArg = {\n        ...config,\n        commitment: (config && config.commitment) || this.commitment,\n      };\n    } else {\n      configArg = {\n        commitment: this.commitment,\n      };\n    }\n\n    const unsafeRes = await this._rpcRequest('getSupply', [configArg]);\n    const res = create(unsafeRes, GetSupplyRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current supply of a token mint\n   */\n  async getTokenSupply(\n    tokenMintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenMintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenSupply', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get token supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current balance of a token account\n   */\n  async getTokenAccountBalance(\n    tokenAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenAccountBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get token account balance',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>>}\n   */\n  async getTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitmentOrConfig?: Commitment | GetTokenAccountsByOwnerConfig,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<Buffer>}>\n    >\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get token accounts owned by account ${ownerAddress.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<ParsedAccountData>}>>>}\n   */\n  async getParsedTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<ParsedAccountData>}>\n    >\n  > {\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'jsonParsed');\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetParsedTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get token accounts owned by account ${ownerAddress.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest accounts with their current balances\n   */\n  async getLargestAccounts(\n    config?: GetLargestAccountsConfig,\n  ): Promise<RpcResponseAndContext<Array<AccountBalancePair>>> {\n    const arg = {\n      ...config,\n      commitment: (config && config.commitment) || this.commitment,\n    };\n    const args = arg.filter || arg.commitment ? [arg] : [];\n    const unsafeRes = await this._rpcRequest('getLargestAccounts', args);\n    const res = create(unsafeRes, GetLargestAccountsRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get largest accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest token accounts with their current balances\n   * for a given mint.\n   */\n  async getTokenLargestAccounts(\n    mintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<Array<TokenAccountBalancePair>>> {\n    const args = this._buildArgs([mintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenLargestAccounts', args);\n    const res = create(unsafeRes, GetTokenLargestAccountsResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get token largest accounts',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key, return with context\n   */\n  async getAccountInfoAndContext(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<RpcResponseAndContext<AccountInfo<Buffer> | null>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'base64',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(AccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info about account ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed account info for the specified public key\n   */\n  async getParsedAccountInfo(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<\n    RpcResponseAndContext<AccountInfo<Buffer | ParsedAccountData> | null>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(ParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info about account ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key\n   */\n  async getAccountInfo(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<AccountInfo<Buffer> | null> {\n    try {\n      const res = await this.getAccountInfoAndContext(\n        publicKey,\n        commitmentOrConfig,\n      );\n      return res.value;\n    } catch (e) {\n      throw new Error(\n        'failed to get info about account ' + publicKey.toBase58() + ': ' + e,\n      );\n    }\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleAccountsInfoAndContext(\n    publicKeys: PublicKey[],\n    commitmentOrConfig?: Commitment | GetMultipleAccountsConfig,\n  ): Promise<RpcResponseAndContext<(AccountInfo<Buffer> | null)[]>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(array(nullable(AccountInfoResult))),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info for accounts ${keys}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys\n   */\n  async getMultipleAccountsInfo(\n    publicKeys: PublicKey[],\n    commitmentOrConfig?: Commitment | GetMultipleAccountsConfig,\n  ): Promise<(AccountInfo<Buffer> | null)[]> {\n    const res = await this.getMultipleAccountsInfoAndContext(\n      publicKeys,\n      commitmentOrConfig,\n    );\n    return res.value;\n  }\n\n  /**\n   * Returns epoch activation information for a stake account that has been delegated\n   */\n  async getStakeActivation(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetStakeActivationConfig,\n    epoch?: number,\n  ): Promise<StakeActivationData> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined /* encoding */,\n      {\n        ...config,\n        epoch: epoch != null ? epoch : config?.epoch,\n      },\n    );\n\n    const unsafeRes = await this._rpcRequest('getStakeActivation', args);\n    const res = create(unsafeRes, jsonRpcResult(StakeActivationResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get Stake Activation ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>}\n   */\n  async getProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetProgramAccountsConfig | Commitment,\n  ): Promise<Array<{pubkey: PublicKey; account: AccountInfo<Buffer>}>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(configOrCommitment);\n    const {encoding, ...configWithoutEncoding} = config || {};\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      encoding || 'base64',\n      configWithoutEncoding,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(unsafeRes, jsonRpcResult(array(KeyedAccountInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get accounts owned by program ${programId.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch and parse all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer | ParsedAccountData>}>>}\n   */\n  async getParsedProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetParsedProgramAccountsConfig | Commitment,\n  ): Promise<\n    Array<{\n      pubkey: PublicKey;\n      account: AccountInfo<Buffer | ParsedAccountData>;\n    }>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(configOrCommitment);\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResult(array(KeyedParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get accounts owned by program ${programId.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  confirmTransaction(\n    strategy: BlockheightBasedTransactionConfirmationStrategy,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>>;\n\n  /** @deprecated Instead, call `confirmTransaction` using a `TransactionConfirmationConfig` */\n  // eslint-disable-next-line no-dupe-class-members\n  confirmTransaction(\n    strategy: TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async confirmTransaction(\n    strategy:\n      | BlockheightBasedTransactionConfirmationStrategy\n      | TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>> {\n    let rawSignature: string;\n\n    if (typeof strategy == 'string') {\n      rawSignature = strategy;\n    } else {\n      const config =\n        strategy as BlockheightBasedTransactionConfirmationStrategy;\n      rawSignature = config.signature;\n    }\n\n    let decodedSignature;\n\n    try {\n      decodedSignature = bs58.decode(rawSignature);\n    } catch (err) {\n      throw new Error('signature must be base58 encoded: ' + rawSignature);\n    }\n\n    assert(decodedSignature.length === 64, 'signature has invalid length');\n\n    const subscriptionCommitment = commitment || this.commitment;\n    let timeoutId;\n    let subscriptionId;\n    let done = false;\n\n    const confirmationPromise = new Promise<{\n      __type: TransactionStatus.PROCESSED;\n      response: RpcResponseAndContext<SignatureResult>;\n    }>((resolve, reject) => {\n      try {\n        subscriptionId = this.onSignature(\n          rawSignature,\n          (result: SignatureResult, context: Context) => {\n            subscriptionId = undefined;\n            const response = {\n              context,\n              value: result,\n            };\n            done = true;\n            resolve({__type: TransactionStatus.PROCESSED, response});\n          },\n          subscriptionCommitment,\n        );\n      } catch (err) {\n        reject(err);\n      }\n    });\n\n    const expiryPromise = new Promise<\n      | {__type: TransactionStatus.BLOCKHEIGHT_EXCEEDED}\n      | {__type: TransactionStatus.TIMED_OUT; timeoutMs: number}\n    >(resolve => {\n      if (typeof strategy === 'string') {\n        let timeoutMs = this._confirmTransactionInitialTimeout || 60 * 1000;\n        switch (subscriptionCommitment) {\n          case 'processed':\n          case 'recent':\n          case 'single':\n          case 'confirmed':\n          case 'singleGossip': {\n            timeoutMs = this._confirmTransactionInitialTimeout || 30 * 1000;\n            break;\n          }\n          // exhaust enums to ensure full coverage\n          case 'finalized':\n          case 'max':\n          case 'root':\n        }\n\n        timeoutId = setTimeout(\n          () => resolve({__type: TransactionStatus.TIMED_OUT, timeoutMs}),\n          timeoutMs,\n        );\n      } else {\n        let config =\n          strategy as BlockheightBasedTransactionConfirmationStrategy;\n        const checkBlockHeight = async () => {\n          try {\n            const blockHeight = await this.getBlockHeight(commitment);\n            return blockHeight;\n          } catch (_e) {\n            return -1;\n          }\n        };\n        (async () => {\n          let currentBlockHeight = await checkBlockHeight();\n          if (done) return;\n          while (currentBlockHeight <= config.lastValidBlockHeight) {\n            await sleep(1000);\n            if (done) return;\n            currentBlockHeight = await checkBlockHeight();\n            if (done) return;\n          }\n          resolve({__type: TransactionStatus.BLOCKHEIGHT_EXCEEDED});\n        })();\n      }\n    });\n\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([confirmationPromise, expiryPromise]);\n      switch (outcome.__type) {\n        case TransactionStatus.BLOCKHEIGHT_EXCEEDED:\n          throw new TransactionExpiredBlockheightExceededError(rawSignature);\n        case TransactionStatus.PROCESSED:\n          result = outcome.response;\n          break;\n        case TransactionStatus.TIMED_OUT:\n          throw new TransactionExpiredTimeoutError(\n            rawSignature,\n            outcome.timeoutMs / 1000,\n          );\n      }\n    } finally {\n      clearTimeout(timeoutId);\n      if (subscriptionId) {\n        this.removeSignatureListener(subscriptionId);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getClusterNodes(): Promise<Array<ContactInfo>> {\n    const unsafeRes = await this._rpcRequest('getClusterNodes', []);\n    const res = create(unsafeRes, jsonRpcResult(array(ContactInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get cluster nodes');\n    }\n    return res.result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getVoteAccounts(commitment?: Commitment): Promise<VoteAccountStatus> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getVoteAccounts', args);\n    const res = create(unsafeRes, GetVoteAccounts);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get vote accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot that the node is processing\n   */\n  async getSlot(\n    commitmentOrConfig?: Commitment | GetSlotConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getSlot', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot leader of the cluster\n   */\n  async getSlotLeader(\n    commitmentOrConfig?: Commitment | GetSlotLeaderConfig,\n  ): Promise<string> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getSlotLeader', args);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leader');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch `limit` number of slot leaders starting from `startSlot`\n   *\n   * @param startSlot fetch slot leaders starting from this slot\n   * @param limit number of slot leaders to return\n   */\n  async getSlotLeaders(\n    startSlot: number,\n    limit: number,\n  ): Promise<Array<PublicKey>> {\n    const args = [startSlot, limit];\n    const unsafeRes = await this._rpcRequest('getSlotLeaders', args);\n    const res = create(unsafeRes, jsonRpcResult(array(PublicKeyFromString)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leaders');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current status of a signature\n   */\n  async getSignatureStatus(\n    signature: TransactionSignature,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<SignatureStatus | null>> {\n    const {context, value: values} = await this.getSignatureStatuses(\n      [signature],\n      config,\n    );\n    assert(values.length === 1);\n    const value = values[0];\n    return {context, value};\n  }\n\n  /**\n   * Fetch the current statuses of a batch of signatures\n   */\n  async getSignatureStatuses(\n    signatures: Array<TransactionSignature>,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<Array<SignatureStatus | null>>> {\n    const params: any[] = [signatures];\n    if (config) {\n      params.push(config);\n    }\n    const unsafeRes = await this._rpcRequest('getSignatureStatuses', params);\n    const res = create(unsafeRes, GetSignatureStatusesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get signature status');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current transaction count of the cluster\n   */\n  async getTransactionCount(\n    commitmentOrConfig?: Commitment | GetTransactionCountConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransactionCount', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get transaction count',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current total currency supply of the cluster in lamports\n   *\n   * @deprecated Deprecated since v1.2.8. Please use {@link getSupply} instead.\n   */\n  async getTotalSupply(commitment?: Commitment): Promise<number> {\n    const result = await this.getSupply({\n      commitment,\n      excludeNonCirculatingAccountsList: true,\n    });\n    return result.value.total;\n  }\n\n  /**\n   * Fetch the cluster InflationGovernor parameters\n   */\n  async getInflationGovernor(\n    commitment?: Commitment,\n  ): Promise<InflationGovernor> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getInflationGovernor', args);\n    const res = create(unsafeRes, GetInflationGovernorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the inflation reward for a list of addresses for an epoch\n   */\n  async getInflationReward(\n    addresses: PublicKey[],\n    epoch?: number,\n    commitmentOrConfig?: Commitment | GetInflationRewardConfig,\n  ): Promise<(InflationReward | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [addresses.map(pubkey => pubkey.toBase58())],\n      commitment,\n      undefined /* encoding */,\n      {\n        ...config,\n        epoch: epoch != null ? epoch : config?.epoch,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getInflationReward', args);\n    const res = create(unsafeRes, GetInflationRewardResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation reward');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Info parameters\n   */\n  async getEpochInfo(\n    commitmentOrConfig?: Commitment | GetEpochInfoConfig,\n  ): Promise<EpochInfo> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getEpochInfo', args);\n    const res = create(unsafeRes, GetEpochInfoRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch info');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Schedule parameters\n   */\n  async getEpochSchedule(): Promise<EpochSchedule> {\n    const unsafeRes = await this._rpcRequest('getEpochSchedule', []);\n    const res = create(unsafeRes, GetEpochScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch schedule');\n    }\n    const epochSchedule = res.result;\n    return new EpochSchedule(\n      epochSchedule.slotsPerEpoch,\n      epochSchedule.leaderScheduleSlotOffset,\n      epochSchedule.warmup,\n      epochSchedule.firstNormalEpoch,\n      epochSchedule.firstNormalSlot,\n    );\n  }\n\n  /**\n   * Fetch the leader schedule for the current epoch\n   * @return {Promise<RpcResponseAndContext<LeaderSchedule>>}\n   */\n  async getLeaderSchedule(): Promise<LeaderSchedule> {\n    const unsafeRes = await this._rpcRequest('getLeaderSchedule', []);\n    const res = create(unsafeRes, GetLeaderScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get leader schedule');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the minimum balance needed to exempt an account of `dataLength`\n   * size from rent\n   */\n  async getMinimumBalanceForRentExemption(\n    dataLength: number,\n    commitment?: Commitment,\n  ): Promise<number> {\n    const args = this._buildArgs([dataLength], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getMinimumBalanceForRentExemption',\n      args,\n    );\n    const res = create(unsafeRes, GetMinimumBalanceForRentExemptionRpcResult);\n    if ('error' in res) {\n      console.warn('Unable to fetch minimum balance for rent exemption');\n      return 0;\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster, return with context\n   * @return {Promise<RpcResponseAndContext<{blockhash: Blockhash, feeCalculator: FeeCalculator}>>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhashAndContext(\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<{blockhash: Blockhash; feeCalculator: FeeCalculator}>\n  > {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getRecentBlockhash', args);\n    const res = create(unsafeRes, GetRecentBlockhashAndContextRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get recent blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch recent performance samples\n   * @return {Promise<Array<PerfSample>>}\n   */\n  async getRecentPerformanceSamples(\n    limit?: number,\n  ): Promise<Array<PerfSample>> {\n    const unsafeRes = await this._rpcRequest(\n      'getRecentPerformanceSamples',\n      limit ? [limit] : [],\n    );\n    const res = create(unsafeRes, GetRecentPerformanceSamplesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get recent performance samples',\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch the fee calculator for a recent blockhash from the cluster, return with context\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getFeeForMessage} instead.\n   */\n  async getFeeCalculatorForBlockhash(\n    blockhash: Blockhash,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<FeeCalculator | null>> {\n    const args = this._buildArgs([blockhash], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getFeeCalculatorForBlockhash',\n      args,\n    );\n\n    const res = create(unsafeRes, GetFeeCalculatorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee calculator');\n    }\n    const {context, value} = res.result;\n    return {\n      context,\n      value: value !== null ? value.feeCalculator : null,\n    };\n  }\n\n  /**\n   * Fetch the fee for a message from the cluster, return with context\n   */\n  async getFeeForMessage(\n    message: Message,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<number>> {\n    const wireMessage = message.serialize().toString('base64');\n    const args = this._buildArgs([wireMessage], commitment);\n    const unsafeRes = await this._rpcRequest('getFeeForMessage', args);\n\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot');\n    }\n    if (res.result === null) {\n      throw new Error('invalid blockhash');\n    }\n    return res.result as unknown as RpcResponseAndContext<number>;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, feeCalculator: FeeCalculator}>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhash(\n    commitment?: Commitment,\n  ): Promise<{blockhash: Blockhash; feeCalculator: FeeCalculator}> {\n    try {\n      const res = await this.getRecentBlockhashAndContext(commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhash(\n    commitmentOrConfig?: Commitment | GetLatestBlockhashConfig,\n  ): Promise<BlockhashWithExpiryBlockHeight> {\n    try {\n      const res = await this.getLatestBlockhashAndContext(commitmentOrConfig);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhashAndContext(\n    commitmentOrConfig?: Commitment | GetLatestBlockhashConfig,\n  ): Promise<RpcResponseAndContext<BlockhashWithExpiryBlockHeight>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getLatestBlockhash', args);\n    const res = create(unsafeRes, GetLatestBlockhashRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get latest blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the node version\n   */\n  async getVersion(): Promise<Version> {\n    const unsafeRes = await this._rpcRequest('getVersion', []);\n    const res = create(unsafeRes, jsonRpcResult(VersionResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get version');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the genesis hash\n   */\n  async getGenesisHash(): Promise<string> {\n    const unsafeRes = await this._rpcRequest('getGenesisHash', []);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get genesis hash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a processed block from the cluster.\n   *\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  async getBlock(\n    slot: number,\n    rawConfig?: GetBlockConfig,\n  ): Promise<BlockResponse | null>;\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<VersionedBlockResponse | null>;\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<VersionedBlockResponse | null> {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment as Finality,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockRpcResult);\n\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    return {\n      ...result,\n      transactions: result.transactions.map(({transaction, meta, version}) => ({\n        meta,\n        transaction: {\n          ...transaction,\n          message: versionedMessageFromResponse(version, transaction.message),\n        },\n        version,\n      })),\n    };\n  }\n\n  /*\n   * Returns the current block height of the node\n   */\n  async getBlockHeight(\n    commitmentOrConfig?: Commitment | GetBlockHeightConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlockHeight', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get block height information',\n      );\n    }\n\n    return res.result;\n  }\n\n  /*\n   * Returns recent block production information from the current or previous epoch\n   */\n  async getBlockProduction(\n    configOrCommitment?: GetBlockProductionConfig | Commitment,\n  ): Promise<RpcResponseAndContext<BlockProduction>> {\n    let extra: Omit<GetBlockProductionConfig, 'commitment'> | undefined;\n    let commitment: Commitment | undefined;\n\n    if (typeof configOrCommitment === 'string') {\n      commitment = configOrCommitment;\n    } else if (configOrCommitment) {\n      const {commitment: c, ...rest} = configOrCommitment;\n      commitment = c;\n      extra = rest;\n    }\n\n    const args = this._buildArgs([], commitment, 'base64', extra);\n    const unsafeRes = await this._rpcRequest('getBlockProduction', args);\n    const res = create(unsafeRes, BlockProductionResponseStruct);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get block production information',\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   *\n   * @deprecated Instead, call `getTransaction` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n  async getTransaction(\n    signature: string,\n    rawConfig?: GetTransactionConfig,\n  ): Promise<TransactionResponse | null>;\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransaction(\n    signature: string,\n    rawConfig: GetVersionedTransactionConfig,\n  ): Promise<VersionedTransactionResponse | null>;\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransaction(\n    signature: string,\n    rawConfig?: GetVersionedTransactionConfig,\n  ): Promise<VersionedTransactionResponse | null> {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment as Finality,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    return {\n      ...result,\n      transaction: {\n        ...result.transaction,\n        message: versionedMessageFromResponse(\n          result.version,\n          result.transaction.message,\n        ),\n      },\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized transaction\n   */\n  async getParsedTransaction(\n    signature: TransactionSignature,\n    commitmentOrConfig?: GetVersionedTransactionConfig | Finality,\n  ): Promise<ParsedTransactionWithMeta | null> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment as Finality,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   */\n  async getParsedTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig?: GetVersionedTransactionConfig | Finality,\n  ): Promise<(ParsedTransactionWithMeta | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment as Finality,\n        'jsonParsed',\n        config,\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link TransactionResponse}.\n   *\n   * @deprecated Instead, call `getTransactions` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig?: GetTransactionConfig | Finality,\n  ): Promise<(TransactionResponse | null)[]>;\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig: GetVersionedTransactionConfig | Finality,\n  ): Promise<(VersionedTransactionResponse | null)[]>;\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig: GetVersionedTransactionConfig | Finality,\n  ): Promise<(VersionedTransactionResponse | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment as Finality,\n        undefined /* encoding */,\n        config,\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      const result = res.result;\n      if (!result) return result;\n\n      return {\n        ...result,\n        transaction: {\n          ...result.transaction,\n          message: versionedMessageFromResponse(\n            result.version,\n            result.transaction.message,\n          ),\n        },\n      };\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of Transactions and transaction statuses from the cluster\n   * for a confirmed block.\n   *\n   * @deprecated Deprecated since v1.13.0. Please use {@link getBlock} instead.\n   */\n  async getConfirmedBlock(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<ConfirmedBlock> {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetConfirmedBlockRpcResult);\n\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n\n    const block = {\n      ...result,\n      transactions: result.transactions.map(({transaction, meta}) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: {\n            ...transaction,\n            message,\n          },\n        };\n      }),\n    };\n\n    return {\n      ...block,\n      transactions: block.transactions.map(({transaction, meta}) => {\n        return {\n          meta,\n          transaction: Transaction.populate(\n            transaction.message,\n            transaction.signatures,\n          ),\n        };\n      }),\n    };\n  }\n\n  /**\n   * Fetch confirmed blocks between two slots\n   */\n  async getBlocks(\n    startSlot: number,\n    endSlot?: number,\n    commitment?: Finality,\n  ): Promise<Array<number>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      endSlot !== undefined ? [startSlot, endSlot] : [startSlot],\n      commitment,\n    );\n    const unsafeRes = await this._rpcRequest('getBlocks', args);\n    const res = create(unsafeRes, jsonRpcResult(array(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get blocks');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a block, excluding rewards\n   */\n  async getBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a confirmed block, excluding rewards\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getBlockSignatures} instead.\n   */\n  async getConfirmedBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getTransaction} instead.\n   */\n  async getConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    const message = new Message(result.transaction.message);\n    const signatures = result.transaction.signatures;\n    return {\n      ...result,\n      transaction: Transaction.populate(message, signatures),\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransaction} instead.\n   */\n  async getParsedConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ParsedConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment,\n      'jsonParsed',\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get confirmed transaction',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransactions} instead.\n   */\n  async getParsedConfirmedTransactions(\n    signatures: TransactionSignature[],\n    commitment?: Finality,\n  ): Promise<(ParsedConfirmedTransaction | null)[]> {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment,\n        'jsonParsed',\n      );\n      return {\n        methodName: 'getConfirmedTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(\n          res.error,\n          'failed to get confirmed transactions',\n        );\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of all the confirmed signatures for transactions involving an address\n   * within a specified slot range. Max range allowed is 10,000 slots.\n   *\n   * @deprecated Deprecated since v1.3. Please use {@link getConfirmedSignaturesForAddress2} instead.\n   *\n   * @param address queried address\n   * @param startSlot start slot, inclusive\n   * @param endSlot end slot, inclusive\n   */\n  async getConfirmedSignaturesForAddress(\n    address: PublicKey,\n    startSlot: number,\n    endSlot: number,\n  ): Promise<Array<TransactionSignature>> {\n    let options: any = {};\n\n    let firstAvailableBlock = await this.getFirstAvailableBlock();\n    while (!('until' in options)) {\n      startSlot--;\n      if (startSlot <= 0 || startSlot < firstAvailableBlock) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(\n          startSlot,\n          'finalized',\n        );\n        if (block.signatures.length > 0) {\n          options.until =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    let highestConfirmedRoot = await this.getSlot('finalized');\n    while (!('before' in options)) {\n      endSlot++;\n      if (endSlot > highestConfirmedRoot) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(endSlot);\n        if (block.signatures.length > 0) {\n          options.before =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    const confirmedSignatureInfo = await this.getConfirmedSignaturesForAddress2(\n      address,\n      options,\n    );\n    return confirmedSignatureInfo.map(info => info.signature);\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getConfirmedSignaturesForAddress2(\n    address: PublicKey,\n    options?: ConfirmedSignaturesForAddress2Options,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest(\n      'getConfirmedSignaturesForAddress2',\n      args,\n    );\n    const res = create(unsafeRes, GetConfirmedSignaturesForAddress2RpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get confirmed signatures for address',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getSignaturesForAddress(\n    address: PublicKey,\n    options?: SignaturesForAddressOptions,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest('getSignaturesForAddress', args);\n    const res = create(unsafeRes, GetSignaturesForAddressRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get signatures for address',\n      );\n    }\n    return res.result;\n  }\n\n  async getAddressLookupTable(\n    accountKey: PublicKey,\n    config?: GetAccountInfoConfig,\n  ): Promise<RpcResponseAndContext<AddressLookupTableAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      accountKey,\n      config,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = new AddressLookupTableAccount({\n        key: accountKey,\n        state: AddressLookupTableAccount.deserialize(accountInfo.data),\n      });\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster, return with context\n   */\n  async getNonceAndContext(\n    nonceAccount: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<NonceAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      nonceAccount,\n      commitment,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = NonceAccount.fromAccountData(accountInfo.data);\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster\n   */\n  async getNonce(\n    nonceAccount: PublicKey,\n    commitment?: Commitment,\n  ): Promise<NonceAccount | null> {\n    return await this.getNonceAndContext(nonceAccount, commitment)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get nonce for account ' +\n            nonceAccount.toBase58() +\n            ': ' +\n            e,\n        );\n      });\n  }\n\n  /**\n   * Request an allocation of lamports to the specified address\n   *\n   * ```typescript\n   * import { Connection, PublicKey, LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n   *\n   * (async () => {\n   *   const connection = new Connection(\"https://api.testnet.solana.com\", \"confirmed\");\n   *   const myAddress = new PublicKey(\"2nr1bHFT86W9tGnyvmYW4vcHKsQB3sVQfnddasz4kExM\");\n   *   const signature = await connection.requestAirdrop(myAddress, LAMPORTS_PER_SOL);\n   *   await connection.confirmTransaction(signature);\n   * })();\n   * ```\n   */\n  async requestAirdrop(\n    to: PublicKey,\n    lamports: number,\n  ): Promise<TransactionSignature> {\n    const unsafeRes = await this._rpcRequest('requestAirdrop', [\n      to.toBase58(),\n      lamports,\n    ]);\n    const res = create(unsafeRes, RequestAirdropRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `airdrop to ${to.toBase58()} failed`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  async _blockhashWithExpiryBlockHeight(\n    disableCache: boolean,\n  ): Promise<BlockhashWithExpiryBlockHeight> {\n    if (!disableCache) {\n      // Wait for polling to finish\n      while (this._pollingBlockhash) {\n        await sleep(100);\n      }\n      const timeSinceFetch = Date.now() - this._blockhashInfo.lastFetch;\n      const expired = timeSinceFetch >= BLOCKHASH_CACHE_TIMEOUT_MS;\n      if (this._blockhashInfo.latestBlockhash !== null && !expired) {\n        return this._blockhashInfo.latestBlockhash;\n      }\n    }\n\n    return await this._pollNewBlockhash();\n  }\n\n  /**\n   * @internal\n   */\n  async _pollNewBlockhash(): Promise<BlockhashWithExpiryBlockHeight> {\n    this._pollingBlockhash = true;\n    try {\n      const startTime = Date.now();\n      const cachedLatestBlockhash = this._blockhashInfo.latestBlockhash;\n      const cachedBlockhash = cachedLatestBlockhash\n        ? cachedLatestBlockhash.blockhash\n        : null;\n      for (let i = 0; i < 50; i++) {\n        const latestBlockhash = await this.getLatestBlockhash('finalized');\n\n        if (cachedBlockhash !== latestBlockhash.blockhash) {\n          this._blockhashInfo = {\n            latestBlockhash,\n            lastFetch: Date.now(),\n            transactionSignatures: [],\n            simulatedSignatures: [],\n          };\n          return latestBlockhash;\n        }\n\n        // Sleep for approximately half a slot\n        await sleep(MS_PER_SLOT / 2);\n      }\n\n      throw new Error(\n        `Unable to obtain a new blockhash after ${Date.now() - startTime}ms`,\n      );\n    } finally {\n      this._pollingBlockhash = false;\n    }\n  }\n\n  /**\n   * get the stake minimum delegation\n   */\n  async getStakeMinimumDelegation(\n    config?: GetStakeMinimumDelegationConfig,\n  ): Promise<RpcResponseAndContext<number>> {\n    const {commitment, config: configArg} = extractCommitmentFromConfig(config);\n    const args = this._buildArgs([], commitment, 'base64', configArg);\n    const unsafeRes = await this._rpcRequest('getStakeMinimumDelegation', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get stake minimum delegation`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Simulate a transaction\n   *\n   * @deprecated Instead, call {@link simulateTransaction} with {@link\n   * VersionedTransaction} and {@link SimulateTransactionConfig} parameters\n   */\n  simulateTransaction(\n    transactionOrMessage: Transaction | Message,\n    signers?: Array<Signer>,\n    includeAccounts?: boolean | Array<PublicKey>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>>;\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  simulateTransaction(\n    transaction: VersionedTransaction,\n    config?: SimulateTransactionConfig,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>>;\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async simulateTransaction(\n    transactionOrMessage: VersionedTransaction | Transaction | Message,\n    configOrSigners?: SimulateTransactionConfig | Array<Signer>,\n    includeAccounts?: boolean | Array<PublicKey>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\n    if ('message' in transactionOrMessage) {\n      const versionedTx = transactionOrMessage;\n      const wireTransaction = versionedTx.serialize();\n      const encodedTransaction =\n        Buffer.from(wireTransaction).toString('base64');\n      if (Array.isArray(configOrSigners) || includeAccounts !== undefined) {\n        throw new Error('Invalid arguments');\n      }\n\n      const config: any = configOrSigners || {};\n      config.encoding = 'base64';\n      if (!('commitment' in config)) {\n        config.commitment = this.commitment;\n      }\n\n      const args = [encodedTransaction, config];\n      const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n      const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n      if ('error' in res) {\n        throw new Error('failed to simulate transaction: ' + res.error.message);\n      }\n      return res.result;\n    }\n\n    let transaction;\n    if (transactionOrMessage instanceof Transaction) {\n      let originalTx: Transaction = transactionOrMessage;\n      transaction = new Transaction();\n      transaction.feePayer = originalTx.feePayer;\n      transaction.instructions = transactionOrMessage.instructions;\n      transaction.nonceInfo = originalTx.nonceInfo;\n      transaction.signatures = originalTx.signatures;\n    } else {\n      transaction = Transaction.populate(transactionOrMessage);\n      // HACK: this function relies on mutating the populated transaction\n      transaction._message = transaction._json = undefined;\n    }\n\n    if (configOrSigners !== undefined && !Array.isArray(configOrSigners)) {\n      throw new Error('Invalid arguments');\n    }\n\n    const signers = configOrSigners;\n    if (transaction.nonceInfo && signers) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(\n          disableCache,\n        );\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n\n        if (!signers) break;\n\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (\n          !this._blockhashInfo.simulatedSignatures.includes(signature) &&\n          !this._blockhashInfo.transactionSignatures.includes(signature)\n        ) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.simulatedSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const message = transaction._compile();\n    const signData = message.serialize();\n    const wireTransaction = transaction._serialize(signData);\n    const encodedTransaction = wireTransaction.toString('base64');\n    const config: any = {\n      encoding: 'base64',\n      commitment: this.commitment,\n    };\n\n    if (includeAccounts) {\n      const addresses = (\n        Array.isArray(includeAccounts)\n          ? includeAccounts\n          : message.nonProgramIds()\n      ).map(key => key.toBase58());\n\n      config['accounts'] = {\n        encoding: 'base64',\n        addresses,\n      };\n    }\n\n    if (signers) {\n      config.sigVerify = true;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n    const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n        if (logs && Array.isArray(logs)) {\n          const traceIndent = '\\n    ';\n          const logTrace = traceIndent + logs.join(traceIndent);\n          console.error(res.error.message, logTrace);\n        }\n      }\n      throw new SendTransactionError(\n        'failed to simulate transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Sign and send a transaction\n   *\n   * @deprecated Instead, call {@link sendTransaction} with a {@link\n   * VersionedTransaction}\n   */\n  sendTransaction(\n    transaction: Transaction,\n    signers: Array<Signer>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature>;\n\n  /**\n   * Send a signed transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  sendTransaction(\n    transaction: VersionedTransaction,\n    options?: SendOptions,\n  ): Promise<TransactionSignature>;\n\n  /**\n   * Sign and send a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async sendTransaction(\n    transaction: VersionedTransaction | Transaction,\n    signersOrOptions?: Array<Signer> | SendOptions,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    if ('version' in transaction) {\n      if (signersOrOptions && Array.isArray(signersOrOptions)) {\n        throw new Error('Invalid arguments');\n      }\n\n      const wireTransaction = transaction.serialize();\n      return await this.sendRawTransaction(wireTransaction, options);\n    }\n\n    if (signersOrOptions === undefined || !Array.isArray(signersOrOptions)) {\n      throw new Error('Invalid arguments');\n    }\n\n    const signers = signersOrOptions;\n    if (transaction.nonceInfo) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(\n          disableCache,\n        );\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (!this._blockhashInfo.transactionSignatures.includes(signature)) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.transactionSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const wireTransaction = transaction.serialize();\n    return await this.sendRawTransaction(wireTransaction, options);\n  }\n\n  /**\n   * Send a transaction that has already been signed and serialized into the\n   * wire format\n   */\n  async sendRawTransaction(\n    rawTransaction: Buffer | Uint8Array | Array<number>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const encodedTransaction = toBuffer(rawTransaction).toString('base64');\n    const result = await this.sendEncodedTransaction(\n      encodedTransaction,\n      options,\n    );\n    return result;\n  }\n\n  /**\n   * Send a transaction that has already been signed, serialized into the\n   * wire format, and encoded as a base64 string\n   */\n  async sendEncodedTransaction(\n    encodedTransaction: string,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const config: any = {encoding: 'base64'};\n    const skipPreflight = options && options.skipPreflight;\n    const preflightCommitment =\n      (options && options.preflightCommitment) || this.commitment;\n\n    if (options && options.maxRetries != null) {\n      config.maxRetries = options.maxRetries;\n    }\n    if (options && options.minContextSlot != null) {\n      config.minContextSlot = options.minContextSlot;\n    }\n    if (skipPreflight) {\n      config.skipPreflight = skipPreflight;\n    }\n    if (preflightCommitment) {\n      config.preflightCommitment = preflightCommitment;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('sendTransaction', args);\n    const res = create(unsafeRes, SendTransactionRpcResult);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n      }\n      throw new SendTransactionError(\n        'failed to send transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnOpen() {\n    this._rpcWebSocketConnected = true;\n    this._rpcWebSocketHeartbeat = setInterval(() => {\n      // Ping server every 5s to prevent idle timeouts\n      this._rpcWebSocket.notify('ping').catch(() => {});\n    }, 5000);\n    this._updateSubscriptions();\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnError(err: Error) {\n    this._rpcWebSocketConnected = false;\n    console.error('ws error:', err.message);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnClose(code: number) {\n    this._rpcWebSocketConnected = false;\n    this._rpcWebSocketGeneration++;\n    if (this._rpcWebSocketIdleTimeout) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n    }\n    if (this._rpcWebSocketHeartbeat) {\n      clearInterval(this._rpcWebSocketHeartbeat);\n      this._rpcWebSocketHeartbeat = null;\n    }\n\n    if (code === 1000) {\n      // explicit close, check if any subscriptions have been made since close\n      this._updateSubscriptions();\n      return;\n    }\n\n    // implicit close, prepare subscriptions for auto-reconnect\n    this._subscriptionCallbacksByServerSubscriptionId = {};\n    Object.entries(\n      this._subscriptionsByHash as Record<SubscriptionConfigHash, Subscription>,\n    ).forEach(([hash, subscription]) => {\n      this._subscriptionsByHash[hash] = {\n        ...subscription,\n        state: 'pending',\n      };\n    });\n  }\n\n  /**\n   * @internal\n   */\n  async _updateSubscriptions() {\n    if (Object.keys(this._subscriptionsByHash).length === 0) {\n      if (this._rpcWebSocketConnected) {\n        this._rpcWebSocketConnected = false;\n        this._rpcWebSocketIdleTimeout = setTimeout(() => {\n          this._rpcWebSocketIdleTimeout = null;\n          try {\n            this._rpcWebSocket.close();\n          } catch (err) {\n            // swallow error if socket has already been closed.\n            if (err instanceof Error) {\n              console.log(\n                `Error when closing socket connection: ${err.message}`,\n              );\n            }\n          }\n        }, 500);\n      }\n      return;\n    }\n\n    if (this._rpcWebSocketIdleTimeout !== null) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n      this._rpcWebSocketConnected = true;\n    }\n\n    if (!this._rpcWebSocketConnected) {\n      this._rpcWebSocket.connect();\n      return;\n    }\n\n    const activeWebSocketGeneration = this._rpcWebSocketGeneration;\n    const isCurrentConnectionStillActive = () => {\n      return activeWebSocketGeneration === this._rpcWebSocketGeneration;\n    };\n\n    await Promise.all(\n      // Don't be tempted to change this to `Object.entries`. We call\n      // `_updateSubscriptions` recursively when processing the state,\n      // so it's important that we look up the *current* version of\n      // each subscription, every time we process a hash.\n      Object.keys(this._subscriptionsByHash).map(async hash => {\n        const subscription = this._subscriptionsByHash[hash];\n        if (subscription === undefined) {\n          // This entry has since been deleted. Skip.\n          return;\n        }\n        switch (subscription.state) {\n          case 'pending':\n          case 'unsubscribed':\n            if (subscription.callbacks.size === 0) {\n              /**\n               * You can end up here when:\n               *\n               * - a subscription has recently unsubscribed\n               *   without having new callbacks added to it\n               *   while the unsubscribe was in flight, or\n               * - when a pending subscription has its\n               *   listeners removed before a request was\n               *   sent to the server.\n               *\n               * Being that nobody is interested in this\n               * subscription any longer, delete it.\n               */\n              delete this._subscriptionsByHash[hash];\n              if (subscription.state === 'unsubscribed') {\n                delete this._subscriptionCallbacksByServerSubscriptionId[\n                  subscription.serverSubscriptionId\n                ];\n              }\n              await this._updateSubscriptions();\n              return;\n            }\n            await (async () => {\n              const {args, method} = subscription;\n              try {\n                this._subscriptionsByHash[hash] = {\n                  ...subscription,\n                  state: 'subscribing',\n                };\n                const serverSubscriptionId: ServerSubscriptionId =\n                  (await this._rpcWebSocket.call(method, args)) as number;\n                this._subscriptionsByHash[hash] = {\n                  ...subscription,\n                  serverSubscriptionId,\n                  state: 'subscribed',\n                };\n                this._subscriptionCallbacksByServerSubscriptionId[\n                  serverSubscriptionId\n                ] = subscription.callbacks;\n                await this._updateSubscriptions();\n              } catch (e) {\n                if (e instanceof Error) {\n                  console.error(\n                    `${method} error for argument`,\n                    args,\n                    e.message,\n                  );\n                }\n                if (!isCurrentConnectionStillActive()) {\n                  return;\n                }\n                // TODO: Maybe add an 'errored' state or a retry limit?\n                this._subscriptionsByHash[hash] = {\n                  ...subscription,\n                  state: 'pending',\n                };\n                await this._updateSubscriptions();\n              }\n            })();\n            break;\n          case 'subscribed':\n            if (subscription.callbacks.size === 0) {\n              // By the time we successfully set up a subscription\n              // with the server, the client stopped caring about it.\n              // Tear it down now.\n              await (async () => {\n                const {serverSubscriptionId, unsubscribeMethod} = subscription;\n                if (\n                  this._subscriptionsAutoDisposedByRpc.has(serverSubscriptionId)\n                ) {\n                  /**\n                   * Special case.\n                   * If we're dealing with a subscription that has been auto-\n                   * disposed by the RPC, then we can skip the RPC call to\n                   * tear down the subscription here.\n                   *\n                   * NOTE: There is a proposal to eliminate this special case, here:\n                   * https://github.com/solana-labs/solana/issues/18892\n                   */\n                  this._subscriptionsAutoDisposedByRpc.delete(\n                    serverSubscriptionId,\n                  );\n                } else {\n                  this._subscriptionsByHash[hash] = {\n                    ...subscription,\n                    state: 'unsubscribing',\n                  };\n                  try {\n                    await this._rpcWebSocket.call(unsubscribeMethod, [\n                      serverSubscriptionId,\n                    ]);\n                  } catch (e) {\n                    if (e instanceof Error) {\n                      console.error(`${unsubscribeMethod} error:`, e.message);\n                    }\n                    if (!isCurrentConnectionStillActive()) {\n                      return;\n                    }\n                    // TODO: Maybe add an 'errored' state or a retry limit?\n                    this._subscriptionsByHash[hash] = {\n                      ...subscription,\n                      state: 'subscribed',\n                    };\n                    await this._updateSubscriptions();\n                    return;\n                  }\n                }\n                this._subscriptionsByHash[hash] = {\n                  ...subscription,\n                  state: 'unsubscribed',\n                };\n                await this._updateSubscriptions();\n              })();\n            }\n            break;\n          case 'subscribing':\n          case 'unsubscribing':\n            break;\n        }\n      }),\n    );\n  }\n\n  /**\n   * @internal\n   */\n  private _handleServerNotification<\n    TCallback extends SubscriptionConfig['callback'],\n  >(\n    serverSubscriptionId: ServerSubscriptionId,\n    callbackArgs: Parameters<TCallback>,\n  ): void {\n    const callbacks =\n      this._subscriptionCallbacksByServerSubscriptionId[serverSubscriptionId];\n    if (callbacks === undefined) {\n      return;\n    }\n    callbacks.forEach(cb => {\n      try {\n        cb(\n          // I failed to find a way to convince TypeScript that `cb` is of type\n          // `TCallback` which is certainly compatible with `Parameters<TCallback>`.\n          // See https://github.com/microsoft/TypeScript/issues/47615\n          // @ts-ignore\n          ...callbackArgs,\n        );\n      } catch (e) {\n        console.error(e);\n      }\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnAccountNotification(notification: object) {\n    const {result, subscription} = create(\n      notification,\n      AccountNotificationResult,\n    );\n    this._handleServerNotification<AccountChangeCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  private _makeSubscription(\n    subscriptionConfig: SubscriptionConfig,\n    /**\n     * When preparing `args` for a call to `_makeSubscription`, be sure\n     * to carefully apply a default `commitment` property, if necessary.\n     *\n     * - If the user supplied a `commitment` use that.\n     * - Otherwise, if the `Connection::commitment` is set, use that.\n     * - Otherwise, set it to the RPC server default: `finalized`.\n     *\n     * This is extremely important to ensure that these two fundamentally\n     * identical subscriptions produce the same identifying hash:\n     *\n     * - A subscription made without specifying a commitment.\n     * - A subscription made where the commitment specified is the same\n     *   as the default applied to the subscription above.\n     *\n     * Example; these two subscriptions must produce the same hash:\n     *\n     * - An `accountSubscribe` subscription for `'PUBKEY'`\n     * - An `accountSubscribe` subscription for `'PUBKEY'` with commitment\n     *   `'finalized'`.\n     *\n     * See the 'making a subscription with defaulted params omitted' test\n     * in `connection-subscriptions.ts` for more.\n     */\n    args: IWSRequestParams,\n  ): ClientSubscriptionId {\n    const clientSubscriptionId = this._nextClientSubscriptionId++;\n    const hash = fastStableStringify(\n      [subscriptionConfig.method, args],\n      true /* isArrayProp */,\n    );\n    const existingSubscription = this._subscriptionsByHash[hash];\n    if (existingSubscription === undefined) {\n      this._subscriptionsByHash[hash] = {\n        ...subscriptionConfig,\n        args,\n        callbacks: new Set([subscriptionConfig.callback]),\n        state: 'pending',\n      };\n    } else {\n      existingSubscription.callbacks.add(subscriptionConfig.callback);\n    }\n    this._subscriptionDisposeFunctionsByClientSubscriptionId[\n      clientSubscriptionId\n    ] = async () => {\n      delete this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n      const subscription = this._subscriptionsByHash[hash];\n      assert(\n        subscription !== undefined,\n        `Could not find a \\`Subscription\\` when tearing down client subscription #${clientSubscriptionId}`,\n      );\n      subscription.callbacks.delete(subscriptionConfig.callback);\n      await this._updateSubscriptions();\n    };\n    this._updateSubscriptions();\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked whenever the specified account changes\n   *\n   * @param publicKey Public key of the account to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @return subscription id\n   */\n  onAccountChange(\n    publicKey: PublicKey,\n    callback: AccountChangeCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64',\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'accountSubscribe',\n        unsubscribeMethod: 'accountUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'account change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnProgramAccountNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      ProgramAccountNotificationResult,\n    );\n    this._handleServerNotification<ProgramAccountChangeCallback>(subscription, [\n      {\n        accountId: result.value.pubkey,\n        accountInfo: result.value.account,\n      },\n      result.context,\n    ]);\n  }\n\n  /**\n   * Register a callback to be invoked whenever accounts owned by the\n   * specified program change\n   *\n   * @param programId Public key of the program to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @param filters The program account filters to pass into the RPC method\n   * @return subscription id\n   */\n  onProgramAccountChange(\n    programId: PublicKey,\n    callback: ProgramAccountChangeCallback,\n    commitment?: Commitment,\n    filters?: GetProgramAccountsFilter[],\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64' /* encoding */,\n      filters ? {filters: filters} : undefined /* extra */,\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'programSubscribe',\n        unsubscribeMethod: 'programUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeProgramAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'program account change',\n    );\n  }\n\n  /**\n   * Registers a callback to be invoked whenever logs are emitted.\n   */\n  onLogs(\n    filter: LogsFilter,\n    callback: LogsCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [typeof filter === 'object' ? {mentions: [filter.toString()]} : filter],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'logsSubscribe',\n        unsubscribeMethod: 'logsUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister a logs callback.\n   *\n   * @param id client subscription id to deregister.\n   */\n  async removeOnLogsListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'logs');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnLogsNotification(notification: Object) {\n    const {result, subscription} = create(notification, LogsNotificationResult);\n    this._handleServerNotification<LogsCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotNotification(notification: Object) {\n    const {result, subscription} = create(notification, SlotNotificationResult);\n    this._handleServerNotification<SlotChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot changes\n   *\n   * @param callback Function to invoke whenever the slot changes\n   * @return subscription id\n   */\n  onSlotChange(callback: SlotChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotSubscribe',\n        unsubscribeMethod: 'slotUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSlotChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotUpdatesNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SlotUpdateNotificationResult,\n    );\n    this._handleServerNotification<SlotUpdateCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot updates. {@link SlotUpdate}'s\n   * may be useful to track live progress of a cluster.\n   *\n   * @param callback Function to invoke whenever the slot updates\n   * @return subscription id\n   */\n  onSlotUpdate(callback: SlotUpdateCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotsUpdatesSubscribe',\n        unsubscribeMethod: 'slotsUpdatesUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot update notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSlotUpdateListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot update',\n    );\n  }\n\n  /**\n   * @internal\n   */\n\n  private async _unsubscribeClientSubscription(\n    clientSubscriptionId: ClientSubscriptionId,\n    subscriptionName: string,\n  ) {\n    const dispose =\n      this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n    if (dispose) {\n      await dispose();\n    } else {\n      console.warn(\n        'Ignored unsubscribe request because an active subscription with id ' +\n          `\\`${clientSubscriptionId}\\` for '${subscriptionName}' events ` +\n          'could not be found.',\n      );\n    }\n  }\n\n  _buildArgs(\n    args: Array<any>,\n    override?: Commitment,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment || encoding || extra) {\n      let options: any = {};\n      if (encoding) {\n        options.encoding = encoding;\n      }\n      if (commitment) {\n        options.commitment = commitment;\n      }\n      if (extra) {\n        options = Object.assign(options, extra);\n      }\n      args.push(options);\n    }\n    return args;\n  }\n\n  /**\n   * @internal\n   */\n  _buildArgsAtLeastConfirmed(\n    args: Array<any>,\n    override?: Finality,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment && !['confirmed', 'finalized'].includes(commitment)) {\n      throw new Error(\n        'Using Connection with default commitment: `' +\n          this._commitment +\n          '`, but method requires at least `confirmed`',\n      );\n    }\n    return this._buildArgs(args, override, encoding, extra);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSignatureNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SignatureNotificationResult,\n    );\n    if (result.value !== 'receivedSignature') {\n      /**\n       * Special case.\n       * After a signature is processed, RPCs automatically dispose of the\n       * subscription on the server side. We need to track which of these\n       * subscriptions have been disposed in such a way, so that we know\n       * whether the client is dealing with a not-yet-processed signature\n       * (in which case we must tear down the server subscription) or an\n       * already-processed signature (in which case the client can simply\n       * clear out the subscription locally without telling the server).\n       *\n       * NOTE: There is a proposal to eliminate this special case, here:\n       * https://github.com/solana-labs/solana/issues/18892\n       */\n      this._subscriptionsAutoDisposedByRpc.add(subscription);\n    }\n    this._handleServerNotification<SignatureSubscriptionCallback>(\n      subscription,\n      result.value === 'receivedSignature'\n        ? [{type: 'received'}, result.context]\n        : [{type: 'status', result: result.value}, result.context],\n    );\n  }\n\n  /**\n   * Register a callback to be invoked upon signature updates\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param commitment Specify the commitment level signature must reach before notification\n   * @return subscription id\n   */\n  onSignature(\n    signature: TransactionSignature,\n    callback: SignatureResultCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [signature],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          if (notification.type === 'status') {\n            callback(notification.result, context);\n            // Signatures subscriptions are auto-removed by the RPC service\n            // so no need to explicitly send an unsubscribe message.\n            try {\n              this.removeSignatureListener(clientSubscriptionId);\n              // eslint-disable-next-line no-empty\n            } catch (_err) {\n              // Already removed.\n            }\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked when a transaction is\n   * received and/or processed.\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param options Enable received notifications and set the commitment\n   *   level that signature must reach before notification\n   * @return subscription id\n   */\n  onSignatureWithOptions(\n    signature: TransactionSignature,\n    callback: SignatureSubscriptionCallback,\n    options?: SignatureSubscriptionOptions,\n  ): ClientSubscriptionId {\n    const {commitment, ...extra} = {\n      ...options,\n      commitment:\n        (options && options.commitment) || this._commitment || 'finalized', // Apply connection/server default.\n    };\n    const args = this._buildArgs(\n      [signature],\n      commitment,\n      undefined /* encoding */,\n      extra,\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          callback(notification, context);\n          // Signatures subscriptions are auto-removed by the RPC service\n          // so no need to explicitly send an unsubscribe message.\n          try {\n            this.removeSignatureListener(clientSubscriptionId);\n            // eslint-disable-next-line no-empty\n          } catch (_err) {\n            // Already removed.\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Deregister a signature notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSignatureListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'signature result',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnRootNotification(notification: Object) {\n    const {result, subscription} = create(notification, RootNotificationResult);\n    this._handleServerNotification<RootChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon root changes\n   *\n   * @param callback Function to invoke whenever the root changes\n   * @return subscription id\n   */\n  onRootChange(callback: RootChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'rootSubscribe',\n        unsubscribeMethod: 'rootUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a root notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeRootChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'root change',\n    );\n  }\n}\n","import {generateKeypair, getPublicKey, Ed25519Keypair} from './utils/ed25519';\nimport {PublicKey} from './publickey';\n\n/**\n * Keypair signer interface\n */\nexport interface Signer {\n  publicKey: PublicKey;\n  secretKey: Uint8Array;\n}\n\n/**\n * An account keypair used for signing transactions.\n */\nexport class Keypair {\n  private _keypair: Ed25519Keypair;\n\n  /**\n   * Create a new keypair instance.\n   * Generate random keypair if no {@link Ed25519Keypair} is provided.\n   *\n   * @param keypair ed25519 keypair\n   */\n  constructor(keypair?: Ed25519Keypair) {\n    this._keypair = keypair ?? generateKeypair();\n  }\n\n  /**\n   * Generate a new random keypair\n   */\n  static generate(): Keypair {\n    return new Keypair(generateKeypair());\n  }\n\n  /**\n   * Create a keypair from a raw secret key byte array.\n   *\n   * This method should only be used to recreate a keypair from a previously\n   * generated secret key. Generating keypairs from a random seed should be done\n   * with the {@link Keypair.fromSeed} method.\n   *\n   * @throws error if the provided secret key is invalid and validation is not skipped.\n   *\n   * @param secretKey secret key byte array\n   * @param options: skip secret key validation\n   */\n  static fromSecretKey(\n    secretKey: Uint8Array,\n    options?: {skipValidation?: boolean},\n  ): Keypair {\n    if (secretKey.byteLength !== 64) {\n      throw new Error('bad secret key size');\n    }\n    const publicKey = secretKey.slice(32, 64);\n    if (!options || !options.skipValidation) {\n      const privateScalar = secretKey.slice(0, 32);\n      const computedPublicKey = getPublicKey(privateScalar);\n      for (let ii = 0; ii < 32; ii++) {\n        if (publicKey[ii] !== computedPublicKey[ii]) {\n          throw new Error('provided secretKey is invalid');\n        }\n      }\n    }\n    return new Keypair({publicKey, secretKey});\n  }\n\n  /**\n   * Generate a keypair from a 32 byte seed.\n   *\n   * @param seed seed byte array\n   */\n  static fromSeed(seed: Uint8Array): Keypair {\n    const publicKey = getPublicKey(seed);\n    const secretKey = new Uint8Array(64);\n    secretKey.set(seed);\n    secretKey.set(publicKey, 32);\n    return new Keypair({publicKey, secretKey});\n  }\n\n  /**\n   * The public key for this keypair\n   */\n  get publicKey(): PublicKey {\n    return new PublicKey(this._keypair.publicKey);\n  }\n\n  /**\n   * The raw secret key for this keypair\n   */\n  get secretKey(): Uint8Array {\n    return new Uint8Array(this._keypair.secretKey);\n  }\n}\n","import {toBufferLE} from 'bigint-buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from '../../layout';\nimport {PublicKey} from '../../publickey';\nimport * as bigintLayout from '../../utils/bigint';\nimport {SystemProgram} from '../system';\nimport {TransactionInstruction} from '../../transaction';\nimport {decodeData, encodeData, IInstructionInputData} from '../../instruction';\n\nexport * from './state';\n\nexport type CreateLookupTableParams = {\n  /** Account used to derive and control the new address lookup table. */\n  authority: PublicKey;\n  /** Account that will fund the new address lookup table. */\n  payer: PublicKey;\n  /** A recent slot must be used in the derivation path for each initialized table. */\n  recentSlot: bigint | number;\n};\n\nexport type FreezeLookupTableParams = {\n  /** Address lookup table account to freeze. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n};\n\nexport type ExtendLookupTableParams = {\n  /** Address lookup table account to extend. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n  /** Account that will fund the table reallocation.\n   * Not required if the reallocation has already been funded. */\n  payer?: PublicKey;\n  /** List of Public Keys to be added to the lookup table. */\n  addresses: Array<PublicKey>;\n};\n\nexport type DeactivateLookupTableParams = {\n  /** Address lookup table account to deactivate. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n};\n\nexport type CloseLookupTableParams = {\n  /** Address lookup table account to close. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n  /** Recipient of closed account lamports. */\n  recipient: PublicKey;\n};\n\n/**\n * An enumeration of valid LookupTableInstructionType's\n */\nexport type LookupTableInstructionType =\n  | 'CreateLookupTable'\n  | 'ExtendLookupTable'\n  | 'CloseLookupTable'\n  | 'FreezeLookupTable'\n  | 'DeactivateLookupTable';\n\ntype LookupTableInstructionInputData = {\n  CreateLookupTable: IInstructionInputData &\n    Readonly<{\n      recentSlot: bigint;\n      bumpSeed: number;\n    }>;\n  FreezeLookupTable: IInstructionInputData;\n  ExtendLookupTable: IInstructionInputData &\n    Readonly<{\n      numberOfAddresses: bigint;\n      addresses: Array<Uint8Array>;\n    }>;\n  DeactivateLookupTable: IInstructionInputData;\n  CloseLookupTable: IInstructionInputData;\n};\n\n/**\n * An enumeration of valid address lookup table InstructionType's\n * @internal\n */\nexport const LOOKUP_TABLE_INSTRUCTION_LAYOUTS = Object.freeze({\n  CreateLookupTable: {\n    index: 0,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['CreateLookupTable']\n    >([\n      BufferLayout.u32('instruction'),\n      bigintLayout.u64('recentSlot'),\n      BufferLayout.u8('bumpSeed'),\n    ]),\n  },\n  FreezeLookupTable: {\n    index: 1,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['FreezeLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n  ExtendLookupTable: {\n    index: 2,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['ExtendLookupTable']\n    >([\n      BufferLayout.u32('instruction'),\n      bigintLayout.u64(),\n      BufferLayout.seq(\n        Layout.publicKey(),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'addresses',\n      ),\n    ]),\n  },\n  DeactivateLookupTable: {\n    index: 3,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['DeactivateLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n  CloseLookupTable: {\n    index: 4,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['CloseLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n});\n\nexport class AddressLookupTableInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): LookupTableInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const index = instructionTypeLayout.decode(instruction.data);\n\n    let type: LookupTableInstructionType | undefined;\n    for (const [layoutType, layout] of Object.entries(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS,\n    )) {\n      if ((layout as any).index == index) {\n        type = layoutType as LookupTableInstructionType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error(\n        'Invalid Instruction. Should be a LookupTable Instruction',\n      );\n    }\n    return type;\n  }\n\n  static decodeCreateLookupTable(\n    instruction: TransactionInstruction,\n  ): CreateLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 4);\n\n    const {recentSlot} = decodeData(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable,\n      instruction.data,\n    );\n\n    return {\n      authority: instruction.keys[1].pubkey,\n      payer: instruction.keys[2].pubkey,\n      recentSlot: Number(recentSlot),\n    };\n  }\n\n  static decodeExtendLookupTable(\n    instruction: TransactionInstruction,\n  ): ExtendLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    if (instruction.keys.length < 2) {\n      throw new Error(\n        `invalid instruction; found ${instruction.keys.length} keys, expected at least 2`,\n      );\n    }\n\n    const {addresses} = decodeData(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable,\n      instruction.data,\n    );\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      payer:\n        instruction.keys.length > 2 ? instruction.keys[2].pubkey : undefined,\n      addresses: addresses.map(buffer => new PublicKey(buffer)),\n    };\n  }\n\n  static decodeCloseLookupTable(\n    instruction: TransactionInstruction,\n  ): CloseLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 3);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      recipient: instruction.keys[2].pubkey,\n    };\n  }\n\n  static decodeFreezeLookupTable(\n    instruction: TransactionInstruction,\n  ): FreezeLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n    };\n  }\n\n  static decodeDeactivateLookupTable(\n    instruction: TransactionInstruction,\n  ): DeactivateLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(AddressLookupTableProgram.programId)) {\n      throw new Error(\n        'invalid instruction; programId is not AddressLookupTable Program',\n      );\n    }\n  }\n  /**\n   * @internal\n   */\n  static checkKeysLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\nexport class AddressLookupTableProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  static programId: PublicKey = new PublicKey(\n    'AddressLookupTab1e1111111111111111111111111',\n  );\n\n  static createLookupTable(params: CreateLookupTableParams) {\n    const [lookupTableAddress, bumpSeed] = PublicKey.findProgramAddressSync(\n      [params.authority.toBuffer(), toBufferLE(BigInt(params.recentSlot), 8)],\n      this.programId,\n    );\n\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable;\n    const data = encodeData(type, {\n      recentSlot: BigInt(params.recentSlot),\n      bumpSeed: bumpSeed,\n    });\n\n    const keys = [\n      {\n        pubkey: lookupTableAddress,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n      {\n        pubkey: params.payer,\n        isSigner: true,\n        isWritable: true,\n      },\n      {\n        pubkey: SystemProgram.programId,\n        isSigner: false,\n        isWritable: false,\n      },\n    ];\n\n    return [\n      new TransactionInstruction({\n        programId: this.programId,\n        keys: keys,\n        data: data,\n      }),\n      lookupTableAddress,\n    ] as [TransactionInstruction, PublicKey];\n  }\n\n  static freezeLookupTable(params: FreezeLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.FreezeLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static extendLookupTable(params: ExtendLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable;\n    const data = encodeData(type, {\n      addresses: params.addresses.map(addr => addr.toBytes()),\n    });\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    if (params.payer) {\n      keys.push(\n        {\n          pubkey: params.payer,\n          isSigner: true,\n          isWritable: true,\n        },\n        {\n          pubkey: SystemProgram.programId,\n          isSigner: false,\n          isWritable: false,\n        },\n      );\n    }\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static deactivateLookupTable(params: DeactivateLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.DeactivateLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static closeLookupTable(params: CloseLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CloseLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n      {\n        pubkey: params.recipient,\n        isSigner: false,\n        isWritable: true,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport {u64} from '../utils/bigint';\n\n/**\n * Compute Budget Instruction class\n */\nexport class ComputeBudgetInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a compute budget instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): ComputeBudgetInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u8('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: ComputeBudgetInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS,\n    )) {\n      if (layout.index == typeIndex) {\n        type = ixType as ComputeBudgetInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error(\n        'Instruction type incorrect; not a ComputeBudgetInstruction',\n      );\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode request units compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestUnits(\n    instruction: TransactionInstruction,\n  ): RequestUnitsParams {\n    this.checkProgramId(instruction.programId);\n    const {units, additionalFee} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits,\n      instruction.data,\n    );\n    return {units, additionalFee};\n  }\n\n  /**\n   * Decode request heap frame compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestHeapFrame(\n    instruction: TransactionInstruction,\n  ): RequestHeapFrameParams {\n    this.checkProgramId(instruction.programId);\n    const {bytes} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame,\n      instruction.data,\n    );\n    return {bytes};\n  }\n\n  /**\n   * Decode set compute unit limit compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitLimit(\n    instruction: TransactionInstruction,\n  ): SetComputeUnitLimitParams {\n    this.checkProgramId(instruction.programId);\n    const {units} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit,\n      instruction.data,\n    );\n    return {units};\n  }\n\n  /**\n   * Decode set compute unit price compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitPrice(\n    instruction: TransactionInstruction,\n  ): SetComputeUnitPriceParams {\n    this.checkProgramId(instruction.programId);\n    const {microLamports} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice,\n      instruction.data,\n    );\n    return {microLamports};\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(ComputeBudgetProgram.programId)) {\n      throw new Error(\n        'invalid instruction; programId is not ComputeBudgetProgram',\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid ComputeBudgetInstructionType's\n */\nexport type ComputeBudgetInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof ComputeBudgetInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'RequestUnits'\n  | 'RequestHeapFrame'\n  | 'SetComputeUnitLimit'\n  | 'SetComputeUnitPrice';\n\ntype ComputeBudgetInstructionInputData = {\n  RequestUnits: IInstructionInputData & Readonly<RequestUnitsParams>;\n  RequestHeapFrame: IInstructionInputData & Readonly<RequestHeapFrameParams>;\n  SetComputeUnitLimit: IInstructionInputData &\n    Readonly<SetComputeUnitLimitParams>;\n  SetComputeUnitPrice: IInstructionInputData &\n    Readonly<SetComputeUnitPriceParams>;\n};\n\n/**\n * Request units instruction params\n */\nexport interface RequestUnitsParams {\n  /** Units to request for transaction-wide compute */\n  units: number;\n  /** Prioritization fee lamports */\n  additionalFee: number;\n}\n\n/**\n * Request heap frame instruction params\n */\nexport type RequestHeapFrameParams = {\n  /** Requested transaction-wide program heap size in bytes. Must be multiple of 1024. Applies to each program, including CPIs. */\n  bytes: number;\n};\n\n/**\n * Set compute unit limit instruction params\n */\nexport interface SetComputeUnitLimitParams {\n  /** Transaction-wide compute unit limit */\n  units: number;\n}\n\n/**\n * Set compute unit price instruction params\n */\nexport interface SetComputeUnitPriceParams {\n  /** Transaction compute unit price used for prioritization fees */\n  microLamports: number | bigint;\n}\n\n/**\n * An enumeration of valid ComputeBudget InstructionType's\n * @internal\n */\nexport const COMPUTE_BUDGET_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in ComputeBudgetInstructionType]: InstructionType<\n    ComputeBudgetInstructionInputData[Instruction]\n  >;\n}>({\n  RequestUnits: {\n    index: 0,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestUnits']\n    >([\n      BufferLayout.u8('instruction'),\n      BufferLayout.u32('units'),\n      BufferLayout.u32('additionalFee'),\n    ]),\n  },\n  RequestHeapFrame: {\n    index: 1,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestHeapFrame']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('bytes')]),\n  },\n  SetComputeUnitLimit: {\n    index: 2,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['SetComputeUnitLimit']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('units')]),\n  },\n  SetComputeUnitPrice: {\n    index: 3,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['SetComputeUnitPrice']\n    >([BufferLayout.u8('instruction'), u64('microLamports')]),\n  },\n});\n\n/**\n * Factory class for transaction instructions to interact with the Compute Budget program\n */\nexport class ComputeBudgetProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Compute Budget program\n   */\n  static programId: PublicKey = new PublicKey(\n    'ComputeBudget111111111111111111111111111111',\n  );\n\n  /**\n   * @deprecated Instead, call {@link setComputeUnitLimit} and/or {@link setComputeUnitPrice}\n   */\n  static requestUnits(params: RequestUnitsParams): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static requestHeapFrame(\n    params: RequestHeapFrameParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static setComputeUnitLimit(\n    params: SetComputeUnitLimitParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static setComputeUnitPrice(\n    params: SetComputeUnitPriceParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice;\n    const data = encodeData(type, {\n      microLamports: BigInt(params.microLamports),\n    });\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {Keypair} from '../keypair';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {sign} from '../utils/ed25519';\n\nconst PRIVATE_KEY_BYTES = 64;\nconst PUBLIC_KEY_BYTES = 32;\nconst SIGNATURE_BYTES = 64;\n\n/**\n * Params for creating an ed25519 instruction using a public key\n */\nexport type CreateEd25519InstructionWithPublicKeyParams = {\n  publicKey: Uint8Array;\n  message: Uint8Array;\n  signature: Uint8Array;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an ed25519 instruction using a private key\n */\nexport type CreateEd25519InstructionWithPrivateKeyParams = {\n  privateKey: Uint8Array;\n  message: Uint8Array;\n  instructionIndex?: number;\n};\n\nconst ED25519_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    padding: number;\n    publicKeyInstructionIndex: number;\n    publicKeyOffset: number;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u8('padding'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u16('signatureInstructionIndex'),\n  BufferLayout.u16('publicKeyOffset'),\n  BufferLayout.u16('publicKeyInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u16('messageInstructionIndex'),\n]);\n\nexport class Ed25519Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the ed25519 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Ed25519SigVerify111111111111111111111111111',\n  );\n\n  /**\n   * Create an ed25519 instruction with a public key and signature. The\n   * public key must be a buffer that is 32 bytes long, and the signature\n   * must be a buffer of 64 bytes.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateEd25519InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, instructionIndex} = params;\n\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public Key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    assert(\n      signature.length === SIGNATURE_BYTES,\n      `Signature must be ${SIGNATURE_BYTES} bytes but received ${signature.length} bytes`,\n    );\n\n    const publicKeyOffset = ED25519_INSTRUCTION_LAYOUT.span;\n    const signatureOffset = publicKeyOffset + publicKey.length;\n    const messageDataOffset = signatureOffset + signature.length;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(messageDataOffset + message.length);\n\n    const index =\n      instructionIndex == null\n        ? 0xffff // An index of `u16::MAX` makes it default to the current instruction.\n        : instructionIndex;\n\n    ED25519_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        padding: 0,\n        signatureOffset,\n        signatureInstructionIndex: index,\n        publicKeyOffset,\n        publicKeyInstructionIndex: index,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: index,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(publicKey, publicKeyOffset);\n    instructionData.fill(signature, signatureOffset);\n    instructionData.fill(message, messageDataOffset);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Ed25519Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an ed25519 instruction with a private key. The private key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateEd25519InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey, message, instructionIndex} = params;\n\n    assert(\n      privateKey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${privateKey.length} bytes`,\n    );\n\n    try {\n      const keypair = Keypair.fromSecretKey(privateKey);\n      const publicKey = keypair.publicKey.toBytes();\n      const signature = sign(message, keypair.secretKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import {hmac} from '@noble/hashes/hmac';\nimport {sha256} from '@noble/hashes/sha256';\nimport * as secp256k1 from '@noble/secp256k1';\n\n// Supply a synchronous hashing algorithm to make this\n// library interoperable with the synchronous APIs in web3.js.\nsecp256k1.utils.hmacSha256Sync = (key: Uint8Array, ...msgs: Uint8Array[]) => {\n  const h = hmac.create(sha256, key);\n  msgs.forEach(msg => h.update(msg));\n  return h.digest();\n};\n\nexport const ecdsaSign = (\n  msgHash: Parameters<typeof secp256k1.signSync>[0],\n  privKey: Parameters<typeof secp256k1.signSync>[1],\n) => secp256k1.signSync(msgHash, privKey, {der: false, recovered: true});\nexport const isValidPrivateKey = secp256k1.utils.isValidPrivateKey;\nexport const publicKeyCreate = secp256k1.getPublicKey;\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport {keccak_256} from '@noble/hashes/sha3';\n\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {publicKeyCreate, ecdsaSign} from '../utils/secp256k1';\nimport {toBuffer} from '../utils/to-buffer';\n\nconst PRIVATE_KEY_BYTES = 32;\nconst ETHEREUM_ADDRESS_BYTES = 20;\nconst PUBLIC_KEY_BYTES = 64;\nconst SIGNATURE_OFFSETS_SERIALIZED_SIZE = 11;\n\n/**\n * Params for creating an secp256k1 instruction using a public key\n */\nexport type CreateSecp256k1InstructionWithPublicKeyParams = {\n  publicKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using an Ethereum address\n */\nexport type CreateSecp256k1InstructionWithEthAddressParams = {\n  ethAddress: Buffer | Uint8Array | Array<number> | string;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using a private key\n */\nexport type CreateSecp256k1InstructionWithPrivateKeyParams = {\n  privateKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  instructionIndex?: number;\n};\n\nconst SECP256K1_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    ethAddress: Uint8Array;\n    ethAddressInstructionIndex: number;\n    ethAddressOffset: number;\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    recoveryId: number;\n    signature: Uint8Array;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u8('signatureInstructionIndex'),\n  BufferLayout.u16('ethAddressOffset'),\n  BufferLayout.u8('ethAddressInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u8('messageInstructionIndex'),\n  BufferLayout.blob(20, 'ethAddress'),\n  BufferLayout.blob(64, 'signature'),\n  BufferLayout.u8('recoveryId'),\n]);\n\nexport class Secp256k1Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the secp256k1 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'KeccakSecp256k11111111111111111111111111111',\n  );\n\n  /**\n   * Construct an Ethereum address from a secp256k1 public key buffer.\n   * @param {Buffer} publicKey a 64 byte secp256k1 public key buffer\n   */\n  static publicKeyToEthAddress(\n    publicKey: Buffer | Uint8Array | Array<number>,\n  ): Buffer {\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    try {\n      return Buffer.from(keccak_256(toBuffer(publicKey))).slice(\n        -ETHEREUM_ADDRESS_BYTES,\n      );\n    } catch (error) {\n      throw new Error(`Error constructing Ethereum address: ${error}`);\n    }\n  }\n\n  /**\n   * Create an secp256k1 instruction with a public key. The public key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateSecp256k1InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, recoveryId, instructionIndex} =\n      params;\n    return Secp256k1Program.createInstructionWithEthAddress({\n      ethAddress: Secp256k1Program.publicKeyToEthAddress(publicKey),\n      message,\n      signature,\n      recoveryId,\n      instructionIndex,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with an Ethereum address. The address\n   * must be a hex string or a buffer that is 20 bytes long.\n   */\n  static createInstructionWithEthAddress(\n    params: CreateSecp256k1InstructionWithEthAddressParams,\n  ): TransactionInstruction {\n    const {\n      ethAddress: rawAddress,\n      message,\n      signature,\n      recoveryId,\n      instructionIndex = 0,\n    } = params;\n\n    let ethAddress;\n    if (typeof rawAddress === 'string') {\n      if (rawAddress.startsWith('0x')) {\n        ethAddress = Buffer.from(rawAddress.substr(2), 'hex');\n      } else {\n        ethAddress = Buffer.from(rawAddress, 'hex');\n      }\n    } else {\n      ethAddress = rawAddress;\n    }\n\n    assert(\n      ethAddress.length === ETHEREUM_ADDRESS_BYTES,\n      `Address must be ${ETHEREUM_ADDRESS_BYTES} bytes but received ${ethAddress.length} bytes`,\n    );\n\n    const dataStart = 1 + SIGNATURE_OFFSETS_SERIALIZED_SIZE;\n    const ethAddressOffset = dataStart;\n    const signatureOffset = dataStart + ethAddress.length;\n    const messageDataOffset = signatureOffset + signature.length + 1;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(\n      SECP256K1_INSTRUCTION_LAYOUT.span + message.length,\n    );\n\n    SECP256K1_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        signatureOffset,\n        signatureInstructionIndex: instructionIndex,\n        ethAddressOffset,\n        ethAddressInstructionIndex: instructionIndex,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: instructionIndex,\n        signature: toBuffer(signature),\n        ethAddress: toBuffer(ethAddress),\n        recoveryId,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(toBuffer(message), SECP256K1_INSTRUCTION_LAYOUT.span);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Secp256k1Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with a private key. The private key\n   * must be a buffer that is 32 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateSecp256k1InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey: pkey, message, instructionIndex} = params;\n\n    assert(\n      pkey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${pkey.length} bytes`,\n    );\n\n    try {\n      const privateKey = toBuffer(pkey);\n      const publicKey = publicKeyCreate(\n        privateKey,\n        false /* isCompressed */,\n      ).slice(1); // throw away leading byte\n      const messageHash = Buffer.from(keccak_256(toBuffer(message)));\n      const [signature, recoveryId] = ecdsaSign(messageHash, privateKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        recoveryId,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {PublicKey} from '../publickey';\nimport {SystemProgram} from './system';\nimport {\n  SYSVAR_CLOCK_PUBKEY,\n  SYSVAR_RENT_PUBKEY,\n  SYSVAR_STAKE_HISTORY_PUBKEY,\n} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\n\n/**\n * Address of the stake config account which configures the rate\n * of stake warmup and cooldown as well as the slashing penalty.\n */\nexport const STAKE_CONFIG_ID = new PublicKey(\n  'StakeConfig11111111111111111111111111111111',\n);\n\n/**\n * Stake account authority info\n */\nexport class Authorized {\n  /** stake authority */\n  staker: PublicKey;\n  /** withdraw authority */\n  withdrawer: PublicKey;\n\n  /**\n   * Create a new Authorized object\n   * @param staker the stake authority\n   * @param withdrawer the withdraw authority\n   */\n  constructor(staker: PublicKey, withdrawer: PublicKey) {\n    this.staker = staker;\n    this.withdrawer = withdrawer;\n  }\n}\n\ntype AuthorizedRaw = Readonly<{\n  staker: Uint8Array;\n  withdrawer: Uint8Array;\n}>;\n\n/**\n * Stake account lockup info\n */\nexport class Lockup {\n  /** Unix timestamp of lockup expiration */\n  unixTimestamp: number;\n  /** Epoch of lockup expiration */\n  epoch: number;\n  /** Lockup custodian authority */\n  custodian: PublicKey;\n\n  /**\n   * Create a new Lockup object\n   */\n  constructor(unixTimestamp: number, epoch: number, custodian: PublicKey) {\n    this.unixTimestamp = unixTimestamp;\n    this.epoch = epoch;\n    this.custodian = custodian;\n  }\n\n  /**\n   * Default, inactive Lockup value\n   */\n  static default: Lockup = new Lockup(0, 0, PublicKey.default);\n}\n\ntype LockupRaw = Readonly<{\n  custodian: Uint8Array;\n  epoch: number;\n  unixTimestamp: number;\n}>;\n\n/**\n * Create stake account transaction params\n */\nexport type CreateStakeAccountParams = {\n  /** Address of the account which will fund creation */\n  fromPubkey: PublicKey;\n  /** Address of the new stake account */\n  stakePubkey: PublicKey;\n  /** Authorities of the new stake account */\n  authorized: Authorized;\n  /** Lockup of the new stake account */\n  lockup?: Lockup;\n  /** Funding amount */\n  lamports: number;\n};\n\n/**\n * Create stake account with seed transaction params\n */\nexport type CreateStakeAccountWithSeedParams = {\n  fromPubkey: PublicKey;\n  stakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  authorized: Authorized;\n  lockup?: Lockup;\n  lamports: number;\n};\n\n/**\n * Initialize stake instruction params\n */\nexport type InitializeStakeParams = {\n  stakePubkey: PublicKey;\n  authorized: Authorized;\n  lockup?: Lockup;\n};\n\n/**\n * Delegate stake instruction params\n */\nexport type DelegateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  votePubkey: PublicKey;\n};\n\n/**\n * Authorize stake instruction params\n */\nexport type AuthorizeStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Authorize stake instruction params using a derived key\n */\nexport type AuthorizeWithSeedStakeParams = {\n  stakePubkey: PublicKey;\n  authorityBase: PublicKey;\n  authoritySeed: string;\n  authorityOwner: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Split stake instruction params\n */\nexport type SplitStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  lamports: number;\n};\n\n/**\n * Split with seed transaction params\n */\nexport type SplitStakeWithSeedParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  lamports: number;\n};\n\n/**\n * Withdraw stake instruction params\n */\nexport type WithdrawStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  toPubkey: PublicKey;\n  lamports: number;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Deactivate stake instruction params\n */\nexport type DeactivateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Merge stake instruction params\n */\nexport type MergeStakeParams = {\n  stakePubkey: PublicKey;\n  sourceStakePubKey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Stake Instruction class\n */\nexport class StakeInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a stake instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): StakeInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: StakeInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(STAKE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as StakeInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a StakeInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a initialize stake instruction and retrieve the instruction params.\n   */\n  static decodeInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized, lockup} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Initialize,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorized: new Authorized(\n        new PublicKey(authorized.staker),\n        new PublicKey(authorized.withdrawer),\n      ),\n      lockup: new Lockup(\n        lockup.unixTimestamp,\n        lockup.epoch,\n        new PublicKey(lockup.custodian),\n      ),\n    };\n  }\n\n  /**\n   * Decode a delegate stake instruction and retrieve the instruction params.\n   */\n  static decodeDelegate(\n    instruction: TransactionInstruction,\n  ): DelegateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 6);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Delegate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      votePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[5].pubkey,\n    };\n  }\n\n  /**\n   * Decode an authorize stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {newAuthorized, stakeAuthorizationType} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    const o: AuthorizeStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode an authorize-with-seed stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeWithSeedStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {\n      newAuthorized,\n      stakeAuthorizationType,\n      authoritySeed,\n      authorityOwner,\n    } = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    const o: AuthorizeWithSeedStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorityBase: instruction.keys[1].pubkey,\n      authoritySeed: authoritySeed,\n      authorityOwner: new PublicKey(authorityOwner),\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a split stake instruction and retrieve the instruction params.\n   */\n  static decodeSplit(instruction: TransactionInstruction): SplitStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Split,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      splitStakePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a merge stake instruction and retrieve the instruction params.\n   */\n  static decodeMerge(instruction: TransactionInstruction): MergeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Merge, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      sourceStakePubKey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n    };\n  }\n\n  /**\n   * Decode a withdraw stake instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    const o: WithdrawStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n    if (instruction.keys.length > 5) {\n      o.custodianPubkey = instruction.keys[5].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a deactivate stake instruction and retrieve the instruction params.\n   */\n  static decodeDeactivate(\n    instruction: TransactionInstruction,\n  ): DeactivateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Deactivate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(StakeProgram.programId)) {\n      throw new Error('invalid instruction; programId is not StakeProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid StakeInstructionType's\n */\nexport type StakeInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof StakeInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'Authorize'\n  | 'AuthorizeWithSeed'\n  | 'Deactivate'\n  | 'Delegate'\n  | 'Initialize'\n  | 'Merge'\n  | 'Split'\n  | 'Withdraw';\n\ntype StakeInstructionInputData = {\n  Authorize: IInstructionInputData &\n    Readonly<{\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  AuthorizeWithSeed: IInstructionInputData &\n    Readonly<{\n      authorityOwner: Uint8Array;\n      authoritySeed: string;\n      instruction: number;\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  Deactivate: IInstructionInputData;\n  Delegate: IInstructionInputData;\n  Initialize: IInstructionInputData &\n    Readonly<{\n      authorized: AuthorizedRaw;\n      lockup: LockupRaw;\n    }>;\n  Merge: IInstructionInputData;\n  Split: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n  Withdraw: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n};\n\n/**\n * An enumeration of valid stake InstructionType's\n * @internal\n */\nexport const STAKE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in StakeInstructionType]: InstructionType<\n    StakeInstructionInputData[Instruction]\n  >;\n}>({\n  Initialize: {\n    index: 0,\n    layout: BufferLayout.struct<StakeInstructionInputData['Initialize']>([\n      BufferLayout.u32('instruction'),\n      Layout.authorized(),\n      Layout.lockup(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<StakeInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('stakeAuthorizationType'),\n    ]),\n  },\n  Delegate: {\n    index: 2,\n    layout: BufferLayout.struct<StakeInstructionInputData['Delegate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Split: {\n    index: 3,\n    layout: BufferLayout.struct<StakeInstructionInputData['Split']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Withdraw: {\n    index: 4,\n    layout: BufferLayout.struct<StakeInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Deactivate: {\n    index: 5,\n    layout: BufferLayout.struct<StakeInstructionInputData['Deactivate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Merge: {\n    index: 7,\n    layout: BufferLayout.struct<StakeInstructionInputData['Merge']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  AuthorizeWithSeed: {\n    index: 8,\n    layout: BufferLayout.struct<StakeInstructionInputData['AuthorizeWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('newAuthorized'),\n        BufferLayout.u32('stakeAuthorizationType'),\n        Layout.rustString('authoritySeed'),\n        Layout.publicKey('authorityOwner'),\n      ],\n    ),\n  },\n});\n\n/**\n * Stake authorization type\n */\nexport type StakeAuthorizationType = {\n  /** The Stake Authorization index (from solana-stake-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid StakeAuthorizationLayout's\n */\nexport const StakeAuthorizationLayout = Object.freeze({\n  Staker: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Stake program\n */\nexport class StakeProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Stake program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Stake11111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Stake account\n   *\n   * This is generated from the solana-stake-program StakeState struct as\n   * `StakeState::size_of()`:\n   * https://docs.rs/solana-stake-program/latest/solana_stake_program/stake_state/enum.StakeState.html\n   */\n  static space: number = 200;\n\n  /**\n   * Generate an Initialize instruction to add to a Stake Create transaction\n   */\n  static initialize(params: InitializeStakeParams): TransactionInstruction {\n    const {stakePubkey, authorized, lockup: maybeLockup} = params;\n    const lockup: Lockup = maybeLockup || Lockup.default;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Initialize;\n    const data = encodeData(type, {\n      authorized: {\n        staker: toBuffer(authorized.staker.toBuffer()),\n        withdrawer: toBuffer(authorized.withdrawer.toBuffer()),\n      },\n      lockup: {\n        unixTimestamp: lockup.unixTimestamp,\n        epoch: lockup.epoch,\n        custodian: toBuffer(lockup.custodian.toBuffer()),\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account at\n   *   an address generated with `from`, a seed, and the Stake programId\n   */\n  static createAccountWithSeed(\n    params: CreateStakeAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccountWithSeed({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        basePubkey: params.basePubkey,\n        seed: params.seed,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account\n   */\n  static createAccount(params: CreateStakeAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that delegates Stake tokens to a validator\n   * Vote PublicKey. This transaction can also be used to redelegate Stake\n   * to a new validator Vote PublicKey.\n   */\n  static delegate(params: DelegateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, votePubkey} = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Delegate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: votePubkey, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: STAKE_CONFIG_ID, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorize(params: AuthorizeStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: true},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorizeWithSeed(params: AuthorizeWithSeedStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorityBase,\n      authoritySeed,\n      authorityOwner,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n      authoritySeed: authoritySeed,\n      authorityOwner: toBuffer(authorityOwner.toBuffer()),\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: authorityBase, isSigner: true, isWritable: false},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  static splitInstruction(params: SplitStakeParams): TransactionInstruction {\n    const {stakePubkey, authorizedPubkey, splitStakePubkey, lamports} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Split;\n    const data = encodeData(type, {lamports});\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: splitStakePubkey, isSigner: false, isWritable: true},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another stake account\n   */\n  static split(params: SplitStakeParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.authorizedPubkey,\n        newAccountPubkey: params.splitStakePubkey,\n        lamports: 0,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(this.splitInstruction(params));\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another account\n   * derived from a base public key and seed\n   */\n  static splitWithSeed(params: SplitStakeWithSeedParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      basePubkey,\n      seed,\n      lamports,\n    } = params;\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.allocate({\n        accountPubkey: splitStakePubkey,\n        basePubkey,\n        seed,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(\n      this.splitInstruction({\n        stakePubkey,\n        authorizedPubkey,\n        splitStakePubkey,\n        lamports,\n      }),\n    );\n  }\n\n  /**\n   * Generate a Transaction that merges Stake accounts.\n   */\n  static merge(params: MergeStakeParams): Transaction {\n    const {stakePubkey, sourceStakePubKey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Merge;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: sourceStakePubKey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that withdraws deactivated Stake tokens.\n   */\n  static withdraw(params: WithdrawStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, toPubkey, lamports, custodianPubkey} =\n      params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false,\n      },\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that deactivates Stake tokens.\n   */\n  static deactivate(params: DeactivateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Deactivate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {PublicKey} from '../publickey';\nimport {SystemProgram} from './system';\nimport {SYSVAR_CLOCK_PUBKEY, SYSVAR_RENT_PUBKEY} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\n\n/**\n * Vote account info\n */\nexport class VoteInit {\n  nodePubkey: PublicKey;\n  authorizedVoter: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number; /** [0, 100] */\n\n  constructor(\n    nodePubkey: PublicKey,\n    authorizedVoter: PublicKey,\n    authorizedWithdrawer: PublicKey,\n    commission: number,\n  ) {\n    this.nodePubkey = nodePubkey;\n    this.authorizedVoter = authorizedVoter;\n    this.authorizedWithdrawer = authorizedWithdrawer;\n    this.commission = commission;\n  }\n}\n\n/**\n * Create vote account transaction params\n */\nexport type CreateVoteAccountParams = {\n  fromPubkey: PublicKey;\n  votePubkey: PublicKey;\n  voteInit: VoteInit;\n  lamports: number;\n};\n\n/**\n * InitializeAccount instruction params\n */\nexport type InitializeAccountParams = {\n  votePubkey: PublicKey;\n  nodePubkey: PublicKey;\n  voteInit: VoteInit;\n};\n\n/**\n * Authorize instruction params\n */\nexport type AuthorizeVoteParams = {\n  votePubkey: PublicKey;\n  /** Current vote or withdraw authority, depending on `voteAuthorizationType` */\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  voteAuthorizationType: VoteAuthorizationType;\n};\n\n/**\n * AuthorizeWithSeed instruction params\n */\nexport type AuthorizeVoteWithSeedParams = {\n  currentAuthorityDerivedKeyBasePubkey: PublicKey;\n  currentAuthorityDerivedKeyOwnerPubkey: PublicKey;\n  currentAuthorityDerivedKeySeed: string;\n  newAuthorizedPubkey: PublicKey;\n  voteAuthorizationType: VoteAuthorizationType;\n  votePubkey: PublicKey;\n};\n\n/**\n * Withdraw from vote account transaction params\n */\nexport type WithdrawFromVoteAccountParams = {\n  votePubkey: PublicKey;\n  authorizedWithdrawerPubkey: PublicKey;\n  lamports: number;\n  toPubkey: PublicKey;\n};\n\n/**\n * Vote Instruction class\n */\nexport class VoteInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a vote instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): VoteInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: VoteInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(VOTE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as VoteInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a VoteInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode an initialize vote instruction and retrieve the instruction params.\n   */\n  static decodeInitializeAccount(\n    instruction: TransactionInstruction,\n  ): InitializeAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 4);\n\n    const {voteInit} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.InitializeAccount,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      nodePubkey: instruction.keys[3].pubkey,\n      voteInit: new VoteInit(\n        new PublicKey(voteInit.nodePubkey),\n        new PublicKey(voteInit.authorizedVoter),\n        new PublicKey(voteInit.authorizedWithdrawer),\n        voteInit.commission,\n      ),\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeVoteParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {newAuthorized, voteAuthorizationType} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType,\n      },\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeVoteWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey,\n        currentAuthorityDerivedKeySeed,\n        newAuthorized,\n        voteAuthorizationType,\n      },\n    } = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    return {\n      currentAuthorityDerivedKeyBasePubkey: instruction.keys[2].pubkey,\n      currentAuthorityDerivedKeyOwnerPubkey: new PublicKey(\n        currentAuthorityDerivedKeyOwnerPubkey,\n      ),\n      currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType,\n      },\n      votePubkey: instruction.keys[0].pubkey,\n    };\n  }\n\n  /**\n   * Decode a withdraw instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawFromVoteAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedWithdrawerPubkey: instruction.keys[2].pubkey,\n      lamports,\n      toPubkey: instruction.keys[1].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(VoteProgram.programId)) {\n      throw new Error('invalid instruction; programId is not VoteProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid VoteInstructionType's\n */\nexport type VoteInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof VoteInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  'Authorize' | 'AuthorizeWithSeed' | 'InitializeAccount' | 'Withdraw';\n\n/** @internal */\nexport type VoteAuthorizeWithSeedArgs = Readonly<{\n  currentAuthorityDerivedKeyOwnerPubkey: Uint8Array;\n  currentAuthorityDerivedKeySeed: string;\n  newAuthorized: Uint8Array;\n  voteAuthorizationType: number;\n}>;\ntype VoteInstructionInputData = {\n  Authorize: IInstructionInputData & {\n    newAuthorized: Uint8Array;\n    voteAuthorizationType: number;\n  };\n  AuthorizeWithSeed: IInstructionInputData & {\n    voteAuthorizeWithSeedArgs: VoteAuthorizeWithSeedArgs;\n  };\n  InitializeAccount: IInstructionInputData & {\n    voteInit: Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>;\n  };\n  Withdraw: IInstructionInputData & {\n    lamports: number;\n  };\n};\n\nconst VOTE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in VoteInstructionType]: InstructionType<\n    VoteInstructionInputData[Instruction]\n  >;\n}>({\n  InitializeAccount: {\n    index: 0,\n    layout: BufferLayout.struct<VoteInstructionInputData['InitializeAccount']>([\n      BufferLayout.u32('instruction'),\n      Layout.voteInit(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<VoteInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('voteAuthorizationType'),\n    ]),\n  },\n  Withdraw: {\n    index: 3,\n    layout: BufferLayout.struct<VoteInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  AuthorizeWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct<VoteInstructionInputData['AuthorizeWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.voteAuthorizeWithSeedArgs(),\n    ]),\n  },\n});\n\n/**\n * VoteAuthorize type\n */\nexport type VoteAuthorizationType = {\n  /** The VoteAuthorize index (from solana-vote-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid VoteAuthorization layouts.\n */\nexport const VoteAuthorizationLayout = Object.freeze({\n  Voter: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Vote program\n */\nexport class VoteProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Vote program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Vote111111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Vote account\n   *\n   * This is generated from the solana-vote-program VoteState struct as\n   * `VoteState::size_of()`:\n   * https://docs.rs/solana-vote-program/1.9.5/solana_vote_program/vote_state/struct.VoteState.html#method.size_of\n   */\n  static space: number = 3731;\n\n  /**\n   * Generate an Initialize instruction.\n   */\n  static initializeAccount(\n    params: InitializeAccountParams,\n  ): TransactionInstruction {\n    const {votePubkey, nodePubkey, voteInit} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.InitializeAccount;\n    const data = encodeData(type, {\n      voteInit: {\n        nodePubkey: toBuffer(voteInit.nodePubkey.toBuffer()),\n        authorizedVoter: toBuffer(voteInit.authorizedVoter.toBuffer()),\n        authorizedWithdrawer: toBuffer(\n          voteInit.authorizedWithdrawer.toBuffer(),\n        ),\n        commission: voteInit.commission,\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: votePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: nodePubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction that creates a new Vote account.\n   */\n  static createAccount(params: CreateVoteAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.votePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    return transaction.add(\n      this.initializeAccount({\n        votePubkey: params.votePubkey,\n        nodePubkey: params.voteInit.nodePubkey,\n        voteInit: params.voteInit,\n      }),\n    );\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account.\n   */\n  static authorize(params: AuthorizeVoteParams): Transaction {\n    const {\n      votePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n    } = params;\n\n    const type = VOTE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      voteAuthorizationType: voteAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account\n   * where the current Voter or Withdrawer authority is a derived key.\n   */\n  static authorizeWithSeed(params: AuthorizeVoteWithSeedParams): Transaction {\n    const {\n      currentAuthorityDerivedKeyBasePubkey,\n      currentAuthorityDerivedKeyOwnerPubkey,\n      currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n      votePubkey,\n    } = params;\n\n    const type = VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey: toBuffer(\n          currentAuthorityDerivedKeyOwnerPubkey.toBuffer(),\n        ),\n        currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n        newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n        voteAuthorizationType: voteAuthorizationType.index,\n      },\n    });\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: currentAuthorityDerivedKeyBasePubkey,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw from a Vote account.\n   */\n  static withdraw(params: WithdrawFromVoteAccountParams): Transaction {\n    const {votePubkey, authorizedWithdrawerPubkey, lamports, toPubkey} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: authorizedWithdrawerPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw safely from a Vote account.\n   *\n   * This function was created as a safeguard for vote accounts running validators, `safeWithdraw`\n   * checks that the withdraw amount will not exceed the specified balance while leaving enough left\n   * to cover rent. If you wish to close the vote account by withdrawing the full amount, call the\n   * `withdraw` method directly.\n   */\n  static safeWithdraw(\n    params: WithdrawFromVoteAccountParams,\n    currentVoteAccountBalance: number,\n    rentExemptMinimum: number,\n  ): Transaction {\n    if (params.lamports > currentVoteAccountBalance - rentExemptMinimum) {\n      throw new Error(\n        'Withdraw will leave vote account with insuffcient funds.',\n      );\n    }\n    return VoteProgram.withdraw(params);\n  }\n}\n","import {Buffer} from 'buffer';\nimport {\n  assert as assertType,\n  optional,\n  string,\n  type as pick,\n} from 'superstruct';\n\nimport * as Layout from './layout';\nimport * as shortvec from './utils/shortvec-encoding';\nimport {PublicKey, PUBLIC_KEY_LENGTH} from './publickey';\n\nexport const VALIDATOR_INFO_KEY = new PublicKey(\n  'Va1idator1nfo111111111111111111111111111111',\n);\n\n/**\n * @internal\n */\ntype ConfigKey = {\n  publicKey: PublicKey;\n  isSigner: boolean;\n};\n\n/**\n * Info used to identity validators.\n */\nexport type Info = {\n  /** validator name */\n  name: string;\n  /** optional, validator website */\n  website?: string;\n  /** optional, extra information the validator chose to share */\n  details?: string;\n  /** optional, used to identify validators on keybase.io */\n  keybaseUsername?: string;\n};\n\nconst InfoString = pick({\n  name: string(),\n  website: optional(string()),\n  details: optional(string()),\n  keybaseUsername: optional(string()),\n});\n\n/**\n * ValidatorInfo class\n */\nexport class ValidatorInfo {\n  /**\n   * validator public key\n   */\n  key: PublicKey;\n  /**\n   * validator information\n   */\n  info: Info;\n\n  /**\n   * Construct a valid ValidatorInfo\n   *\n   * @param key validator public key\n   * @param info validator information\n   */\n  constructor(key: PublicKey, info: Info) {\n    this.key = key;\n    this.info = info;\n  }\n\n  /**\n   * Deserialize ValidatorInfo from the config account data. Exactly two config\n   * keys are required in the data.\n   *\n   * @param buffer config account data\n   * @return null if info was not found\n   */\n  static fromConfigData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): ValidatorInfo | null {\n    let byteArray = [...buffer];\n    const configKeyCount = shortvec.decodeLength(byteArray);\n    if (configKeyCount !== 2) return null;\n\n    const configKeys: Array<ConfigKey> = [];\n    for (let i = 0; i < 2; i++) {\n      const publicKey = new PublicKey(byteArray.slice(0, PUBLIC_KEY_LENGTH));\n      byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n      const isSigner = byteArray.slice(0, 1)[0] === 1;\n      byteArray = byteArray.slice(1);\n      configKeys.push({publicKey, isSigner});\n    }\n\n    if (configKeys[0].publicKey.equals(VALIDATOR_INFO_KEY)) {\n      if (configKeys[1].isSigner) {\n        const rawInfo: any = Layout.rustString().decode(Buffer.from(byteArray));\n        const info = JSON.parse(rawInfo as string);\n        assertType(info, InfoString);\n        return new ValidatorInfo(configKeys[1].publicKey, info);\n      }\n    }\n\n    return null;\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport type {Buffer} from 'buffer';\n\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {toBuffer} from './utils/to-buffer';\n\nexport const VOTE_PROGRAM_ID = new PublicKey(\n  'Vote111111111111111111111111111111111111111',\n);\n\nexport type Lockout = {\n  slot: number;\n  confirmationCount: number;\n};\n\n/**\n * History of how many credits earned by the end of each epoch\n */\nexport type EpochCredits = Readonly<{\n  epoch: number;\n  credits: number;\n  prevCredits: number;\n}>;\n\nexport type AuthorizedVoter = Readonly<{\n  epoch: number;\n  authorizedVoter: PublicKey;\n}>;\n\ntype AuthorizedVoterRaw = Readonly<{\n  authorizedVoter: Uint8Array;\n  epoch: number;\n}>;\n\ntype PriorVoters = Readonly<{\n  buf: PriorVoterRaw[];\n  idx: number;\n  isEmpty: number;\n}>;\n\nexport type PriorVoter = Readonly<{\n  authorizedPubkey: PublicKey;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\ntype PriorVoterRaw = Readonly<{\n  authorizedPubkey: Uint8Array;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\nexport type BlockTimestamp = Readonly<{\n  slot: number;\n  timestamp: number;\n}>;\n\ntype VoteAccountData = Readonly<{\n  authorizedVoters: AuthorizedVoterRaw[];\n  authorizedWithdrawer: Uint8Array;\n  commission: number;\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n  nodePubkey: Uint8Array;\n  priorVoters: PriorVoters;\n  rootSlot: number;\n  rootSlotValid: number;\n  votes: Lockout[];\n}>;\n\n/**\n * See https://github.com/solana-labs/solana/blob/8a12ed029cfa38d4a45400916c2463fb82bbec8c/programs/vote_api/src/vote_state.rs#L68-L88\n *\n * @internal\n */\nconst VoteAccountLayout = BufferLayout.struct<VoteAccountData>([\n  Layout.publicKey('nodePubkey'),\n  Layout.publicKey('authorizedWithdrawer'),\n  BufferLayout.u8('commission'),\n  BufferLayout.nu64(), // votes.length\n  BufferLayout.seq<Lockout>(\n    BufferLayout.struct([\n      BufferLayout.nu64('slot'),\n      BufferLayout.u32('confirmationCount'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'votes',\n  ),\n  BufferLayout.u8('rootSlotValid'),\n  BufferLayout.nu64('rootSlot'),\n  BufferLayout.nu64(), // authorizedVoters.length\n  BufferLayout.seq<AuthorizedVoterRaw>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      Layout.publicKey('authorizedVoter'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'authorizedVoters',\n  ),\n  BufferLayout.struct<PriorVoters>(\n    [\n      BufferLayout.seq(\n        BufferLayout.struct([\n          Layout.publicKey('authorizedPubkey'),\n          BufferLayout.nu64('epochOfLastAuthorizedSwitch'),\n          BufferLayout.nu64('targetEpoch'),\n        ]),\n        32,\n        'buf',\n      ),\n      BufferLayout.nu64('idx'),\n      BufferLayout.u8('isEmpty'),\n    ],\n    'priorVoters',\n  ),\n  BufferLayout.nu64(), // epochCredits.length\n  BufferLayout.seq<EpochCredits>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      BufferLayout.nu64('credits'),\n      BufferLayout.nu64('prevCredits'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'epochCredits',\n  ),\n  BufferLayout.struct<BlockTimestamp>(\n    [BufferLayout.nu64('slot'), BufferLayout.nu64('timestamp')],\n    'lastTimestamp',\n  ),\n]);\n\ntype VoteAccountArgs = {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n};\n\n/**\n * VoteAccount class\n */\nexport class VoteAccount {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n\n  /**\n   * @internal\n   */\n  constructor(args: VoteAccountArgs) {\n    this.nodePubkey = args.nodePubkey;\n    this.authorizedWithdrawer = args.authorizedWithdrawer;\n    this.commission = args.commission;\n    this.rootSlot = args.rootSlot;\n    this.votes = args.votes;\n    this.authorizedVoters = args.authorizedVoters;\n    this.priorVoters = args.priorVoters;\n    this.epochCredits = args.epochCredits;\n    this.lastTimestamp = args.lastTimestamp;\n  }\n\n  /**\n   * Deserialize VoteAccount from the account data.\n   *\n   * @param buffer account data\n   * @return VoteAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): VoteAccount {\n    const versionOffset = 4;\n    const va = VoteAccountLayout.decode(toBuffer(buffer), versionOffset);\n\n    let rootSlot: number | null = va.rootSlot;\n    if (!va.rootSlotValid) {\n      rootSlot = null;\n    }\n\n    return new VoteAccount({\n      nodePubkey: new PublicKey(va.nodePubkey),\n      authorizedWithdrawer: new PublicKey(va.authorizedWithdrawer),\n      commission: va.commission,\n      votes: va.votes,\n      rootSlot,\n      authorizedVoters: va.authorizedVoters.map(parseAuthorizedVoter),\n      priorVoters: getPriorVoters(va.priorVoters),\n      epochCredits: va.epochCredits,\n      lastTimestamp: va.lastTimestamp,\n    });\n  }\n}\n\nfunction parseAuthorizedVoter({\n  authorizedVoter,\n  epoch,\n}: AuthorizedVoterRaw): AuthorizedVoter {\n  return {\n    epoch,\n    authorizedVoter: new PublicKey(authorizedVoter),\n  };\n}\n\nfunction parsePriorVoters({\n  authorizedPubkey,\n  epochOfLastAuthorizedSwitch,\n  targetEpoch,\n}: PriorVoterRaw): PriorVoter {\n  return {\n    authorizedPubkey: new PublicKey(authorizedPubkey),\n    epochOfLastAuthorizedSwitch,\n    targetEpoch,\n  };\n}\n\nfunction getPriorVoters({buf, idx, isEmpty}: PriorVoters): PriorVoter[] {\n  if (isEmpty) {\n    return [];\n  }\n\n  return [\n    ...buf.slice(idx + 1).map(parsePriorVoters),\n    ...buf.slice(0, idx).map(parsePriorVoters),\n  ];\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sha384 = exports.sha512_256 = exports.sha512 = exports.SHA512 = void 0;\nconst _sha2_js_1 = require(\"./_sha2.js\");\nconst _u64_js_1 = require(\"./_u64.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = _u64_js_1.default.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n)));\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = new Uint32Array(80);\nconst SHA512_W_L = new Uint32Array(80);\nclass SHA512 extends _sha2_js_1.SHA2 {\n    constructor() {\n        super(128, 64, 16, false);\n        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n        // Also looks cleaner and easier to verify with spec.\n        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x6a09e667 | 0;\n        this.Al = 0xf3bcc908 | 0;\n        this.Bh = 0xbb67ae85 | 0;\n        this.Bl = 0x84caa73b | 0;\n        this.Ch = 0x3c6ef372 | 0;\n        this.Cl = 0xfe94f82b | 0;\n        this.Dh = 0xa54ff53a | 0;\n        this.Dl = 0x5f1d36f1 | 0;\n        this.Eh = 0x510e527f | 0;\n        this.El = 0xade682d1 | 0;\n        this.Fh = 0x9b05688c | 0;\n        this.Fl = 0x2b3e6c1f | 0;\n        this.Gh = 0x1f83d9ab | 0;\n        this.Gl = 0xfb41bd6b | 0;\n        this.Hh = 0x5be0cd19 | 0;\n        this.Hl = 0x137e2179 | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = _u64_js_1.default.rotrSH(W15h, W15l, 1) ^ _u64_js_1.default.rotrSH(W15h, W15l, 8) ^ _u64_js_1.default.shrSH(W15h, W15l, 7);\n            const s0l = _u64_js_1.default.rotrSL(W15h, W15l, 1) ^ _u64_js_1.default.rotrSL(W15h, W15l, 8) ^ _u64_js_1.default.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = _u64_js_1.default.rotrSH(W2h, W2l, 19) ^ _u64_js_1.default.rotrBH(W2h, W2l, 61) ^ _u64_js_1.default.shrSH(W2h, W2l, 6);\n            const s1l = _u64_js_1.default.rotrSL(W2h, W2l, 19) ^ _u64_js_1.default.rotrBL(W2h, W2l, 61) ^ _u64_js_1.default.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = _u64_js_1.default.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = _u64_js_1.default.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = _u64_js_1.default.rotrSH(Eh, El, 14) ^ _u64_js_1.default.rotrSH(Eh, El, 18) ^ _u64_js_1.default.rotrBH(Eh, El, 41);\n            const sigma1l = _u64_js_1.default.rotrSL(Eh, El, 14) ^ _u64_js_1.default.rotrSL(Eh, El, 18) ^ _u64_js_1.default.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = _u64_js_1.default.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = _u64_js_1.default.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = _u64_js_1.default.rotrSH(Ah, Al, 28) ^ _u64_js_1.default.rotrBH(Ah, Al, 34) ^ _u64_js_1.default.rotrBH(Ah, Al, 39);\n            const sigma0l = _u64_js_1.default.rotrSL(Ah, Al, 28) ^ _u64_js_1.default.rotrBL(Ah, Al, 34) ^ _u64_js_1.default.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = _u64_js_1.default.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = _u64_js_1.default.add3L(T1l, sigma0l, MAJl);\n            Ah = _u64_js_1.default.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = _u64_js_1.default.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = _u64_js_1.default.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = _u64_js_1.default.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = _u64_js_1.default.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = _u64_js_1.default.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = _u64_js_1.default.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = _u64_js_1.default.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = _u64_js_1.default.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        SHA512_W_H.fill(0);\n        SHA512_W_L.fill(0);\n    }\n    destroy() {\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nexports.SHA512 = SHA512;\nclass SHA512_256 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x22312194 | 0;\n        this.Al = 0xfc2bf72c | 0;\n        this.Bh = 0x9f555fa3 | 0;\n        this.Bl = 0xc84c64c2 | 0;\n        this.Ch = 0x2393b86b | 0;\n        this.Cl = 0x6f53b151 | 0;\n        this.Dh = 0x96387719 | 0;\n        this.Dl = 0x5940eabd | 0;\n        this.Eh = 0x96283ee2 | 0;\n        this.El = 0xa88effe3 | 0;\n        this.Fh = 0xbe5e1e25 | 0;\n        this.Fl = 0x53863992 | 0;\n        this.Gh = 0x2b0199fc | 0;\n        this.Gl = 0x2c85b8aa | 0;\n        this.Hh = 0x0eb72ddc | 0;\n        this.Hl = 0x81c52ca2 | 0;\n        this.outputLen = 32;\n    }\n}\nclass SHA384 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0xcbbb9d5d | 0;\n        this.Al = 0xc1059ed8 | 0;\n        this.Bh = 0x629a292a | 0;\n        this.Bl = 0x367cd507 | 0;\n        this.Ch = 0x9159015a | 0;\n        this.Cl = 0x3070dd17 | 0;\n        this.Dh = 0x152fecd8 | 0;\n        this.Dl = 0xf70e5939 | 0;\n        this.Eh = 0x67332667 | 0;\n        this.El = 0xffc00b31 | 0;\n        this.Fh = 0x8eb44a87 | 0;\n        this.Fl = 0x68581511 | 0;\n        this.Gh = 0xdb0c2e0d | 0;\n        this.Gl = 0x64f98fa7 | 0;\n        this.Hh = 0x47b5481d | 0;\n        this.Hl = 0xbefa4fa4 | 0;\n        this.outputLen = 48;\n    }\n}\nexports.sha512 = (0, utils_js_1.wrapConstructor)(() => new SHA512());\nexports.sha512_256 = (0, utils_js_1.wrapConstructor)(() => new SHA512_256());\nexports.sha384 = (0, utils_js_1.wrapConstructor)(() => new SHA384());\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.crypto = void 0;\nexports.crypto = {\n    node: undefined,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = require('safe-buffer').Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sha256 = void 0;\nconst _sha2_js_1 = require(\"./_sha2.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Choice: a ? b : c\nconst Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = new Uint32Array(64);\nclass SHA256 extends _sha2_js_1.SHA2 {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = IV[0] | 0;\n        this.B = IV[1] | 0;\n        this.C = IV[2] | 0;\n        this.D = IV[3] | 0;\n        this.E = IV[4] | 0;\n        this.F = IV[5] | 0;\n        this.G = IV[6] | 0;\n        this.H = IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = (0, utils_js_1.rotr)(W15, 7) ^ (0, utils_js_1.rotr)(W15, 18) ^ (W15 >>> 3);\n            const s1 = (0, utils_js_1.rotr)(W2, 17) ^ (0, utils_js_1.rotr)(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = (0, utils_js_1.rotr)(E, 6) ^ (0, utils_js_1.rotr)(E, 11) ^ (0, utils_js_1.rotr)(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = (0, utils_js_1.rotr)(A, 2) ^ (0, utils_js_1.rotr)(A, 13) ^ (0, utils_js_1.rotr)(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexports.sha256 = (0, utils_js_1.wrapConstructor)(() => new SHA256());\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializeUnchecked = exports.deserialize = exports.serialize = exports.BinaryReader = exports.BinaryWriter = exports.BorshError = exports.baseDecode = exports.baseEncode = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst bs58_1 = __importDefault(require(\"bs58\"));\n// TODO: Make sure this polyfill not included when not required\nconst encoding = __importStar(require(\"text-encoding-utf-8\"));\nconst ResolvedTextDecoder = typeof TextDecoder !== \"function\" ? encoding.TextDecoder : TextDecoder;\nconst textDecoder = new ResolvedTextDecoder(\"utf-8\", { fatal: true });\nfunction baseEncode(value) {\n    if (typeof value === \"string\") {\n        value = Buffer.from(value, \"utf8\");\n    }\n    return bs58_1.default.encode(Buffer.from(value));\n}\nexports.baseEncode = baseEncode;\nfunction baseDecode(value) {\n    return Buffer.from(bs58_1.default.decode(value));\n}\nexports.baseDecode = baseDecode;\nconst INITIAL_LENGTH = 1024;\nclass BorshError extends Error {\n    constructor(message) {\n        super(message);\n        this.fieldPath = [];\n        this.originalMessage = message;\n    }\n    addToFieldPath(fieldName) {\n        this.fieldPath.splice(0, 0, fieldName);\n        // NOTE: Modifying message directly as jest doesn't use .toString()\n        this.message = this.originalMessage + \": \" + this.fieldPath.join(\".\");\n    }\n}\nexports.BorshError = BorshError;\n/// Binary encoder.\nclass BinaryWriter {\n    constructor() {\n        this.buf = Buffer.alloc(INITIAL_LENGTH);\n        this.length = 0;\n    }\n    maybeResize() {\n        if (this.buf.length < 16 + this.length) {\n            this.buf = Buffer.concat([this.buf, Buffer.alloc(INITIAL_LENGTH)]);\n        }\n    }\n    writeU8(value) {\n        this.maybeResize();\n        this.buf.writeUInt8(value, this.length);\n        this.length += 1;\n    }\n    writeU16(value) {\n        this.maybeResize();\n        this.buf.writeUInt16LE(value, this.length);\n        this.length += 2;\n    }\n    writeU32(value) {\n        this.maybeResize();\n        this.buf.writeUInt32LE(value, this.length);\n        this.length += 4;\n    }\n    writeU64(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 8)));\n    }\n    writeU128(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 16)));\n    }\n    writeU256(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 32)));\n    }\n    writeU512(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 64)));\n    }\n    writeBuffer(buffer) {\n        // Buffer.from is needed as this.buf.subarray can return plain Uint8Array in browser\n        this.buf = Buffer.concat([\n            Buffer.from(this.buf.subarray(0, this.length)),\n            buffer,\n            Buffer.alloc(INITIAL_LENGTH),\n        ]);\n        this.length += buffer.length;\n    }\n    writeString(str) {\n        this.maybeResize();\n        const b = Buffer.from(str, \"utf8\");\n        this.writeU32(b.length);\n        this.writeBuffer(b);\n    }\n    writeFixedArray(array) {\n        this.writeBuffer(Buffer.from(array));\n    }\n    writeArray(array, fn) {\n        this.maybeResize();\n        this.writeU32(array.length);\n        for (const elem of array) {\n            this.maybeResize();\n            fn(elem);\n        }\n    }\n    toArray() {\n        return this.buf.subarray(0, this.length);\n    }\n}\nexports.BinaryWriter = BinaryWriter;\nfunction handlingRangeError(target, propertyKey, propertyDescriptor) {\n    const originalMethod = propertyDescriptor.value;\n    propertyDescriptor.value = function (...args) {\n        try {\n            return originalMethod.apply(this, args);\n        }\n        catch (e) {\n            if (e instanceof RangeError) {\n                const code = e.code;\n                if ([\"ERR_BUFFER_OUT_OF_BOUNDS\", \"ERR_OUT_OF_RANGE\"].indexOf(code) >= 0) {\n                    throw new BorshError(\"Reached the end of buffer when deserializing\");\n                }\n            }\n            throw e;\n        }\n    };\n}\nclass BinaryReader {\n    constructor(buf) {\n        this.buf = buf;\n        this.offset = 0;\n    }\n    readU8() {\n        const value = this.buf.readUInt8(this.offset);\n        this.offset += 1;\n        return value;\n    }\n    readU16() {\n        const value = this.buf.readUInt16LE(this.offset);\n        this.offset += 2;\n        return value;\n    }\n    readU32() {\n        const value = this.buf.readUInt32LE(this.offset);\n        this.offset += 4;\n        return value;\n    }\n    readU64() {\n        const buf = this.readBuffer(8);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU128() {\n        const buf = this.readBuffer(16);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU256() {\n        const buf = this.readBuffer(32);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU512() {\n        const buf = this.readBuffer(64);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readBuffer(len) {\n        if (this.offset + len > this.buf.length) {\n            throw new BorshError(`Expected buffer length ${len} isn't within bounds`);\n        }\n        const result = this.buf.slice(this.offset, this.offset + len);\n        this.offset += len;\n        return result;\n    }\n    readString() {\n        const len = this.readU32();\n        const buf = this.readBuffer(len);\n        try {\n            // NOTE: Using TextDecoder to fail on invalid UTF-8\n            return textDecoder.decode(buf);\n        }\n        catch (e) {\n            throw new BorshError(`Error decoding UTF-8 string: ${e}`);\n        }\n    }\n    readFixedArray(len) {\n        return new Uint8Array(this.readBuffer(len));\n    }\n    readArray(fn) {\n        const len = this.readU32();\n        const result = Array();\n        for (let i = 0; i < len; ++i) {\n            result.push(fn());\n        }\n        return result;\n    }\n}\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU8\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU16\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU32\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU64\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU128\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU256\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU512\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readString\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readFixedArray\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readArray\", null);\nexports.BinaryReader = BinaryReader;\nfunction capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\nfunction serializeField(schema, fieldName, value, fieldType, writer) {\n    try {\n        // TODO: Handle missing values properly (make sure they never result in just skipped write)\n        if (typeof fieldType === \"string\") {\n            writer[`write${capitalizeFirstLetter(fieldType)}`](value);\n        }\n        else if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                if (value.length !== fieldType[0]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[0]}, but got ${value.length} bytes`);\n                }\n                writer.writeFixedArray(value);\n            }\n            else if (fieldType.length === 2 && typeof fieldType[1] === \"number\") {\n                if (value.length !== fieldType[1]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[1]}, but got ${value.length} bytes`);\n                }\n                for (let i = 0; i < fieldType[1]; i++) {\n                    serializeField(schema, null, value[i], fieldType[0], writer);\n                }\n            }\n            else {\n                writer.writeArray(value, (item) => {\n                    serializeField(schema, fieldName, item, fieldType[0], writer);\n                });\n            }\n        }\n        else if (fieldType.kind !== undefined) {\n            switch (fieldType.kind) {\n                case \"option\": {\n                    if (value === null || value === undefined) {\n                        writer.writeU8(0);\n                    }\n                    else {\n                        writer.writeU8(1);\n                        serializeField(schema, fieldName, value, fieldType.type, writer);\n                    }\n                    break;\n                }\n                case \"map\": {\n                    writer.writeU32(value.size);\n                    value.forEach((val, key) => {\n                        serializeField(schema, fieldName, key, fieldType.key, writer);\n                        serializeField(schema, fieldName, val, fieldType.value, writer);\n                    });\n                    break;\n                }\n                default:\n                    throw new BorshError(`FieldType ${fieldType} unrecognized`);\n            }\n        }\n        else {\n            serializeStruct(schema, value, writer);\n        }\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction serializeStruct(schema, obj, writer) {\n    if (typeof obj.borshSerialize === \"function\") {\n        obj.borshSerialize(writer);\n        return;\n    }\n    const structSchema = schema.get(obj.constructor);\n    if (!structSchema) {\n        throw new BorshError(`Class ${obj.constructor.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        structSchema.fields.map(([fieldName, fieldType]) => {\n            serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n        });\n    }\n    else if (structSchema.kind === \"enum\") {\n        const name = obj[structSchema.field];\n        for (let idx = 0; idx < structSchema.values.length; ++idx) {\n            const [fieldName, fieldType] = structSchema.values[idx];\n            if (fieldName === name) {\n                writer.writeU8(idx);\n                serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n                break;\n            }\n        }\n    }\n    else {\n        throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${obj.constructor.name}`);\n    }\n}\n/// Serialize given object using schema of the form:\n/// { class_name -> [ [field_name, field_type], .. ], .. }\nfunction serialize(schema, obj, Writer = BinaryWriter) {\n    const writer = new Writer();\n    serializeStruct(schema, obj, writer);\n    return writer.toArray();\n}\nexports.serialize = serialize;\nfunction deserializeField(schema, fieldName, fieldType, reader) {\n    try {\n        if (typeof fieldType === \"string\") {\n            return reader[`read${capitalizeFirstLetter(fieldType)}`]();\n        }\n        if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                return reader.readFixedArray(fieldType[0]);\n            }\n            else if (typeof fieldType[1] === \"number\") {\n                const arr = [];\n                for (let i = 0; i < fieldType[1]; i++) {\n                    arr.push(deserializeField(schema, null, fieldType[0], reader));\n                }\n                return arr;\n            }\n            else {\n                return reader.readArray(() => deserializeField(schema, fieldName, fieldType[0], reader));\n            }\n        }\n        if (fieldType.kind === \"option\") {\n            const option = reader.readU8();\n            if (option) {\n                return deserializeField(schema, fieldName, fieldType.type, reader);\n            }\n            return undefined;\n        }\n        if (fieldType.kind === \"map\") {\n            let map = new Map();\n            const length = reader.readU32();\n            for (let i = 0; i < length; i++) {\n                const key = deserializeField(schema, fieldName, fieldType.key, reader);\n                const val = deserializeField(schema, fieldName, fieldType.value, reader);\n                map.set(key, val);\n            }\n            return map;\n        }\n        return deserializeStruct(schema, fieldType, reader);\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction deserializeStruct(schema, classType, reader) {\n    if (typeof classType.borshDeserialize === \"function\") {\n        return classType.borshDeserialize(reader);\n    }\n    const structSchema = schema.get(classType);\n    if (!structSchema) {\n        throw new BorshError(`Class ${classType.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        const result = {};\n        for (const [fieldName, fieldType] of schema.get(classType).fields) {\n            result[fieldName] = deserializeField(schema, fieldName, fieldType, reader);\n        }\n        return new classType(result);\n    }\n    if (structSchema.kind === \"enum\") {\n        const idx = reader.readU8();\n        if (idx >= structSchema.values.length) {\n            throw new BorshError(`Enum index: ${idx} is out of range`);\n        }\n        const [fieldName, fieldType] = structSchema.values[idx];\n        const fieldValue = deserializeField(schema, fieldName, fieldType, reader);\n        return new classType({ [fieldName]: fieldValue });\n    }\n    throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${classType.constructor.name}`);\n}\n/// Deserializes object from bytes using schema.\nfunction deserialize(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    const result = deserializeStruct(schema, classType, reader);\n    if (reader.offset < buffer.length) {\n        throw new BorshError(`Unexpected ${buffer.length - reader.offset} bytes after deserialized data`);\n    }\n    return result;\n}\nexports.deserialize = deserialize;\n/// Deserializes object from bytes using schema, without checking the length read\nfunction deserializeUnchecked(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    return deserializeStruct(schema, classType, reader);\n}\nexports.deserializeUnchecked = deserializeUnchecked;\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = require('safe-buffer').Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","'use strict';\n\n// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\n//\n// Utilities\n//\n\n/**\n * @param {number} a The number to test.\n * @param {number} min The minimum value in the range, inclusive.\n * @param {number} max The maximum value in the range, inclusive.\n * @return {boolean} True if a >= min and a <= max.\n */\nfunction inRange(a, min, max) {\n  return min <= a && a <= max;\n}\n\n/**\n * @param {*} o\n * @return {Object}\n */\nfunction ToDictionary(o) {\n  if (o === undefined) return {};\n  if (o === Object(o)) return o;\n  throw TypeError('Could not convert argument to dictionary');\n}\n\n/**\n * @param {string} string Input string of UTF-16 code units.\n * @return {!Array.<number>} Code points.\n */\nfunction stringToCodePoints(string) {\n  // https://heycam.github.io/webidl/#dfn-obtain-unicode\n\n  // 1. Let S be the DOMString value.\n  var s = String(string);\n\n  // 2. Let n be the length of S.\n  var n = s.length;\n\n  // 3. Initialize i to 0.\n  var i = 0;\n\n  // 4. Initialize U to be an empty sequence of Unicode characters.\n  var u = [];\n\n  // 5. While i < n:\n  while (i < n) {\n\n    // 1. Let c be the code unit in S at index i.\n    var c = s.charCodeAt(i);\n\n    // 2. Depending on the value of c:\n\n    // c < 0xD800 or c > 0xDFFF\n    if (c < 0xD800 || c > 0xDFFF) {\n      // Append to U the Unicode character with code point c.\n      u.push(c);\n    }\n\n    // 0xDC00 ≤ c ≤ 0xDFFF\n    else if (0xDC00 <= c && c <= 0xDFFF) {\n      // Append to U a U+FFFD REPLACEMENT CHARACTER.\n      u.push(0xFFFD);\n    }\n\n    // 0xD800 ≤ c ≤ 0xDBFF\n    else if (0xD800 <= c && c <= 0xDBFF) {\n      // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n      // CHARACTER.\n      if (i === n - 1) {\n        u.push(0xFFFD);\n      }\n      // 2. Otherwise, i < n−1:\n      else {\n        // 1. Let d be the code unit in S at index i+1.\n        var d = string.charCodeAt(i + 1);\n\n        // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n        if (0xDC00 <= d && d <= 0xDFFF) {\n          // 1. Let a be c & 0x3FF.\n          var a = c & 0x3FF;\n\n          // 2. Let b be d & 0x3FF.\n          var b = d & 0x3FF;\n\n          // 3. Append to U the Unicode character with code point\n          // 2^16+2^10*a+b.\n          u.push(0x10000 + (a << 10) + b);\n\n          // 4. Set i to i+1.\n          i += 1;\n        }\n\n        // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n        // U+FFFD REPLACEMENT CHARACTER.\n        else  {\n          u.push(0xFFFD);\n        }\n      }\n    }\n\n    // 3. Set i to i+1.\n    i += 1;\n  }\n\n  // 6. Return U.\n  return u;\n}\n\n/**\n * @param {!Array.<number>} code_points Array of code points.\n * @return {string} string String of UTF-16 code units.\n */\nfunction codePointsToString(code_points) {\n  var s = '';\n  for (var i = 0; i < code_points.length; ++i) {\n    var cp = code_points[i];\n    if (cp <= 0xFFFF) {\n      s += String.fromCharCode(cp);\n    } else {\n      cp -= 0x10000;\n      s += String.fromCharCode((cp >> 10) + 0xD800,\n                               (cp & 0x3FF) + 0xDC00);\n    }\n  }\n  return s;\n}\n\n\n//\n// Implementation of Encoding specification\n// https://encoding.spec.whatwg.org/\n//\n\n//\n// 3. Terminology\n//\n\n/**\n * End-of-stream is a special token that signifies no more tokens\n * are in the stream.\n * @const\n */ var end_of_stream = -1;\n\n/**\n * A stream represents an ordered sequence of tokens.\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide the\n * stream.\n */\nfunction Stream(tokens) {\n  /** @type {!Array.<number>} */\n  this.tokens = [].slice.call(tokens);\n}\n\nStream.prototype = {\n  /**\n   * @return {boolean} True if end-of-stream has been hit.\n   */\n  endOfStream: function() {\n    return !this.tokens.length;\n  },\n\n  /**\n   * When a token is read from a stream, the first token in the\n   * stream must be returned and subsequently removed, and\n   * end-of-stream must be returned otherwise.\n   *\n   * @return {number} Get the next token from the stream, or\n   * end_of_stream.\n   */\n   read: function() {\n    if (!this.tokens.length)\n      return end_of_stream;\n     return this.tokens.shift();\n   },\n\n  /**\n   * When one or more tokens are prepended to a stream, those tokens\n   * must be inserted, in given order, before the first token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The token(s) to prepend to the stream.\n   */\n  prepend: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.unshift(tokens.pop());\n    } else {\n      this.tokens.unshift(token);\n    }\n  },\n\n  /**\n   * When one or more tokens are pushed to a stream, those tokens\n   * must be inserted, in given order, after the last token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The tokens(s) to prepend to the stream.\n   */\n  push: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.push(tokens.shift());\n    } else {\n      this.tokens.push(token);\n    }\n  }\n};\n\n//\n// 4. Encodings\n//\n\n// 4.1 Encoders and decoders\n\n/** @const */\nvar finished = -1;\n\n/**\n * @param {boolean} fatal If true, decoding errors raise an exception.\n * @param {number=} opt_code_point Override the standard fallback code point.\n * @return {number} The code point to insert on a decoding error.\n */\nfunction decoderError(fatal, opt_code_point) {\n  if (fatal)\n    throw TypeError('Decoder error');\n  return opt_code_point || 0xFFFD;\n}\n\n/** @interface */\nfunction Decoder() {}\nDecoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point, or |finished|.\n   */\n  handler: function(stream, bite) {}\n};\n\n/** @interface */\nfunction Encoder() {}\nEncoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of code points being encoded.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit, or |finished|.\n   */\n  handler: function(stream, code_point) {}\n};\n\n//\n// 7. API\n//\n\n/** @const */ var DEFAULT_ENCODING = 'utf-8';\n\n// 7.1 Interface TextDecoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextDecoder(encoding, options) {\n  if (!(this instanceof TextDecoder)) {\n    return new TextDecoder(encoding, options);\n  }\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {boolean} */\n  this._BOMseen = false;\n  /** @private @type {?Decoder} */\n  this._decoder = null;\n  /** @private @type {boolean} */\n  this._fatal = Boolean(options['fatal']);\n  /** @private @type {boolean} */\n  this._ignoreBOM = Boolean(options['ignoreBOM']);\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n  Object.defineProperty(this, 'fatal', {value: this._fatal});\n  Object.defineProperty(this, 'ignoreBOM', {value: this._ignoreBOM});\n}\n\nTextDecoder.prototype = {\n  /**\n   * @param {ArrayBufferView=} input The buffer of bytes to decode.\n   * @param {Object=} options\n   * @return {string} The decoded string.\n   */\n  decode: function decode(input, options) {\n    var bytes;\n    if (typeof input === 'object' && input instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input);\n    } else if (typeof input === 'object' && 'buffer' in input &&\n               input.buffer instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input.buffer,\n                             input.byteOffset,\n                             input.byteLength);\n    } else {\n      bytes = new Uint8Array(0);\n    }\n\n    options = ToDictionary(options);\n\n    if (!this._streaming) {\n      this._decoder = new UTF8Decoder({fatal: this._fatal});\n      this._BOMseen = false;\n    }\n    this._streaming = Boolean(options['stream']);\n\n    var input_stream = new Stream(bytes);\n\n    var code_points = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n\n    while (!input_stream.endOfStream()) {\n      result = this._decoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (result === null)\n        continue;\n      if (Array.isArray(result))\n        code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n      else\n        code_points.push(result);\n    }\n    if (!this._streaming) {\n      do {\n        result = this._decoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (result === null)\n          continue;\n        if (Array.isArray(result))\n          code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n        else\n          code_points.push(result);\n      } while (!input_stream.endOfStream());\n      this._decoder = null;\n    }\n\n    if (code_points.length) {\n      // If encoding is one of utf-8, utf-16be, and utf-16le, and\n      // ignore BOM flag and BOM seen flag are unset, run these\n      // subsubsteps:\n      if (['utf-8'].indexOf(this.encoding) !== -1 &&\n          !this._ignoreBOM && !this._BOMseen) {\n        // If token is U+FEFF, set BOM seen flag.\n        if (code_points[0] === 0xFEFF) {\n          this._BOMseen = true;\n          code_points.shift();\n        } else {\n          // Otherwise, if token is not end-of-stream, set BOM seen\n          // flag and append token to output.\n          this._BOMseen = true;\n        }\n      }\n    }\n\n    return codePointsToString(code_points);\n  }\n};\n\n// 7.2 Interface TextEncoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextEncoder(encoding, options) {\n  if (!(this instanceof TextEncoder))\n    return new TextEncoder(encoding, options);\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {?Encoder} */\n  this._encoder = null;\n  /** @private @type {{fatal: boolean}} */\n  this._options = {fatal: Boolean(options['fatal'])};\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n}\n\nTextEncoder.prototype = {\n  /**\n   * @param {string=} opt_string The string to encode.\n   * @param {Object=} options\n   * @return {Uint8Array} Encoded bytes, as a Uint8Array.\n   */\n  encode: function encode(opt_string, options) {\n    opt_string = opt_string ? String(opt_string) : '';\n    options = ToDictionary(options);\n\n    // NOTE: This option is nonstandard. None of the encodings\n    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful,\n    // so streaming is not necessary.\n    if (!this._streaming)\n      this._encoder = new UTF8Encoder(this._options);\n    this._streaming = Boolean(options['stream']);\n\n    var bytes = [];\n    var input_stream = new Stream(stringToCodePoints(opt_string));\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    while (!input_stream.endOfStream()) {\n      result = this._encoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (Array.isArray(result))\n        bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n      else\n        bytes.push(result);\n    }\n    if (!this._streaming) {\n      while (true) {\n        result = this._encoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (Array.isArray(result))\n          bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n        else\n          bytes.push(result);\n      }\n      this._encoder = null;\n    }\n    return new Uint8Array(bytes);\n  }\n};\n\n//\n// 8. The encoding\n//\n\n// 8.1 utf-8\n\n/**\n * @constructor\n * @implements {Decoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Decoder(options) {\n  var fatal = options.fatal;\n\n  // utf-8's decoder's has an associated utf-8 code point, utf-8\n  // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n  // lower boundary (initially 0x80), and a utf-8 upper boundary\n  // (initially 0xBF).\n  var /** @type {number} */ utf8_code_point = 0,\n      /** @type {number} */ utf8_bytes_seen = 0,\n      /** @type {number} */ utf8_bytes_needed = 0,\n      /** @type {number} */ utf8_lower_boundary = 0x80,\n      /** @type {number} */ utf8_upper_boundary = 0xBF;\n\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point.\n   */\n  this.handler = function(stream, bite) {\n    // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n    // set utf-8 bytes needed to 0 and return error.\n    if (bite === end_of_stream && utf8_bytes_needed !== 0) {\n      utf8_bytes_needed = 0;\n      return decoderError(fatal);\n    }\n\n    // 2. If byte is end-of-stream, return finished.\n    if (bite === end_of_stream)\n      return finished;\n\n    // 3. If utf-8 bytes needed is 0, based on byte:\n    if (utf8_bytes_needed === 0) {\n\n      // 0x00 to 0x7F\n      if (inRange(bite, 0x00, 0x7F)) {\n        // Return a code point whose value is byte.\n        return bite;\n      }\n\n      // 0xC2 to 0xDF\n      if (inRange(bite, 0xC2, 0xDF)) {\n        // Set utf-8 bytes needed to 1 and utf-8 code point to byte\n        // − 0xC0.\n        utf8_bytes_needed = 1;\n        utf8_code_point = bite - 0xC0;\n      }\n\n      // 0xE0 to 0xEF\n      else if (inRange(bite, 0xE0, 0xEF)) {\n        // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\n        if (bite === 0xE0)\n          utf8_lower_boundary = 0xA0;\n        // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\n        if (bite === 0xED)\n          utf8_upper_boundary = 0x9F;\n        // 3. Set utf-8 bytes needed to 2 and utf-8 code point to\n        // byte − 0xE0.\n        utf8_bytes_needed = 2;\n        utf8_code_point = bite - 0xE0;\n      }\n\n      // 0xF0 to 0xF4\n      else if (inRange(bite, 0xF0, 0xF4)) {\n        // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\n        if (bite === 0xF0)\n          utf8_lower_boundary = 0x90;\n        // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\n        if (bite === 0xF4)\n          utf8_upper_boundary = 0x8F;\n        // 3. Set utf-8 bytes needed to 3 and utf-8 code point to\n        // byte − 0xF0.\n        utf8_bytes_needed = 3;\n        utf8_code_point = bite - 0xF0;\n      }\n\n      // Otherwise\n      else {\n        // Return error.\n        return decoderError(fatal);\n      }\n\n      // Then (byte is in the range 0xC2 to 0xF4) set utf-8 code\n      // point to utf-8 code point << (6 × utf-8 bytes needed) and\n      // return continue.\n      utf8_code_point = utf8_code_point << (6 * utf8_bytes_needed);\n      return null;\n    }\n\n    // 4. If byte is not in the range utf-8 lower boundary to utf-8\n    // upper boundary, run these substeps:\n    if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\n\n      // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n      // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n      // utf-8 upper boundary to 0xBF.\n      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n      utf8_lower_boundary = 0x80;\n      utf8_upper_boundary = 0xBF;\n\n      // 2. Prepend byte to stream.\n      stream.prepend(bite);\n\n      // 3. Return error.\n      return decoderError(fatal);\n    }\n\n    // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n    // to 0xBF.\n    utf8_lower_boundary = 0x80;\n    utf8_upper_boundary = 0xBF;\n\n    // 6. Increase utf-8 bytes seen by one and set utf-8 code point\n    // to utf-8 code point + (byte − 0x80) << (6 × (utf-8 bytes\n    // needed − utf-8 bytes seen)).\n    utf8_bytes_seen += 1;\n    utf8_code_point += (bite - 0x80) << (6 * (utf8_bytes_needed - utf8_bytes_seen));\n\n    // 7. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n    // continue.\n    if (utf8_bytes_seen !== utf8_bytes_needed)\n      return null;\n\n    // 8. Let code point be utf-8 code point.\n    var code_point = utf8_code_point;\n\n    // 9. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n    // seen to 0.\n    utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\n    // 10. Return a code point whose value is code point.\n    return code_point;\n  };\n}\n\n/**\n * @constructor\n * @implements {Encoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Encoder(options) {\n  var fatal = options.fatal;\n  /**\n   * @param {Stream} stream Input stream.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit.\n   */\n  this.handler = function(stream, code_point) {\n    // 1. If code point is end-of-stream, return finished.\n    if (code_point === end_of_stream)\n      return finished;\n\n    // 2. If code point is in the range U+0000 to U+007F, return a\n    // byte whose value is code point.\n    if (inRange(code_point, 0x0000, 0x007f))\n      return code_point;\n\n    // 3. Set count and offset based on the range code point is in:\n    var count, offset;\n    // U+0080 to U+07FF:    1 and 0xC0\n    if (inRange(code_point, 0x0080, 0x07FF)) {\n      count = 1;\n      offset = 0xC0;\n    }\n    // U+0800 to U+FFFF:    2 and 0xE0\n    else if (inRange(code_point, 0x0800, 0xFFFF)) {\n      count = 2;\n      offset = 0xE0;\n    }\n    // U+10000 to U+10FFFF: 3 and 0xF0\n    else if (inRange(code_point, 0x10000, 0x10FFFF)) {\n      count = 3;\n      offset = 0xF0;\n    }\n\n    // 4.Let bytes be a byte sequence whose first byte is (code\n    // point >> (6 × count)) + offset.\n    var bytes = [(code_point >> (6 * count)) + offset];\n\n    // 5. Run these substeps while count is greater than 0:\n    while (count > 0) {\n\n      // 1. Set temp to code point >> (6 × (count − 1)).\n      var temp = code_point >> (6 * (count - 1));\n\n      // 2. Append to bytes 0x80 | (temp & 0x3F).\n      bytes.push(0x80 | (temp & 0x3F));\n\n      // 3. Decrease count by one.\n      count -= 1;\n    }\n\n    // 6. Return bytes bytes, in order.\n    return bytes;\n  };\n}\n\nexport {TextEncoder, TextDecoder};\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nlet converter;\n/**\n * Convert a little-endian buffer into a BigInt.\n * @param buf The little-endian buffer to convert\n * @returns A BigInt with the little-endian representation of buf.\n */\nfunction toBigIntLE(buf) {\n    {\n        const reversed = Buffer.from(buf);\n        reversed.reverse();\n        const hex = reversed.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, false);\n}\nexports.toBigIntLE = toBigIntLE;\n/**\n * Convert a big-endian buffer into a BigInt\n * @param buf The big-endian buffer to convert.\n * @returns A BigInt with the big-endian representation of buf.\n */\nfunction toBigIntBE(buf) {\n    {\n        const hex = buf.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, true);\n}\nexports.toBigIntBE = toBigIntBE;\n/**\n * Convert a BigInt to a little-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A little-endian buffer representation of num.\n */\nfunction toBufferLE(num, width) {\n    {\n        const hex = num.toString(16);\n        const buffer = Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n        buffer.reverse();\n        return buffer;\n    }\n    // Allocation is done here, since it is slower using napi in C\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), false);\n}\nexports.toBufferLE = toBufferLE;\n/**\n * Convert a BigInt to a big-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A big-endian buffer representation of num.\n */\nfunction toBufferBE(num, width) {\n    {\n        const hex = num.toString(16);\n        return Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n    }\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), true);\n}\nexports.toBufferBE = toBufferBE;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Client = void 0;\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _websocket = _interopRequireDefault(require(\"./lib/client/websocket.browser\"));\n\nvar _client = _interopRequireDefault(require(\"./lib/client\"));\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar Client = /*#__PURE__*/function (_CommonClient) {\n  (0, _inherits2[\"default\"])(Client, _CommonClient);\n\n  var _super = _createSuper(Client);\n\n  function Client() {\n    var address = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"ws://localhost:8080\";\n\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        _ref$autoconnect = _ref.autoconnect,\n        autoconnect = _ref$autoconnect === void 0 ? true : _ref$autoconnect,\n        _ref$reconnect = _ref.reconnect,\n        reconnect = _ref$reconnect === void 0 ? true : _ref$reconnect,\n        _ref$reconnect_interv = _ref.reconnect_interval,\n        reconnect_interval = _ref$reconnect_interv === void 0 ? 1000 : _ref$reconnect_interv,\n        _ref$max_reconnects = _ref.max_reconnects,\n        max_reconnects = _ref$max_reconnects === void 0 ? 5 : _ref$max_reconnects;\n\n    var generate_request_id = arguments.length > 2 ? arguments[2] : undefined;\n    (0, _classCallCheck2[\"default\"])(this, Client);\n    return _super.call(this, _websocket[\"default\"], address, {\n      autoconnect: autoconnect,\n      reconnect: reconnect,\n      reconnect_interval: reconnect_interval,\n      max_reconnects: max_reconnects\n    }, generate_request_id);\n  }\n\n  return (0, _createClass2[\"default\"])(Client);\n}(_client[\"default\"]);\n\nexports.Client = Client;","/**\n * WebSocket implements a browser-side WebSocket specification.\n * @module Client\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = _default;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _eventemitter = require(\"eventemitter3\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar WebSocketBrowserImpl = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2[\"default\"])(WebSocketBrowserImpl, _EventEmitter);\n\n  var _super = _createSuper(WebSocketBrowserImpl);\n\n  /** Instantiate a WebSocket class\n   * @constructor\n   * @param {String} address - url to a websocket server\n   * @param {(Object)} options - websocket options\n   * @param {(String|Array)} protocols - a list of protocols\n   * @return {WebSocketBrowserImpl} - returns a WebSocket instance\n   */\n  function WebSocketBrowserImpl(address, options, protocols) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, WebSocketBrowserImpl);\n    _this = _super.call(this);\n    _this.socket = new window.WebSocket(address, protocols);\n\n    _this.socket.onopen = function () {\n      return _this.emit(\"open\");\n    };\n\n    _this.socket.onmessage = function (event) {\n      return _this.emit(\"message\", event.data);\n    };\n\n    _this.socket.onerror = function (error) {\n      return _this.emit(\"error\", error);\n    };\n\n    _this.socket.onclose = function (event) {\n      _this.emit(\"close\", event.code, event.reason);\n    };\n\n    return _this;\n  }\n  /**\n   * Sends data through a websocket connection\n   * @method\n   * @param {(String|Object)} data - data to be sent via websocket\n   * @param {Object} optionsOrCallback - ws options\n   * @param {Function} callback - a callback called once the data is sent\n   * @return {Undefined}\n   */\n\n\n  (0, _createClass2[\"default\"])(WebSocketBrowserImpl, [{\n    key: \"send\",\n    value: function send(data, optionsOrCallback, callback) {\n      var cb = callback || optionsOrCallback;\n\n      try {\n        this.socket.send(data);\n        cb();\n      } catch (error) {\n        cb(error);\n      }\n    }\n    /**\n     * Closes an underlying socket\n     * @method\n     * @param {Number} code - status code explaining why the connection is being closed\n     * @param {String} reason - a description why the connection is closing\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"close\",\n    value: function close(code, reason) {\n      this.socket.close(code, reason);\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(type, listener, options) {\n      this.socket.addEventListener(type, listener, options);\n    }\n  }]);\n  return WebSocketBrowserImpl;\n}(_eventemitter.EventEmitter);\n/**\n * factory method for common WebSocket instance\n * @method\n * @param {String} address - url to a websocket server\n * @param {(Object)} options - websocket options\n * @return {Undefined}\n */\n\n\nfunction _default(address, options) {\n  return new WebSocketBrowserImpl(address, options);\n}","/**\n * \"Client\" wraps \"ws\" or a browser-implemented \"WebSocket\" library\n * according to the environment providing JSON RPC 2.0 support on top.\n * @module Client\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _eventemitter = require(\"eventemitter3\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar __rest = void 0 && (void 0).__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}; // @ts-ignore\n\n\nvar CommonClient = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2[\"default\"])(CommonClient, _EventEmitter);\n\n  var _super = _createSuper(CommonClient);\n\n  /**\n   * Instantiate a Client class.\n   * @constructor\n   * @param {webSocketFactory} webSocketFactory - factory method for WebSocket\n   * @param {String} address - url to a websocket server\n   * @param {Object} options - ws options object with reconnect parameters\n   * @param {Function} generate_request_id - custom generation request Id\n   * @return {CommonClient}\n   */\n  function CommonClient(webSocketFactory) {\n    var _this;\n\n    var address = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"ws://localhost:8080\";\n\n    var _a = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    var generate_request_id = arguments.length > 3 ? arguments[3] : undefined;\n    (0, _classCallCheck2[\"default\"])(this, CommonClient);\n\n    var _a$autoconnect = _a.autoconnect,\n        autoconnect = _a$autoconnect === void 0 ? true : _a$autoconnect,\n        _a$reconnect = _a.reconnect,\n        reconnect = _a$reconnect === void 0 ? true : _a$reconnect,\n        _a$reconnect_interval = _a.reconnect_interval,\n        reconnect_interval = _a$reconnect_interval === void 0 ? 1000 : _a$reconnect_interval,\n        _a$max_reconnects = _a.max_reconnects,\n        max_reconnects = _a$max_reconnects === void 0 ? 5 : _a$max_reconnects,\n        rest_options = __rest(_a, [\"autoconnect\", \"reconnect\", \"reconnect_interval\", \"max_reconnects\"]);\n\n    _this = _super.call(this);\n    _this.webSocketFactory = webSocketFactory;\n    _this.queue = {};\n    _this.rpc_id = 0;\n    _this.address = address;\n    _this.autoconnect = autoconnect;\n    _this.ready = false;\n    _this.reconnect = reconnect;\n    _this.reconnect_interval = reconnect_interval;\n    _this.max_reconnects = max_reconnects;\n    _this.rest_options = rest_options;\n    _this.current_reconnects = 0;\n\n    _this.generate_request_id = generate_request_id || function () {\n      return ++_this.rpc_id;\n    };\n\n    if (_this.autoconnect) _this._connect(_this.address, Object.assign({\n      autoconnect: _this.autoconnect,\n      reconnect: _this.reconnect,\n      reconnect_interval: _this.reconnect_interval,\n      max_reconnects: _this.max_reconnects\n    }, _this.rest_options));\n    return _this;\n  }\n  /**\n   * Connects to a defined server if not connected already.\n   * @method\n   * @return {Undefined}\n   */\n\n\n  (0, _createClass2[\"default\"])(CommonClient, [{\n    key: \"connect\",\n    value: function connect() {\n      if (this.socket) return;\n\n      this._connect(this.address, Object.assign({\n        autoconnect: this.autoconnect,\n        reconnect: this.reconnect,\n        reconnect_interval: this.reconnect_interval,\n        max_reconnects: this.max_reconnects\n      }, this.rest_options));\n    }\n    /**\n     * Calls a registered RPC method on server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object|Array} params - optional method parameters\n     * @param {Number} timeout - RPC reply timeout value\n     * @param {Object} ws_opts - options passed to ws\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"call\",\n    value: function call(method, params, timeout, ws_opts) {\n      var _this2 = this;\n\n      if (!ws_opts && \"object\" === (0, _typeof2[\"default\"])(timeout)) {\n        ws_opts = timeout;\n        timeout = null;\n      }\n\n      return new Promise(function (resolve, reject) {\n        if (!_this2.ready) return reject(new Error(\"socket not ready\"));\n\n        var rpc_id = _this2.generate_request_id(method, params);\n\n        var message = {\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params || null,\n          id: rpc_id\n        };\n\n        _this2.socket.send(JSON.stringify(message), ws_opts, function (error) {\n          if (error) return reject(error);\n          _this2.queue[rpc_id] = {\n            promise: [resolve, reject]\n          };\n\n          if (timeout) {\n            _this2.queue[rpc_id].timeout = setTimeout(function () {\n              delete _this2.queue[rpc_id];\n              reject(new Error(\"reply timeout\"));\n            }, timeout);\n          }\n        });\n      });\n    }\n    /**\n     * Logins with the other side of the connection.\n     * @method\n     * @param {Object} params - Login credentials object\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"login\",\n    value: function () {\n      var _login = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(params) {\n        var resp;\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.call(\"rpc.login\", params);\n\n              case 2:\n                resp = _context.sent;\n\n                if (resp) {\n                  _context.next = 5;\n                  break;\n                }\n\n                throw new Error(\"authentication failed\");\n\n              case 5:\n                return _context.abrupt(\"return\", resp);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function login(_x) {\n        return _login.apply(this, arguments);\n      }\n\n      return login;\n    }()\n    /**\n     * Fetches a list of client's methods registered on server.\n     * @method\n     * @return {Array}\n     */\n\n  }, {\n    key: \"listMethods\",\n    value: function () {\n      var _listMethods = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2() {\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.call(\"__listMethods\");\n\n              case 2:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function listMethods() {\n        return _listMethods.apply(this, arguments);\n      }\n\n      return listMethods;\n    }()\n    /**\n     * Sends a JSON-RPC 2.0 notification to server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object} params - optional method parameters\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"notify\",\n    value: function notify(method, params) {\n      var _this3 = this;\n\n      return new Promise(function (resolve, reject) {\n        if (!_this3.ready) return reject(new Error(\"socket not ready\"));\n        var message = {\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params || null\n        };\n\n        _this3.socket.send(JSON.stringify(message), function (error) {\n          if (error) return reject(error);\n          resolve();\n        });\n      });\n    }\n    /**\n     * Subscribes for a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"subscribe\",\n    value: function () {\n      var _subscribe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(event) {\n        var result;\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (typeof event === \"string\") event = [event];\n                _context3.next = 3;\n                return this.call(\"rpc.on\", event);\n\n              case 3:\n                result = _context3.sent;\n\n                if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                throw new Error(\"Failed subscribing to an event '\" + event + \"' with: \" + result[event]);\n\n              case 6:\n                return _context3.abrupt(\"return\", result);\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function subscribe(_x2) {\n        return _subscribe.apply(this, arguments);\n      }\n\n      return subscribe;\n    }()\n    /**\n     * Unsubscribes from a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"unsubscribe\",\n    value: function () {\n      var _unsubscribe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(event) {\n        var result;\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (typeof event === \"string\") event = [event];\n                _context4.next = 3;\n                return this.call(\"rpc.off\", event);\n\n              case 3:\n                result = _context4.sent;\n\n                if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                  _context4.next = 6;\n                  break;\n                }\n\n                throw new Error(\"Failed unsubscribing from an event with: \" + result);\n\n              case 6:\n                return _context4.abrupt(\"return\", result);\n\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function unsubscribe(_x3) {\n        return _unsubscribe.apply(this, arguments);\n      }\n\n      return unsubscribe;\n    }()\n    /**\n     * Closes a WebSocket connection gracefully.\n     * @method\n     * @param {Number} code - socket close code\n     * @param {String} data - optional data to be sent before closing\n     * @return {Undefined}\n     */\n\n  }, {\n    key: \"close\",\n    value: function close(code, data) {\n      this.socket.close(code || 1000, data);\n    }\n    /**\n     * Connection/Message handler.\n     * @method\n     * @private\n     * @param {String} address - WebSocket API address\n     * @param {Object} options - ws options object\n     * @return {Undefined}\n     */\n\n  }, {\n    key: \"_connect\",\n    value: function _connect(address, options) {\n      var _this4 = this;\n\n      this.socket = this.webSocketFactory(address, options);\n      this.socket.addEventListener(\"open\", function () {\n        _this4.ready = true;\n\n        _this4.emit(\"open\");\n\n        _this4.current_reconnects = 0;\n      });\n      this.socket.addEventListener(\"message\", function (_ref) {\n        var message = _ref.data;\n        if (message instanceof ArrayBuffer) message = Buffer.from(message).toString();\n\n        try {\n          message = JSON.parse(message);\n        } catch (error) {\n          return;\n        } // check if any listeners are attached and forward event\n\n\n        if (message.notification && _this4.listeners(message.notification).length) {\n          if (!Object.keys(message.params).length) return _this4.emit(message.notification);\n          var args = [message.notification];\n          if (message.params.constructor === Object) args.push(message.params);else // using for-loop instead of unshift/spread because performance is better\n            for (var i = 0; i < message.params.length; i++) {\n              args.push(message.params[i]);\n            } // run as microtask so that pending queue messages are resolved first\n          // eslint-disable-next-line prefer-spread\n\n          return Promise.resolve().then(function () {\n            _this4.emit.apply(_this4, args);\n          });\n        }\n\n        if (!_this4.queue[message.id]) {\n          // general JSON RPC 2.0 events\n          if (message.method && message.params) {\n            // run as microtask so that pending queue messages are resolved first\n            return Promise.resolve().then(function () {\n              _this4.emit(message.method, message.params);\n            });\n          }\n\n          return;\n        } // reject early since server's response is invalid\n\n\n        if (\"error\" in message === \"result\" in message) _this4.queue[message.id].promise[1](new Error(\"Server response malformed. Response must include either \\\"result\\\"\" + \" or \\\"error\\\", but not both.\"));\n        if (_this4.queue[message.id].timeout) clearTimeout(_this4.queue[message.id].timeout);\n        if (message.error) _this4.queue[message.id].promise[1](message.error);else _this4.queue[message.id].promise[0](message.result);\n        delete _this4.queue[message.id];\n      });\n      this.socket.addEventListener(\"error\", function (error) {\n        return _this4.emit(\"error\", error);\n      });\n      this.socket.addEventListener(\"close\", function (_ref2) {\n        var code = _ref2.code,\n            reason = _ref2.reason;\n        if (_this4.ready) // Delay close event until internal state is updated\n          setTimeout(function () {\n            return _this4.emit(\"close\", code, reason);\n          }, 0);\n        _this4.ready = false;\n        _this4.socket = undefined;\n        if (code === 1000) return;\n        _this4.current_reconnects++;\n        if (_this4.reconnect && (_this4.max_reconnects > _this4.current_reconnects || _this4.max_reconnects === 0)) setTimeout(function () {\n          return _this4._connect(address, options);\n        }, _this4.reconnect_interval);\n      });\n    }\n  }]);\n  return CommonClient;\n}(_eventemitter.EventEmitter);\n\nexports[\"default\"] = CommonClient;","'use strict';\n\nconst uuid = require('uuid').v4;\nconst generateRequest = require('../../generateRequest');\n\n/**\n * Constructor for a Jayson Browser Client that does not depend any node.js core libraries\n * @class ClientBrowser\n * @param {Function} callServer Method that calls the server, receives the stringified request and a regular node-style callback\n * @param {Object} [options]\n * @param {Function} [options.reviver] Reviver function for JSON\n * @param {Function} [options.replacer] Replacer function for JSON\n * @param {Number} [options.version=2] JSON-RPC version to use (1|2)\n * @param {Function} [options.generator] Function to use for generating request IDs\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n * @return {ClientBrowser}\n */\nconst ClientBrowser = function(callServer, options) {\n  if(!(this instanceof ClientBrowser)) {\n    return new ClientBrowser(callServer, options);\n  }\n\n  if (!options) {\n    options = {};\n  }\n\n  this.options = {\n    reviver: typeof options.reviver !== 'undefined' ? options.reviver : null,\n    replacer: typeof options.replacer !== 'undefined' ? options.replacer : null,\n    generator: typeof options.generator !== 'undefined' ? options.generator : function() { return uuid(); },\n    version: typeof options.version !== 'undefined' ? options.version : 2,\n    notificationIdNull: typeof options.notificationIdNull === 'boolean' ? options.notificationIdNull : false,\n  };\n\n  this.callServer = callServer;\n};\n\nmodule.exports = ClientBrowser;\n\n/**\n *  Creates a request and dispatches it if given a callback.\n *  @param {String|Array} method A batch request if passed an Array, or a method name if passed a String\n *  @param {Array|Object} [params] Parameters for the method\n *  @param {String|Number} [id] Optional id. If undefined an id will be generated. If null it creates a notification request\n *  @param {Function} [callback] Request callback. If specified, executes the request rather than only returning it.\n *  @throws {TypeError} Invalid parameters\n *  @return {Object} JSON-RPC 1.0 or 2.0 compatible request\n */\nClientBrowser.prototype.request = function(method, params, id, callback) {\n  const self = this;\n  let request = null;\n\n  // is this a batch request?\n  const isBatch = Array.isArray(method) && typeof params === 'function';\n\n  if (this.options.version === 1 && isBatch) {\n    throw new TypeError('JSON-RPC 1.0 does not support batching');\n  }\n\n  // is this a raw request?\n  const isRaw = !isBatch && method && typeof method === 'object' && typeof params === 'function';\n\n  if(isBatch || isRaw) {\n    callback = params;\n    request = method;\n  } else {\n    if(typeof id === 'function') {\n      callback = id;\n      // specifically undefined because \"null\" is a notification request\n      id = undefined;\n    }\n\n    const hasCallback = typeof callback === 'function';\n\n    try {\n      request = generateRequest(method, params, id, {\n        generator: this.options.generator,\n        version: this.options.version,\n        notificationIdNull: this.options.notificationIdNull,\n      });\n    } catch(err) {\n      if(hasCallback) {\n        return callback(err);\n      }\n      throw err;\n    }\n\n    // no callback means we should just return a raw request\n    if(!hasCallback) {\n      return request;\n    }\n\n  }\n\n  let message;\n  try {\n    message = JSON.stringify(request, this.options.replacer);\n  } catch(err) {\n    return callback(err);\n  }\n\n  this.callServer(message, function(err, response) {\n    self._parseResponse(err, response, callback);\n  });\n\n  // always return the raw request\n  return request;\n};\n\n/**\n * Parses a response from a server\n * @param {Object} err Error to pass on that is unrelated to the actual response\n * @param {String} responseText JSON-RPC 1.0 or 2.0 response\n * @param {Function} callback Callback that will receive different arguments depending on the amount of parameters\n * @private\n */\nClientBrowser.prototype._parseResponse = function(err, responseText, callback) {\n  if(err) {\n    callback(err);\n    return;\n  }\n\n  if(!responseText) {\n    // empty response text, assume that is correct because it could be a\n    // notification which jayson does not give any body for\n    return callback();\n  }\n\n  let response;\n  try {\n    response = JSON.parse(responseText, this.options.reviver);\n  } catch(err) {\n    return callback(err);\n  }\n\n  if(callback.length === 3) {\n    // if callback length is 3, we split callback arguments on error and response\n\n    // is batch response?\n    if(Array.isArray(response)) {\n\n      // neccesary to split strictly on validity according to spec here\n      const isError = function(res) {\n        return typeof res.error !== 'undefined';\n      };\n\n      const isNotError = function (res) {\n        return !isError(res);\n      };\n\n      return callback(null, response.filter(isError), response.filter(isNotError));\n    \n    } else {\n\n      // split regardless of validity\n      return callback(null, response.error, response.result);\n    \n    }\n  \n  }\n\n  callback(null, response);\n};\n","'use strict';\n\nconst uuid = require('uuid').v4;\n\n/**\n *  Generates a JSON-RPC 1.0 or 2.0 request\n *  @param {String} method Name of method to call\n *  @param {Array|Object} params Array of parameters passed to the method as specified, or an object of parameter names and corresponding value\n *  @param {String|Number|null} [id] Request ID can be a string, number, null for explicit notification or left out for automatic generation\n *  @param {Object} [options]\n *  @param {Number} [options.version=2] JSON-RPC version to use (1 or 2)\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n *  @param {Function} [options.generator] Passed the request, and the options object and is expected to return a request ID\n *  @throws {TypeError} If any of the parameters are invalid\n *  @return {Object} A JSON-RPC 1.0 or 2.0 request\n *  @memberOf Utils\n */\nconst generateRequest = function(method, params, id, options) {\n  if(typeof method !== 'string') {\n    throw new TypeError(method + ' must be a string');\n  }\n\n  options = options || {};\n\n  // check valid version provided\n  const version = typeof options.version === 'number' ? options.version : 2;\n  if (version !== 1 && version !== 2) {\n    throw new TypeError(version + ' must be 1 or 2');\n  }\n\n  const request = {\n    method: method\n  };\n\n  if(version === 2) {\n    request.jsonrpc = '2.0';\n  }\n\n  if(params) {\n    // params given, but invalid?\n    if(typeof params !== 'object' && !Array.isArray(params)) {\n      throw new TypeError(params + ' must be an object, array or omitted');\n    }\n    request.params = params;\n  }\n\n  // if id was left out, generate one (null means explicit notification)\n  if(typeof(id) === 'undefined') {\n    const generator = typeof options.generator === 'function' ? options.generator : function() { return uuid(); };\n    request.id = generator(request, options);\n  } else if (version === 2 && id === null) {\n    // we have a version 2 notification\n    if (options.notificationIdNull) {\n      request.id = null; // id will not be set at all unless option provided\n    }\n  } else {\n    request.id = id;\n  }\n\n  return request;\n};\n\nmodule.exports = generateRequest;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.shake256 = exports.shake128 = exports.keccak_512 = exports.keccak_384 = exports.keccak_256 = exports.keccak_224 = exports.sha3_512 = exports.sha3_384 = exports.sha3_256 = exports.sha3_224 = exports.Keccak = exports.keccakP = void 0;\nconst _assert_js_1 = require(\"./_assert.js\");\nconst _u64_js_1 = require(\"./_u64.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Various per round constants calculations\nconst [SHA3_PI, SHA3_ROTL, _SHA3_IOTA] = [[], [], []];\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _7n = BigInt(7);\nconst _256n = BigInt(256);\nconst _0x71n = BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = _u64_js_1.default.split(_SHA3_IOTA, true);\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => s > 32 ? _u64_js_1.default.rotlBH(h, l, s) : _u64_js_1.default.rotlSH(h, l, s);\nconst rotlL = (h, l, s) => s > 32 ? _u64_js_1.default.rotlBL(h, l, s) : _u64_js_1.default.rotlSL(h, l, s);\n// Same as keccakf1600, but allows to skip some rounds\nfunction keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    B.fill(0);\n}\nexports.keccakP = keccakP;\nclass Keccak extends utils_js_1.Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        // Can be passed from user as dkLen\n        _assert_js_1.default.number(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        if (0 >= this.blockLen || this.blockLen >= 200)\n            throw new Error('Sha3 supports only keccak-f1600 function');\n        this.state = new Uint8Array(200);\n        this.state32 = (0, utils_js_1.u32)(this.state);\n    }\n    keccak() {\n        keccakP(this.state32, this.rounds);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        _assert_js_1.default.exists(this);\n        const { blockLen, state } = this;\n        data = (0, utils_js_1.toBytes)(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        _assert_js_1.default.exists(this, false);\n        _assert_js_1.default.bytes(out);\n        this.finish();\n        const bufferOut = this.state;\n        const { blockLen } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        _assert_js_1.default.number(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        _assert_js_1.default.output(out, this);\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        this.state.fill(0);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nexports.Keccak = Keccak;\nconst gen = (suffix, blockLen, outputLen) => (0, utils_js_1.wrapConstructor)(() => new Keccak(blockLen, suffix, outputLen));\nexports.sha3_224 = gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexports.sha3_256 = gen(0x06, 136, 256 / 8);\nexports.sha3_384 = gen(0x06, 104, 384 / 8);\nexports.sha3_512 = gen(0x06, 72, 512 / 8);\nexports.keccak_224 = gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexports.keccak_256 = gen(0x01, 136, 256 / 8);\nexports.keccak_384 = gen(0x01, 104, 384 / 8);\nexports.keccak_512 = gen(0x01, 72, 512 / 8);\nconst genShake = (suffix, blockLen, outputLen) => (0, utils_js_1.wrapConstructorWithOpts)((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));\nexports.shake128 = genShake(0x1f, 168, 128 / 8);\nexports.shake256 = genShake(0x1f, 136, 256 / 8);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hmac = void 0;\nconst _assert_js_1 = require(\"./_assert.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// HMAC (RFC 2104)\nclass HMAC extends utils_js_1.Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        _assert_js_1.default.hash(hash);\n        const key = (0, utils_js_1.toBytes)(_key);\n        this.iHash = hash.create();\n        if (!(this.iHash instanceof utils_js_1.Hash))\n            throw new TypeError('Expected instance of class which extends utils.Hash');\n        const blockLen = (this.blockLen = this.iHash.blockLen);\n        this.outputLen = this.iHash.outputLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > this.iHash.blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        _assert_js_1.default.exists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        _assert_js_1.default.exists(this);\n        _assert_js_1.default.bytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nconst hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nexports.hmac = hmac;\nexports.hmac.create = (hash, key) => new HMAC(hash, key);\n","var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = require('safe-buffer').Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n"],"sourceRoot":""}