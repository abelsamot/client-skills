{"version":3,"sources":["components/Navbar/NavbarElements.jsx","components/Navbar/index.jsx","components/Sidebar/SidebarElements.jsx","components/Sidebar/index.jsx","pages/Layout.jsx","components/Signin.jsx","components/Signup.jsx","pages/Home.jsx","components/ProfileBar.jsx","components/AddCandidate.jsx","components/TestCard.jsx","components/listOfTests.jsx","components/AddTestsToCandidate.jsx","components/CandidatesList.jsx","pages/Candidates.jsx","components/adminPanel/MyAccountSettings.jsx","components/adminPanel/AddQuestionToTest.jsx","components/adminPanel/ChangeTestValues.jsx","components/adminPanel/ModifyTest.jsx","pages/Settings.jsx","pages/Tests.jsx","components/UserProfileBar.jsx","components/SkillCard.jsx","components/UserSkills.jsx","components/theme/index.ts","components/UserTrack.jsx","pages/User.jsx","components/CountDownTimer.jsx","components/QuizHeader.jsx","components/QuizStart.jsx","pages/Quiz.jsx","components/CodeAndRun.jsx","pages/CodingTest.jsx","App.js","reportWebVitals.js","index.js"],"names":["Nav","styled","nav","NavLink","Link","Bars","FaBars","NavMenu","div","NavBtnLink","Navbar","toggle","useMoralis","isAuthenticated","logout","ButtonTop","to","onClick","NavbarAuthenticated","src","style","height","SidebarContainer","aside","isOpen","CloseIcon","FaTimes","Icon","SidebarWrapper","SidebarMenu","ul","SidebarLink","LinkS","SideBtnWrap","SidebarRoute","LinkR","Sidebar","ButtonLogout","Layout","useState","setIsOpen","Signin","login","email","setEmail","wrongPassword","setWrongPassword","password","setPassword","Form","controlId","className","Group","Label","Control","value","onChange","event","currentTarget","type","placeholder","Alert","Button","class","Signup","signup","Home","ProfileBar","user","Container","Row","Col","xl","lg","sm","xs","get","AddCandidate","props","firstName","setFirstName","lastName","setLastName","post","setPost","stack","setStack","seniority","setSeniority","makeid","length","result","characters","charactersLength","i","charAt","Math","floor","random","Select","hidden","onSelect","onRemove","options","name","id","displayValue","showCheckbox","stackList","forEach","oneStack","push","console","log","bodyFormData","_id","typeOfUser","userStatus","axios","params","then","response","catch","setValues","userName","candidateAdded","TestCard","testClicked","setTestClicked","buttonAddVisible","setbuttonAddVisible","buttonModifyIsVisible","setbuttonModifyIsVisible","buttonChangeIsVisible","setbuttonChangeIsVisible","Modal","show","Header","Title","color","fontWeight","Body","fontSize","longDescription","Footer","Badge","bg","typeOfTest","duration","nbOfQuestions","Card","width","cardWidth","titleSize","Subtitle","subTitleSize","Text","textSize","smallDescription","hideMin","size","backgroundColor","borderColor","margin","buttonAddIsVisible","addTest","removeTest","buttonAdd","changeTest","buttonChange","modifyTest","buttonModify","ListOfTests","tests","testsSelected","ListGroup","map","test","Item","testName","AddTestsToCandidate","useEffect","getTests","setTests","ShowLink","setShotLink","data","error","setTestsSelected","prevItems","testScore","testType","testDone","testBegun","filter","item","cardInfo","durationInMinutes","borderLeft","candidateUserName","username","listOfTests","navigator","clipboard","writeText","closeTest","useStyles","makeStyles","theme","table","minWidth","tableContainer","borderRadius","tableHeaderCell","palette","primary","dark","getContrastText","CandidatesList","getUsers","navigate","useNavigate","status","users","setUsers","addCandidate","setAddCandidate","addTestsToCandidate","setaddTestsToCandidate","setcandidateUserName","testsDone","sum","reduce","accumulator","object","score","classes","React","page","setPage","rowsPerPage","setRowsPerPage","orderDirection","setOrderDirection","valueToOrderBy","setValueToOrderBy","createSortHandler","property","isAscending","handleRequestSort","descendingComparator","a","b","orderBy","order","TableContainer","component","Paper","Table","sx","TableHead","TableRow","TableCell","TableSortLabel","active","direction","TableBody","rowArray","comparator","stabilizedArray","el","index","sort","sortedRowInformation","slice","row","replace","float","marginTop","marginLeft","TableFooter","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","target","Candidates","MyAccountSettings","setUserData","isUserUpdating","setUserName","undefined","disabled","qs","require","AddQuestionToTest","categories","inputRef","useRef","categoryChosen","setCategoryChosen","question","setQuestion","image","setImage","answer1","setAnswer1","answer1IsCorrect","setAnswer1IsCorrect","answer2","setAnswer2","answer2IsCorrect","setAnswer2IsCorrect","answer3","setAnswer3","answer3IsCorrect","setAnswer3IsCorrect","answer4","setAnswer4","answer4IsCorrect","setAnswer4IsCorrect","questionAdded","setQuestionAdded","resizeFile","file","Promise","resolve","Resizer","imageFileResizer","uri","files","base64","setTimeout","category","categoryName","ref","padding","variant","stringify","bodyData","testId","testSelectedId","current","addQuestions","showQuestionAddedAlert","ChangeTestValues","listOfQuestionsToDelete","setListOfQuestionsToDelete","qcmQuestionsList","setqcmQuestionsList","setSmallDescription","setLongDescription","difficulty","setDifficulty","setNbOfQuestions","setDurationInMinutes","setCategories","addCategories","setAddCategories","newCategoryName","setNewCategoryName","newCategoryNbOfIterations","setNewCategoryNbOfIterations","testModified","setTestModified","InputGroup","as","maxIterationPerTest","e","idx","clone","obj","handleMaxIterationChange","q","questionCategory","oldArray","showTestModifiedAlert","ModifyTest","testSelectedName","setTestSelectedName","modifyState","setModifyState","testSelectedType","setTestSelectedType","setTestSelectedId","testData","setTest","setQcmQuestionsList","addNewQuestion","allquestions","Settings","pageState","setPageState","activeKey","eventKey","title","Tests","UserProfileBar","userStack","round","SkillCard","now","ProgressBar","label","UserSkills","defaultTheme","border","primaryFont","primaryFontColor","treeBackgroundColor","disabledTreeOpacity","headingFont","headingFontColor","headingFontSize","headingHoverColor","headingHoverColorTransition","tooltipBackgroundColor","tooltipFontColor","tooltipZIndex","nodeBackgroundColor","nodeBorderColor","nodeAlternativeFontColor","nodeAltenativeActiveFontColor","nodeOverlayColor","nodeAlternativeActiveBackgroundColor","nodeActiveBackgroundColor","nodeHoverBorder","nodeHoverBorderColor","nodeIconWidth","nodeMobileTextNodeHeight","nodeMobileTextNodeWidth","nodeMobileFontSize","nodeDesktopTextNodeHeight","nodeDesktopTextNodeWidth","nodeDesktopFontSize","edgeBorder","UserTrack","handle","useParams","getTree","setNodeState","nodeStates","setUserTree","testTree","tooltip","content","children","userTree","nodeState","handleSave","storage","treeId","skills","idOfText","obj1","obj2","keyFound","Object","keys","key","difference","testToOpen","find","x","userID","marginRight","textAlign","paddingTop","zIndex","savedData","skilltree","User","getUserTree","setUser","setNodeStates","paddingLeft","defaultRemainingTime","seconds","minutes","CountDownTimer","getRemainingSeconds","nowDayjs","timestamDayjs","diff","getRemainingMinutes","remainintTime","setRemainingTime","intervalId","setInterval","countdown","countdownTimeStampMs","timestampMs","dayjs","isBefore","quizStep","getRomainingTimeUntilMsTimeStamp","clearInterval","QuizHeader","currentDate","Date","xMinutesLater","getTime","time","capture","webcamRef","useCallback","imageSrc","getScreenshot","imageArray","paddingBottom","md","href","audio","screenshotFormat","videoConstraints","facingMode","launchTimer","finishQuiz","QuizStart","Web3","givenProvider","Quiz","authenticate","isAuthenticating","addTests","account","quizID","questions","userId","user1","testAlreadyBegun","setTestAlreadyBegun","qcmQuestionList","setQcmQuestionList","getUser","getTest","getQuestions","o","hasOwnProperty","currentQuestion","setCurrentQuestion","setQuizStep","setScore","quizState","setQuizState","changeQuizStep","setlaunchTimer","setTime","questionImage","answersOptions","answerText","onMouseEnter","onMouseLeave","isCorrect","newScore","nextQuestion","handlseAnswerButtonClick","CodeAndRun","changeExtension","codingQuestions","initialCode","code","setCode","testCases","setTestCases","finishTest","setfinishTest","python","extensions","setExtensions","language","javascript","jsx","keyMap","editor","change","codeToSend","passOrFail","testCase","CodingTest","codingQuestionList","setcodingQuestionList","getCodingQuestions","nbTestValidated","questionText","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StyledEngineProvider","injectFirst","appId","serverUrl"],"mappings":"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","file":"static/js/main.67485681.chunk.js","sourcesContent":["\n\nimport { FaBars } from 'react-icons/fa';\nimport { NavLink as Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Nav = styled.nav`\n  background: #FFCD4D;\n  height: 80px;\n  display: flex;\n  justify-content: space-between;\n  padding: 0.5rem calc((100vw - 1000px) / 2);\n  z-index: 10;\n  /* Third Nav */\n  /* justify-content: flex-start; */\n`;\n\nexport const NavLink = styled(Link)`\n  color: #fff;\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  padding: 0 1rem;\n  height: 100%;\n  cursor: pointer;\n  font-weight: 300;\n  &.active {\n    font-weight: 800;\n  }\n  &:hover {\n    font-weight: 700;\n    color: #fff\n  }\n`;\n\nexport const Bars = styled(FaBars)`\n  display: none;\n  color: #fff;\n  @media screen and (max-width: 768px) {\n    display: block;\n    position: absolute;\n    top: 0;\n    right: 0;\n    transform: translate(-100%, 75%);\n    font-size: 1.8rem;\n    cursor: pointer;\n  }\n`;\n\nexport const NavMenu = styled.div`\n  display: flex;\n  align-items: center;\n  margin-right: 24px;\n  /* Third Nav */\n  /* width: 100vw;\n  white-space: nowrap; */\n  @media screen and (max-width: 768px) {\n    display: none;\n  }\n`;\n\nexport const NavBtn = styled.nav`\n  display: flex;\n  align-items: center;\n  margin-right: 24px;\n  /* Third Nav */\n  /* justify-content: flex-end;\n  width: 100vw; */\n  @media screen and (max-width: 768px) {\n    display: none;\n  }\n`;\n\nexport const NavBtnLink = styled(Link)`\n  border-radius: 4px;\n  background: #fff8e8;\n  padding: 10px 22px;\n  color: #000;\n  outline: none;\n  border: none;\n  cursor: pointer;\n  transition: all 0.2s ease-in-out;\n  text-decoration: none;\n  /* Second Nav */\n  margin-left: 24px;\n  &:hover {\n    transition: all 0.2s ease-in-out;\n    background: #fff;\n    color: #010606;\n  }\n`;","import React from \"react\";\nimport { BrowserRouter, Route, Link } from \"react-router-dom\";\nimport {Nav, NavLink, Bars, NavMenu, NavBtn, NavBtnLink} from './NavbarElements'\nimport {useMoralis} from 'react-moralis'\n\nfunction Navbar({toggle}) {\n  const {isAuthenticated, logout}=useMoralis();\n\n  const ButtonTop = ()=>{\n    if(isAuthenticated){\n      return <div><NavBtnLink to=\"/\" onClick={()=>logout()}> Logout </NavBtnLink></div>\n    }\n  }\n  const NavbarAuthenticated = () => {\n    if(isAuthenticated){\n      return <>\n        <NavLink to=\"/candidates\">Candidates</NavLink>\n        <NavLink to=\"/tests\">Tests</NavLink>\n        <NavLink to=\"/settings\">Settings</NavLink>\n      </>\n    }\n  }\n\n  return (\n    <Nav>\n          <NavLink to=\"/\">  <img src=\"https://i.postimg.cc/dV4mxdww/logo.png\" style={{height:\"70px\"}}/> </NavLink>\n          <Bars onClick={toggle}/>\n          <NavMenu>\n            <NavbarAuthenticated/>\n            <ButtonTop/>\n          </NavMenu>\n    </Nav>\n  );\n}\n\nexport default Navbar;","import styled from 'styled-components'\nimport {FaTimes} from 'react-icons/fa'\nimport {Link as LinkS} from 'react-scroll'\nimport {Link as LinkR} from 'react-router-dom'\n\nexport const SidebarContainer = styled.aside`\n    position: fixed;\n    z-index: 999;\n    width: 100%;\n    height: 100%;\n    background: #FFCD4D;\n    display: grid;\n    align-itmes: center;\n    top: 0;\n    left: 0;\n    transition: 0.3 eas-in-out;\n    opacity: ${({ isOpen}) => (isOpen ? '100%' : '0')};\n    top: ${({ isOpen}) => (isOpen ? '0' : '-100%')};\n`\n\nexport const CloseIcon = styled(FaTimes)`\ncolor: #fff\n`\n\nexport const Icon = styled.div`\n    position: absolute;\n    top: 1.2rem;\n    right: 1.5rem;\n    background: transparent;\n    font-size: 2rem;\n    cursor: pointer;\n    outile: none;\n`;\n\nexport const SidebarWrapper = styled.div`\ncolor: #fff;\nmargin-top: 20vh;\n`\n\nexport const SidebarMenu = styled.ul`\n    display:grid;\n    grid-template-columns: 1fr;\n    grid-template-rows: repeat(6,80px);\n    test-align: center;\n\n    @media screen and (max-width: 480px){\n        grid-template-rows: repeat(6,60px)\n    }\n`\n\nexport const SidebarLink = styled(LinkS)`\ndisplay: flex;\nalign-items: center;\njustify-content: center;\nfont-size: 1.5rem;\ntext-decoration: none;\nlist-style:none;\ntransition: 0.2s ease-in-out;\ntext-decoration: none;\ncolor: #fff;\ncusor: pointer;\n\n&:hover {\n    font-weight: 700;\n    color: #fff;\n    transition: 0.2s ease-in-out;\n}\n\n`\n\nexport const SideBtnWrap = styled.div`\ndisplay:flex;\njustify-content:center;\n`\n\nexport const SidebarRoute = styled(LinkR)`\nborder-radius: 50px;\nbackground: #E4DEF5;\npadding: 16px 64px;\ncolor: #010606;\nfont-size: 16px;\noutile: none;\nborder: none;\ncursor: pointer;\ntransition: all 0.2s ease-in-out;\ntext-decoration: none;\n\n&:hover{\n    transition: all 0.2s ease-in-out;\n    background: #fff;\n}\n`","import React from \"react\";\nimport {SidebarContainer, Icon, CloseIcon, SidebarWrapper, SidebarMenu, SidebarLink, SideBtnWrap, SidebarRoute} from './SidebarElements'\n\nimport {useMoralis} from 'react-moralis'\nfunction Sidebar({isOpen, toggle}) {\n\n    const {isAuthenticated, logout}=useMoralis();\n    const ButtonLogout = ()=>{\n        if(isAuthenticated){\n          return <div><SidebarRoute to=\"/\" onClick={()=>logout()}> Logout </SidebarRoute></div>\n        }\n    }\n    return (\n    <SidebarContainer isOpen={isOpen}>\n        <Icon onClick={toggle}>\n            <CloseIcon/>\n        </Icon>\n\n        <SidebarWrapper>\n            <SidebarMenu>\n                <SidebarLink to=\"/candidates\" onClick={toggle}>\n                    Candidates\n                </SidebarLink>\n                <SidebarLink to=\"/tests\" onClick={toggle}>\n                    Tests\n                </SidebarLink>\n                <SidebarLink to=\"/settings\" onClick={toggle}>\n                    Settings\n                </SidebarLink>\n            </SidebarMenu>\n            <SideBtnWrap>\n                <ButtonLogout/>\n            </SideBtnWrap>\n\n        </SidebarWrapper>\n    </SidebarContainer>\n  );\n}\n\nexport default Sidebar;","import React, {useState} from \"react\";\nimport {Outlet} from \"react-router-dom\";\nimport Navbar from \"../components/Navbar\";\nimport Sidebar from \"../components/Sidebar\";\nimport 'bootstrap/dist/css/bootstrap.min.css'\nconst Layout = () => {\n  const [isOpen,setIsOpen] = useState(false)\n\n  const toggle = () => {\n    setIsOpen(!isOpen)\n  }\n  return <div>\n      <Sidebar isOpen={isOpen} toggle={toggle}/>\n      <Navbar toggle={toggle} />\n      <Outlet />\n    </div>\n};\n\nexport default Layout;","import React from 'react';\nimport {Button, Form} from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {useState} from 'react'\nimport {useMoralis} from \"react-moralis\";\nimport Alert from 'react-bootstrap/Alert';\n\nconst Signin = ()=>{\n\n    const {login,isAuthenticated}= useMoralis()\n    const [email,setEmail]=useState()\n    const [wrongPassword,setWrongPassword]=useState(false)\n    const [password,setPassword]=useState()\n\n    return <div>\n        <Form controlId=\"formEmail\" className=\"d-grid gap-3\">\n        <Form.Group>\n            <Form.Label className=\"d-flex justify-content-center h3 mb-3 fw-normal\">Connect to admin account</Form.Label>\n            <Form.Control value={email} onChange={(event)=>setEmail(event.currentTarget.value)} type=\"email\" placeholder=\"Email address\"/>\n            <Form.Control value={password} onChange={(event)=>setPassword(event.currentTarget.value)} type=\"password\" placeholder=\"Password\"/>\n        </Form.Group>\n        {wrongPassword && <Alert> Wrong password or username, please try again </Alert>}\n        <Button class=\"w-100 btn btn-lg btn-primary login\" onClick={()=> {\n            \n            login(email, password)\n            if(!isAuthenticated){\n                setWrongPassword(true)\n            }}}>Sign in</Button>\n    </Form>\n    </div>\n}\n\nexport default Signin","import React from 'react';\nimport {Button, Form} from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {useState} from 'react'\nimport {useMoralis} from \"react-moralis\";\n\nconst Signup = ()=>{\n\n    const {signup}= useMoralis()\n    const [email,setEmail]=useState()\n    const [password,setPassword]=useState()\n\n    return <div>\n        <Form controlId=\"formEmail\" className=\"d-grid gap-3\">\n        <Form.Group className=\"d-grid gap-3\">\n            <Form.Label className=\"d-flex justify-content-center h3 mb-3 fw-normal\">Add a user from your company </Form.Label>\n            <hr/>\n            <Form.Control value={email} onChange={(event)=>setEmail(event.currentTarget.value)} type=\"email\" placeholder=\"Email address\"/>\n            <Form.Control value={password} onChange={(event)=>setPassword(event.currentTarget.value)} type=\"password\" placeholder=\"Password\"/>\n        </Form.Group>\n        <Button class=\"w-100 btn btn-lg btn-primary login\" onClick={()=> signup(email, password, email)}>Add user</Button>\n    </Form>\n    </div>\n}\n\nexport default Signup","import React from 'react';\nimport {Button, Form} from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport Signin from '../components/Signin.jsx';\nimport Signup from '../components/Signup.jsx';\nimport {useMoralis} from 'react-moralis'\nimport  { Navigate } from 'react-router-dom'\n\nfunction Home() {\n    const {isAuthenticated, logout}=useMoralis();\n    if(isAuthenticated){\n       return <Navigate to=\"/candidates\"/>\n    }\n\n    return <div className=\"d-flex align-items-center justify-content-center page\">\n    <Signin/>\n    </div>\n\n}\n\nexport default Home;","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {useState} from 'react'\nimport {useMoralis} from \"react-moralis\";\nimport {Button, Form, Container, Col, Row} from 'react-bootstrap'\nimport '../styles/styles.css'\n\nconst ProfileBar = ()=>{\n    const { user} = useMoralis();\n    return <div className= \"profileBar\">\n        <Container className= \"w-100\">\n            <Row >\n                <Col xl={2} lg={3}  sm={3.5} xs={4} className=\"regularCol d-flex align-items-center justify-content-center\"> \n                    <img src='https://awkbi0rsarvu.usemoralis.com:2053/server/files/1M3DRwK4iIFbrcX9BiKCUWPMcRfuUIEp7BTSKgf3/6f41f699362ef8d696a542acc3b41104_Stack.png' class=\"headerImage \"></img>\n                </Col>\n                <Col xl={3} lg={4}  sm={4.5} xs={5} className=\"regularCol titleProfile\"> \n                    <div>\n                    <Row ><h3 className=\"h3\"> Stack Talent {user.get(\"firm\").get(\"name\")}</h3> </Row>\n                    <Row> <p className=\"p\"> Head Hunting firm {user.get(\"firm\").get(\"typeOfCompany\")}</p></Row></div>\n                </Col>\n                <Col xl={5} lg={3}  sm={1} xs={2} className=\"regularCol\"> </Col>\n                <Col xl={2} lg={2}  sm={2} xs={1} className=\"regularCol\"> \n                </Col>\n            </Row>\n        </Container>\n    </div>\n}\n\nexport default ProfileBar","import React from 'react';\nimport {Button, Form, Container} from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {useState} from 'react'\nimport {useMoralis} from \"react-moralis\";\nimport Multiselect from 'multiselect-react-dropdown';\nimport axios from \"axios\";\n\nconst AddCandidate = (props)=>{\n\n    const [email,setEmail]=useState()\n    const [firstName,setFirstName]=useState()\n    const [lastName,setLastName]=useState()\n    const [post,setPost]=useState([])\n    const [stack,setStack]=useState()\n    const [seniority,setSeniority]=useState([])\n    const typeOfUser = \"Candidate\"\n    const userStatus = \"Test sent\"\n    var stackOptions = {\n        options: [{name: 'React ', id: 1},{name: 'Node.JS ', id: 2},{name: 'Python ', id: 3},{name: 'Solidity ', id: 4},{name: 'Java Script ', id: 5},{name: 'Mongo DB ', id: 6}]\n    };\n    function makeid(length) {\n        var result           = '';\n        var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n        var charactersLength = characters.length;\n        for ( var i = 0; i < length; i++ ) {\n          result += characters.charAt(Math.floor(Math.random() * \n     charactersLength));\n       }\n       return result;\n    }\n    const setValues = () =>{\n        var stackList = []\n        stack.forEach(function(oneStack){\n            stackList.push(oneStack.name)\n        })\n        console.log(stackList)\n        const bodyFormData = {\n            _id:makeid(24),\n            email:email,\n            post:post,\n            stack:stackList,\n            seniority: seniority,\n            lastName: lastName,\n            firstName: firstName,\n            typeOfUser: typeOfUser,\n            userStatus: userStatus,\n        }\n        axios.post(\"/addUser\", null, {params:bodyFormData})\n            .then(function (response) {\n              //handle success\n              console.log(response);\n            })\n            .catch(function (response) {\n              //handle error\n              console.log(response);\n            });\n    }\n\n    return <div>\n    <Container className= \"w-75\">\n        <Form controlId=\"formEmail\" className=\"d-grid gap-3\">\n        <Form.Group className=\"d-grid gap-3\">\n            <Form.Label className=\"d-flex justify-content-center h4 mb-3 fw-normal\">Add a candidate </Form.Label>\n            <Form.Control value={email} onChange={(event)=>setEmail(event.currentTarget.value)} type=\"email\" placeholder=\"Email address\"/>\n            <Form.Control value={firstName} onChange={(event)=>setFirstName(event.currentTarget.value)} type=\"text\" placeholder=\"First Name\"/>\n            <Form.Control value={lastName} onChange={(event)=>setLastName(event.currentTarget.value)} type=\"text\" placeholder=\"Last Name\"/>\n            <Form.Select value={post} onChange={(event)=>setPost(event.currentTarget.value)} type=\"text\">\n            <option hidden value > Position </option>\n            <option>Full-Stack Developer</option>\n            <option>Front-end Developer</option>\n            <option>Back-end Developer</option>\n            <option>Solidity Developer</option>\n            <option>Full-Stack Blockchain Developer</option>\n            </Form.Select>\n            <Multiselect\n                value={stack}\n                onSelect={(event)=>setStack(event)}\n                onRemove={(event)=>setStack(event)}\n                options={stackOptions.options} // Options to display in the dropdown\n                displayValue=\"name\"\n                placeholder=\"Stack\"\n                showCheckbox // Property name to display in the dropdown options\n                />\n            <Form.Select value={seniority} onChange={(event)=>setSeniority(event.currentTarget.value)} type=\"text\">\n            <option hidden value > Seniority </option>\n            <option>Junior</option>\n            <option>3 to 5 years</option>\n            <option>5 to 8 years</option>\n            <option>8 to 12 years</option>\n            <option>12+ years</option>\n            </Form.Select>\n        </Form.Group>\n        <Button class=\"w-100 btn btn-lg btn-primary login\" onClick={() => {\n            setValues()\n            const userName=firstName + \" \" + lastName\n            props.candidateAdded(userName)\n        }\n        }>Add new candidate</Button>\n    </Form>\n        <div style={{height:\"30px\"}}></div>\n    </Container>\n    </div>\n}\n\nexport default AddCandidate","import React from 'react';\nimport {Button, Form, Card, Badge, Modal, Container} from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {useMoralis} from 'react-moralis'\nimport {useState, useEffect} from 'react'\nimport  { Navigate } from 'react-router-dom'\nimport '../styles/test.css'\nimport { BsSearch } from \"react-icons/bs\";\n\nfunction TestCard(props) {\n\n    const [testClicked,setTestClicked]=useState(false)\n    const [buttonAddVisible,setbuttonAddVisible]=useState(true)\n    const [buttonModifyIsVisible,setbuttonModifyIsVisible]=useState(true)\n    const [buttonChangeIsVisible,setbuttonChangeIsVisible]=useState(true)\n\n    const buttonAdd = () => {\n        if (props.buttonAddIsVisible){\n            if(!buttonAddVisible){\n                return <div> <Card.Link ><Button size=\"sm\"  style={{backgroundColor:\"#ff4136\", borderColor:\"#ff4136\", margin: \"0 auto\"} } onClick={()=>{\n                    props.removeTest(props.name,props.id,props.typeOfTest)\n                    setbuttonAddVisible(!buttonAddVisible)\n                    }}>remove</Button> </Card.Link> </div>\n            }\n            return <div> <Card.Link ><Button size=\"sm\"  style={{backgroundColor:\"#27BC49\", borderColor:\"#27BC49\", margin: \"0 auto\"}} onClick={\n                ()=>{\n                    props.addTest(props.name,props.id,props.typeOfTest)\n                    setbuttonAddVisible(!buttonAddVisible)\n                }}>Add</Button> </Card.Link> </div>\n        }\n\n    }\n\n    const buttonModify= () => {\n        if (props.buttonModifyIsVisible){\n            return <div> <Card.Link ><Button size=\"sm\"  style={{backgroundColor:\"#27BC49\", borderColor:\"#27BC49\", margin: \"0 auto\"}} onClick={\n                ()=>{\n                    props.modifyTest(props.name,props.id,props.typeOfTest)\n                    setbuttonModifyIsVisible(!buttonModifyIsVisible)\n                }}> Add question </Button> </Card.Link> </div>\n        }\n\n    }\n\n    const buttonChange= () => {\n        if (props.buttonChangeIsVisible){\n            return <div> <Card.Link ><Button size=\"sm\"  style={{backgroundColor:\"#27BC49\", borderColor:\"#27BC49\", margin: \"0 auto\"}} onClick={\n                ()=>{\n                    props.changeTest(props.name,props.id,props.typeOfTest)\n                    setbuttonChangeIsVisible(!buttonChangeIsVisible)\n                }}> Modify </Button> </Card.Link> </div>\n        }\n\n    }\n\n       return  <div>\n       \n       \n       <Modal show={testClicked}>\n                \n                \n                <Modal.Header> <Button onClick={()=>setTestClicked(false)}> X </Button> </Modal.Header>\n                <Container >\n                <div style={{height:\"30px\"}}></div>\n                <Modal.Title style={{color:\"#FFCD4D\", fontWeight:600}} className=\"d-flex justify-content-center\">{props.name}</Modal.Title>\n                <Modal.Body style={{fontWeight:300, fontSize:\"13px\"}}> {props.longDescription} </Modal.Body>\n                <div style={{height:\"30px\"}}></div>\n                </Container>\n\n                <Modal.Footer className=\"h5\"> \n                <Badge bg=\"secondary\">{props.typeOfTest} </Badge>\n                <Badge bg=\"primary\">{props.duration} min </Badge> \n                <Badge bg=\"primary\">{props.nbOfQuestions} questions </Badge>\n                </Modal.Footer>\n                \n        </Modal>\n\n\n            \n       <Card style={{ width: props.cardWidth}} className=\"testCard\" >\n            <Card.Body>\n                <Card.Title style={{color:\"#FFCD4D\", fontWeight:600, fontSize:props.titleSize}}>{props.name}</Card.Title>\n                <Card.Subtitle className=\"mb-2 text-muted\" style={{fontSize:props.subTitleSize}}>{props.typeOfTest}</Card.Subtitle>\n                <Card.Text style={{fontWeight:300, fontSize: props.textSize}}>\n                {props.smallDescription}\n                </Card.Text>\n                <div style={{height:\"15px\"}}></div>\n                <div className=\"d-flex justify-content-end d-grid gap-2\">\n                {props.hideMin ? <div> </div> : <Card.Link><Badge bg=\"primary\">{props.duration} min </Badge>  </Card.Link>}\n                {props.hideMin ? <div> </div> : <Card.Link ><Button size=\"md\"  onClick={()=>setTestClicked(true)} style={{backgroundColor:\"#27BC49\", borderColor:\"#27BC49\", margin: \"0 auto\"}}> <BsSearch/> </Button> </Card.Link>}\n                {buttonAdd()}\n                {buttonChange()}\n                {buttonModify()}\n                </div>\n            </Card.Body>\n        </Card>\n        </div>\n        \n    }\n\n\n\nexport default TestCard;","import React from 'react';\nimport {Button, Form, Card, Badge, Modal, Container,ListGroup} from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {useMoralis} from 'react-moralis'\nimport {useState, useEffect} from 'react'\nimport  { Navigate } from 'react-router-dom'\nimport '../styles/test.css'\n\n\nfunction ListOfTests(props) {\n    const tests = props.testsSelected\n    console.log(tests )\n    return  <div>\n    <ListGroup>\n    {tests.map(test =>(<ListGroup.Item style={{color:\"#FFCD4D\", fontWeight:600}}>{test.testName}</ListGroup.Item>))}\n    </ListGroup>\n        </div>\n        \n    }\n\nexport default ListOfTests;","import React from 'react';\nimport {Button, Form, Container, Row, Col} from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {useState, useEffect} from 'react'\nimport {useMoralis} from \"react-moralis\";\nimport Multiselect from 'multiselect-react-dropdown';\nimport axios from \"axios\";\nimport TestCard from './TestCard';\nimport ListOfTests from './listOfTests';\nimport  { Navigate } from 'react-router-dom'\nconst AddTestsToCandidate = (props)=>{\n\n    useEffect(() => {\n        getTests()\n        console.log(\"ok\")\n      }, []);\n    const [tests, setTests] = useState([]);\n    const [ShowLink,setShotLink] = useState(false)\n\n    const getTests = () => {\n        axios.get(\"/getTests\").then((response)=>{\n            setTests(response.data)\n        })\n        .catch(error => console.error(error))\n    }\n\n\n    const [testsSelected, setTestsSelected] = useState([{}]);\n\n    const addTest=(name,id,typeOfTest)=>{\n        setTestsSelected((prevItems) => {\n            return [...prevItems, {\n            _id:id,\n            testName:name,\n            testScore:0,\n            testType:typeOfTest,\n            testDone:false,\n            testBegun:false}];\n          });\n\n    }\n\n    const removeTest=(name,id)=>{\n        setTestsSelected(testsSelected.filter(item=>item.testName !== name));\n        console.log(\"remove\" +id)\n\n    }\n\n\n    const addTests = () =>{\n        const bodyFormData = {\n            username:props.candidateUserName,\n            listOfTests:testsSelected\n        }\n        axios.post(\"/addTestsToUser\", null, {params:bodyFormData})\n                .then(function (response) {\n                //handle success\n                console.log(response);\n                })\n                .catch(function (response) {\n                //handle error\n                console.log(response);\n                });\n\n        setShotLink(true)\n        }\n    const finish =()=> {\n        navigator.clipboard.writeText('http://localhost:3000/user/' + props.candidateUserName)\n        props.closeTest(false)\n    }\n    return <div>\n    <Container className= \"w-100\">\n    <Row>\n        <Col lg={6} xs={12}>\n        <div style={{height:\"30px\"}}></div>\n\n        <Container >\n       <Row  className=\"d-flex justify-content-left\">\n        {tests.map(cardInfo =>(\n            <Col lg={6} sm={12} >\n            <TestCard key={cardInfo._id} id={cardInfo._id} textSize=\"11px\" subTitleSize=\"14px\" titleSize=\"16px\" cardWidth=\"15rem\" buttonAddIsVisible=\"true\" addTest={addTest} removeTest={removeTest} name={cardInfo.name} nbOfQuestions={cardInfo.nbOfQuestions} duration={cardInfo.durationInMinutes} longDescription={cardInfo.longDescription} smallDescription={cardInfo.smallDescription} typeOfTest={cardInfo.typeOfTest}/>\n            <div style={{height:\"20px\"}}></div>\n            </Col>\n        ))}\n        </Row>\n        </Container>\n\n\n\n        </Col>\n\n        <Col lg={6} xs={12} style={{borderLeft:\"1px solid\", borderColor:\"#DDDDDD\"} }>\n        <Container className=\"w-75\">\n        <div style={{height:\"40px\"}}></div>\n        <h4 className=\"h4 d-flex justify-content-center\">Test for  {' '+props.candidateUserName}</h4>\n        <div style={{height:\"20px\"}}></div>\n        <ListOfTests testsSelected={testsSelected} />\n        <div style={{height:\"50px\"}}></div>\n        {!ShowLink &&<div>\n        <Button onClick={addTests} className=\"w-100\"> Add tests & generate link </Button>\n        <div style={{height:\"20px\"}}></div>\n        </div>}\n        {ShowLink && <Form> \n        <Form.Control type=\"text\" value={'http://localhost:3000/'+ props.candidateUserName} />\n        <div style={{height:\"30px\"}}></div>\n        <Button className=\"w-100\" size=\"md\" onClick={finish} style={{backgroundColor:\"#27BC49\", borderColor:\"#27BC49\", margin: \"0 auto\"}}> Copy Link and close tab </Button> \n        </Form> }\n        </Container>\n        </Col>\n    </Row>\n        <div style={{height:\"30px\"}}></div>\n    </Container>\n    </div>\n}\n\nexport default AddTestsToCandidate","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {useState, useEffect} from 'react'\nimport {useMoralis} from \"react-moralis\";\nimport {Button, Form, Container, Col, Row, Modal, Badge} from 'react-bootstrap'\nimport '../styles/styles.css'\nimport axios from \"axios\";\nimport AddCandidate from './AddCandidate';\nimport AddTestsToCandidate from './AddTestsToCandidate';\nimport  { Navigate, useNavigate } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { \n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Paper,\n    Avatar,\n    Grid,\n    Typography,\n    TablePagination,\n    TableFooter,\n    TableSortLabel\n } from '@material-ui/core';\nimport { borderRadius } from '@mui/system';\n\n const useStyles = makeStyles((theme) => ({\n    table: {\n      minWidth: 650,\n    },\n    tableContainer: {\n        borderRadius: 10,\n        backgroundColor:\"#fff7e2\",\n        margin: '10px 10px',\n    },\n    tableHeaderCell: {\n        fontWeight: 'bold',\n        backgroundColor: theme.palette.primary.dark,\n        color: theme.palette.getContrastText(theme.palette.primary.dark)\n    },\n  }));\n\n\nconst CandidatesList = ()=>{\n    useEffect(() => {\n        getUsers()\n        console.log(\"ok\")\n      }, []);\n\n    let navigate = useNavigate();\n    const [users, setUsers] = useState([{\n        username:\"Abel \",\n        email:\"abel@redriverwest.com\",\n        post:\"Full Stack\",\n        status:\"Hired\",\n        stack:['React',\", \",'Node'],\n    }]);\n    const defaultSorted = [{\n        dataField: 'username',\n        order: 'desc'\n      }];\n\n    const getUsers = () => {\n        axios.get(\"/getUsers\").then((response)=>{\n            setUsers(response.data)\n        })\n        .catch(error => console.error(error))\n    }\n    \n\n    const [addCandidate,setAddCandidate]=useState(false)\n    const [addTestsToCandidate,setaddTestsToCandidate]=useState(false)\n    const [candidateUserName,setcandidateUserName]=useState(\"\")\n\n\n    const addedCandidate=(value) => {\n        setcandidateUserName(value)\n        setAddCandidate(false)\n        setaddTestsToCandidate(true)\n    }\n\n    const closeTest =()=>{\n        setaddTestsToCandidate(false)\n    }\n\n    // here\n    const goToUserProfile = (username) =>{\n        console.log(username)\n        navigate(\"../user/\" + username, { replace: true })\n    }\n    \n    const [userInfo,setUserInfo] = useState([])\n    const [showUser, setShowUser] = useState(false);\n\n    let data = []\n    for (let i = 0; i<users.length; i++){\n        const testsDone = (users[i].tests || []).filter(test => test.testDone == true)\n        const sum = (testsDone|| []).reduce((accumulator, object) => {\n            return (accumulator + object.testScore)/testsDone.length;\n        }, 0);\n        console.log(sum)\n        data[i]={\n              username: users[i].username,\n              post: users[i].post,\n              status: users[i].status,\n              stack:users[i].stack,\n              score:sum\n          }\n    }\n\n    \n    console.log(data)\n\n    const classes = useStyles();\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n    };\n\n    const [orderDirection, setOrderDirection]= useState(\"desc\")\n    const [valueToOrderBy, setValueToOrderBy] = useState(\"score\")\n    \n\n    const handleRequestSort = (event,property) => {\n        const isAscending= (valueToOrderBy === property && orderDirection==='asc')\n        setValueToOrderBy(property)\n        setOrderDirection(isAscending ? 'desc': 'asc')\n    }\n\n    const createSortHandler = (property) => (event) => {\n        handleRequestSort(event, property)\n    }\n\n    function descendingComparator(a,b, orderBy){\n        if(b[orderBy] < a[orderBy]){\n            return -1\n        }\n        if(b[orderBy] > a[orderBy]){\n            return 1\n        }\n        return 0\n    }\n    function getComparator(order, orderBy){\n        return order ===\"desc\"\n        ? (a,b) => descendingComparator(a,b, orderBy)\n        : (a,b) => -descendingComparator(a,b,orderBy)    \n    }\n    const sortedRowInformation =(rowArray, comparator) => {\n        const stabilizedArray = rowArray.map((el,index) => [el,index])\n        stabilizedArray.sort((a,b) => {\n            const order = comparator(a[0],b[0])\n            if(order !==0) return order\n            return a[1] - b[1]\n        })\n        return stabilizedArray.map((el)=>el[0])\n    }\n    return <div>\n        <Container className= \"w-100\" >\n            <Row style={{height:\"80px\"}}></Row>\n            <Row style={{height:\"80px\"}}>\n            <Col xl={3} lg={4}  xs={5} className=\"d-flex align-items-center\"> <h3 className=\"h3\" style={{color:\"#FFCD4D\"}}> My candidates</h3></Col>\n            <Col xl={6} lg={4}   xs={2} > </Col>\n            <Col xl={3} lg={4}  xs={5} className=\"d-flex align-items-center justify-content-end\" >\n            <Button class=\"btn btn-lg btn-primary login\" onClick={()=>setAddCandidate(true)}>Add candidate</Button>\n            \n            \n            <Modal show={addCandidate}>\n                \n                \n                <Modal.Header> <Button onClick={()=>setAddCandidate(false)}> X </Button> </Modal.Header>\n                <Modal.Body> <AddCandidate candidateAdded = {addedCandidate} /> </Modal.Body>\n                <Modal.Footer> </Modal.Footer>\n            \n            </Modal>\n\n            <Modal show={addTestsToCandidate} size=\"xl\">\n            \n                <Modal.Body> <AddTestsToCandidate closeTest={closeTest} candidateUserName={candidateUserName}/> </Modal.Body>\n            \n            </Modal>\n\n\n\n            </Col>\n            </Row>\n            <Row>\n            \n            <TableContainer component={Paper} className={classes.tableContainer}>\n                    <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                        <TableHead>\n                        <TableRow>\n                            <TableCell key=\"username\" > \n                                <TableSortLabel\n                                active={valueToOrderBy ===\"username\"}\n                                direction={valueToOrderBy == \"username\" ? orderDirection:'desc'}\n                                onClick={ createSortHandler(\"username\")}\n                                > Username \n                                </TableSortLabel>\n                            </TableCell>\n                            <TableCell >Post</TableCell>\n                            <TableCell >Status</TableCell>\n                            <TableCell >\n                            <TableSortLabel key=\"score\"\n                                active={valueToOrderBy ===\"score\"}\n                                direction={valueToOrderBy == \"score\" ? orderDirection:'desc'}\n                                onClick={createSortHandler(\"score\")}\n                                > Score\n                                </TableSortLabel>\n                            </TableCell>\n                            <TableCell >Stack</TableCell>\n                        </TableRow>\n                        </TableHead>\n                        <TableBody>\n                        {\n                            \n                            sortedRowInformation(data, getComparator(orderDirection, valueToOrderBy))\n                            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                            .map((row) => (\n                            <TableRow key={row.username}>\n                                <TableCell style={{fontWeight:500}} onClick={ ()=>goToUserProfile(row.username)}>{row.username}</TableCell>\n                                <TableCell>{row.post}</TableCell>\n                                <TableCell className={classes.status}>\n                                <div> <div style={{\n                                        backgroundColor: \n                                        ((row.status === 'hired' && 'green') ||\n                                        (row.status === 'Tests finished' && 'blue') ||\n                                        (row.status === 'Test sent' && 'orange')),\n                                        width:\"10px\",\n                                        height:\"10px\",\n                                        borderRadius: \"10px\",\n                                        float:\"left\",\n                                        marginTop:\"5px\"\n                                    }}> </div>  <div  style={{float:\"left\", marginLeft:\"5px\"}}> {row.status} </div></div>\n                                </TableCell>\n                                <TableCell>{row.score} %</TableCell>\n                                <TableCell>{row.stack.map((item)=><Badge style={{marginLeft:\"10px\"}} key={item}> {item} </Badge> )}</TableCell>\n                            </TableRow>\n                        ))}\n                        </TableBody>\n                        <TableFooter>\n                        <TablePagination\n                            rowsPerPageOptions={[5, 10, 15]}\n                            component=\"div\"\n                            count={data.length}\n                            rowsPerPage={rowsPerPage}\n                            page={page}\n                            onChangePage={handleChangePage}\n                            onChangeRowsPerPage={handleChangeRowsPerPage}\n                        />\n                        </TableFooter>\n                    </Table>\n                    </TableContainer>\n            </Row>\n        </Container>\n    </div>\n}\n\nexport default CandidatesList","import React from 'react';\nimport '../styles/styles.css'\nimport {useMoralis} from 'react-moralis'\nimport  { Navigate } from 'react-router-dom'\nimport ProfileBar from '../components/ProfileBar';\nimport CandidatesList from '../components/CandidatesList';\nfunction Candidates() {\n\n    const {isAuthenticated}=useMoralis();\n    if(isAuthenticated){\n    return <div>\n\n        <ProfileBar/>\n        <CandidatesList />\n    </div>\n    }\n    return <Navigate to=\"/\"/>\n}\n\nexport default Candidates;\n","import React from 'react';\nimport {Button, Form, Input} from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {useState} from 'react'\nimport {useMoralis, useNewMoralisObject, useMoralisQuery} from \"react-moralis\";\nimport  { Navigate } from 'react-router-dom'\nimport { ConstructorFragment } from '@ethersproject/abi';\nimport axios from \"axios\";\n\nconst MyAccountSettings = ()=>{\n    const { user, setUserData, isUserUpdating} = useMoralis();\n    const [userName,setUserName]=useState(user.get(\"username\"))\n    const [email,setEmail]=useState(user.get(\"email\"))\n    const [password,setPassword]=useState('')\n\n    const [website, setWebsite] = useState(\"Don't have\");\n\n    const getWebsiteData = () => {\n        axios.get(\"/getUsers\").then((response)=>{\n            console.log(response.data)\n        })\n        .catch(error => console.error(error))\n    }\n    return <div>\n        <div className=\"d-grid gap-3 myAccountSettings\">\n            <h1 className=\"titleCenter h4\"> {user.get(\"username\")}'s account</h1>\n            <hr/>\n            <Form className=\"d-grid gap-3 \"> \n            <Form.Group>\n                <Form.Label>User name</Form.Label>\n                <Form.Control value={userName} onChange={(event)=> setUserName(event.currentTarget.value)}></Form.Control>\n            </Form.Group>\n            <Form.Group>\n                <Form.Label>Email</Form.Label>\n                <Form.Control value={email} onChange={(event)=> setEmail(event.currentTarget.value)}></Form.Control>\n            </Form.Group>\n            <Form.Group>\n                <Form.Label>Password</Form.Label>\n                <Form.Control type=\"password\" value={password} onChange={(event)=> setPassword(event.currentTarget.value)}></Form.Control>\n            </Form.Group>\n            <Button onClick={() => setUserData({\n        username: userName,\n        email: email,\n        password: password === \"\" ? undefined : password,\n      })}\n      disabled={isUserUpdating} class=\"w-100 btn btn-lg btn-primary login\" >Save </Button>\n            </Form>\n            \n        </div>\n   \n   \n   </div>\n}\n\nexport default MyAccountSettings","import React from 'react';\nimport {Button, Container, Row, Col, Grid, Form, Card,Alert} from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {useMoralis} from 'react-moralis'\nimport {useState, useEffect, useRef} from 'react'\nimport  { Navigate } from 'react-router-dom'\nimport axios from \"axios\";\nimport TestCard from '../TestCard.jsx';\nimport Resizer from \"react-image-file-resizer\";\nvar qs = require('qs');\n\nconst AddQuestionToTest = (props)=>{\n    useEffect(() => {\n      console.log(\"----=> O\")\n      console.log(props.categories)\n    }, []);\n\n    const inputRef = useRef(null);\n    const [categories,setCategories] = useState(props.categories)\n    const [categoryChosen,setCategoryChosen] = useState('')\n    const [question,setQuestion] = useState()\n    const [image,setImage] = useState()\n\n    const [answer1,setAnswer1]=useState()\n    const [answer1IsCorrect,setAnswer1IsCorrect]=useState('false')\n\n    const [answer2,setAnswer2]=useState()\n    const [answer2IsCorrect,setAnswer2IsCorrect]=useState('false')\n\n    const [answer3,setAnswer3]=useState()\n    const [answer3IsCorrect,setAnswer3IsCorrect]=useState('false')\n\n    const [answer4,setAnswer4]=useState()\n    const [answer4IsCorrect,setAnswer4IsCorrect]=useState('false')\n    const [questionAdded,setQuestionAdded] = useState(false)\n\n    const convertToBase64 = (file) => {\n        return new Promise((resolve, reject) => {\n          const fileReader = new FileReader();\n          fileReader.readAsDataURL(file);\n          fileReader.onload = () => {\n            resolve(fileReader.result);\n          };\n          fileReader.onerror = (error) => {\n            reject(error);\n          };\n        });\n      };\n\n\n    const resizeFile = (file) =>\n      new Promise((resolve) => {\n          Resizer.imageFileResizer(\n          file,\n          400,\n          400,\n          \"JPEG\",\n          80,\n          0,\n          (uri) => {\n              resolve(uri);\n          },\n          \"base64\"\n          );\n      });\n\n    async function fileSelectedHandler(event){\n        const file = event.target.files[0];\n        const base64 = await resizeFile(file);\n        setImage(base64);\n    }\n    const addQuestions = (event) => {\n        var data = qs.stringify({image:image})\n        const bodyData={\n            testId:props.testSelectedId,\n            question:question,\n            answer1:answer1,\n            answer1IsCorrect:answer1IsCorrect,\n            answer2:answer2,\n            answer2IsCorrect:answer2IsCorrect,\n            answer3:answer3,\n            answer3IsCorrect:answer3IsCorrect,\n            answer4:answer4,\n            answer4IsCorrect:answer4IsCorrect,\n            category:categoryChosen,\n        }\n        console.log(image)\n        console.log(data)\n        console.log(categoryChosen)\n\n        axios.post(\"/addQCMQuestionToTest\", data,{params:bodyData})\n            .then(function (response) {\n              //handle success\n              console.log(response);\n              setQuestion('')\n              setAnswer1('')\n              setAnswer2('')\n              setAnswer3('')\n              setAnswer4('')\n              setAnswer4IsCorrect('')\n              setAnswer3IsCorrect('')\n              setAnswer2IsCorrect('')\n              setAnswer1IsCorrect('')\n              inputRef.current.value = null;\n\n            })\n            .catch(function (response) {\n              //handle error\n              console.log(response);\n            });\n        \n        \n    }\n\n\n    async function showQuestionAddedAlert(){\n      setQuestionAdded(true)\n      setTimeout(()=>setQuestionAdded(false), 3000);\n  }\n    return <div>\n    \n        <Container >\n\n    \n        <Form controlId=\"formEmail\" className=\"d-grid gap-3\">\n        <Form.Group className=\"d-grid gap-3\">\n            <Form.Control value={question} onChange={(event)=>setQuestion(event.currentTarget.value)} type=\"text\" placeholder=\"Question\"/>\n            <Form.Select aria-label=\"Default select example\" value={categoryChosen} onChange={(event)=> setCategoryChosen(event.currentTarget.value)}>\n              <option>Question category</option>\n              {categories?.map((category,index) =>(\n                <option>{categories[index]?.categoryName}</option>\n                \n            ))}\n            </Form.Select> \n                \n                <div style={{height:\"10px\"}}></div>\n                <p className=\"h6\"> Add an image to your question </p>\n                <input ref={inputRef} type=\"file\" onChange={fileSelectedHandler} />\n                <div style={{height:\"10px\"}}></div>\n                <Card style={{padding:'20px'}}>\n                <p className=\"h6\"> Response 1 </p>\n                <Form.Control value={answer1} onChange={(event)=>setAnswer1(event.currentTarget.value)} type=\"text\" placeholder=\"Answer\"/>\n                <Form.Select value={answer1IsCorrect} onChange={(event)=>setAnswer1IsCorrect(event.currentTarget.value)} type=\"text\">\n                <option>false</option>\n                <option>true</option>\n                </Form.Select>\n                </Card>\n\n                <Card style={{padding:'20px'}}>\n                <p className=\"h6\"> Response 2 </p>\n                <Form.Control value={answer2} onChange={(event)=>setAnswer2(event.currentTarget.value)} type=\"text\" placeholder=\"Answer\"/>\n                <Form.Select value={answer2IsCorrect} onChange={(event)=>setAnswer2IsCorrect(event.currentTarget.value)} type=\"text\">\n                <option>false</option>\n                <option>true</option>\n                </Form.Select>\n                </Card>\n\n                <Card style={{padding:'20px'}}>\n                <p className=\"h6\"> Response 3 </p>\n                <Form.Control value={answer3} onChange={(event)=>setAnswer3(event.currentTarget.value)} type=\"text\" placeholder=\"Answer\"/>\n                <Form.Select value={answer3IsCorrect} onChange={(event)=>setAnswer3IsCorrect(event.currentTarget.value)} type=\"text\">\n                <option>false</option>\n                <option>true</option>\n                </Form.Select>\n                </Card>\n\n                <Card style={{padding:'20px'}}>\n                <p className=\"h6\"> Response 4 </p>\n                <Form.Control value={answer4} onChange={(event)=>setAnswer4(event.currentTarget.value)} type=\"text\" placeholder=\"Answer\"/>\n                <Form.Select value={answer4IsCorrect} onChange={(event)=>setAnswer4IsCorrect(event.currentTarget.value)} type=\"text\">\n                <option>false</option>\n                <option>true</option>\n                </Form.Select>\n                </Card>\n\n        </Form.Group>\n\n        {questionAdded ? <Alert variant='primary' key='primary'>\n                                Question Added\n        </Alert>: <div></div>}\n\n        <Button class=\"w-100 btn btn-lg btn-primary login\" onClick={() => {\n            addQuestions()\n            showQuestionAddedAlert()\n        }\n        }>Add new question</Button>\n        </Form>\n        <div style={{height:\"50px\"}}></div>\n        </Container>\n    </div>\n}\n\nexport default AddQuestionToTest","import React from 'react';\nimport {Button, Container, Row, Col, Grid, Form, Card, InputGroup, ListGroup, Alert} from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {useMoralis} from 'react-moralis'\nimport {useState, useEffect} from 'react'\nimport  { Navigate } from 'react-router-dom'\nimport axios from \"axios\";\nimport TestCard from '../TestCard.jsx';\nimport \"./style.css\"\n\n\nconst ChangeTestValues = (props)=>{\n    function makeid(length) {\n        var result           = '';\n        var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n        var charactersLength = characters.length;\n        for ( var i = 0; i < length; i++ ) {\n          result += characters.charAt(Math.floor(Math.random() * \n     charactersLength));\n       }\n       return result;\n    }\n\n    const [listOfQuestionsToDelete,setListOfQuestionsToDelete] = useState([])\n    const [qcmQuestionsList,setqcmQuestionsList] = useState(props.qcmQuestionsList)\n    const [smallDescription,setSmallDescription] = useState(props.smallDescription)\n    const [longDescription,setLongDescription] = useState(props.longDescription)\n    const [difficulty,setDifficulty] = useState(props.difficulty)\n    const [nbOfQuestions,setNbOfQuestions] = useState(props.nbOfQuestions)\n    const [durationInMinutes,setDurationInMinutes] = useState(props.durationInMinutes)\n    const [categories,setCategories] = useState(props.categories)\n    const [addCategories,setAddCategories] = useState(false)\n    const [newCategoryName,setNewCategoryName] = useState(\"\")\n    const [newCategoryNbOfIterations,setNewCategoryNbOfIterations] = useState(\"\")\n    const [testModified,setTestModified] = useState(false)\n    const modifyTest = () => {\n        const bodyFormData = {\n            testId:\"ImUTHOzq6tW5D4ewMBbkcVkm\",\n            smallDescription:smallDescription,\n            longDescription: longDescription,\n            difficulty: difficulty,\n            nbOfQuestions: nbOfQuestions,\n            durationInMinutes: durationInMinutes,\n            categories:categories,\n            listOfQuestionsToDelete:listOfQuestionsToDelete\n        }\n        console.log(\"Salut\")\n        axios.post(\"/modifyTest\", null, {params:bodyFormData})\n                .then(function (response) {\n                //handle success\n                console.log(response);\n                })\n                .catch(function (response) {\n                //handle error\n                console.log(response);\n                });   \n    }\n    const handleMaxIterationChange = (e,idx) => {\n        const clone = [...categories];\n        let obj = clone[idx];\n        obj.maxIterationPerTest = e.target.value;\n        clone[idx] = obj;\n        setCategories([...clone])\n    }\n\n    const handleCategoryChange = (e,idx) => {\n        const clone = [...categories];\n        let obj = clone[idx];\n        obj.categoryName = e.target.value;\n        clone[idx] = obj;\n        setCategories([...clone])\n    }\n\n    async function showTestModifiedAlert(){\n        setTestModified(true)\n        setTimeout(()=>setTestModified(false), 3000);\n    }\n\n\n    return <div>\n        <Container >\n        <Form controlId=\"formEmail\" className=\"d-grid gap-3\">\n        <Form.Group className=\"d-grid gap-3\">\n        <InputGroup>\n        <InputGroup.Text>Small Description</InputGroup.Text>\n        <Form.Control value= {smallDescription} as=\"textarea\" aria-label=\"With textarea\" onChange={(event)=>setSmallDescription(event.currentTarget.value)} />\n        </InputGroup>\n\n        <InputGroup>\n        <InputGroup.Text>Long Description</InputGroup.Text>\n        <Form.Control value= {longDescription} as=\"textarea\" onChange={(event)=>setLongDescription(event.currentTarget.value)} aria-label=\"With textarea\" />\n        </InputGroup>\n        \n        <InputGroup>\n        <InputGroup.Text>Difficulty</InputGroup.Text>\n        <Form.Control value = {difficulty} onChange={(event)=>setDifficulty(event.currentTarget.value)} type=\"email\"/>\n        </InputGroup>\n\n        <InputGroup>\n        <InputGroup.Text>Number of questions</InputGroup.Text>\n        <Form.Control value = {nbOfQuestions} onChange={(event)=>setNbOfQuestions(event.currentTarget.value)} type=\"email\"/>\n        </InputGroup>\n\n        <InputGroup>\n        <InputGroup.Text>Time in minutes</InputGroup.Text>\n        <Form.Control value = {durationInMinutes} onChange={(event)=>setDurationInMinutes(event.currentTarget.value)} type=\"email\"/>\n        </InputGroup>\n        \n\n        <div style={{height:\"20px\"}}></div>\n        <Row>\n        <Col xs={7} className=\"h6\" style={{color:\"#FFCD4D\"}}> Category</Col>\n        <Col xs={5} className=\"h6\" style={{color:\"#FFCD4D\"}}> Max nb of iterations</Col>\n        </Row>\n        {categories?.map((category,index) =>(\n            <Row>\n            <Col xs={7}>\n            <div className=\"h5\">{categories[index]?.categoryName}</div> \n            </Col> \n\n            <Col xs={3}>\n            <Form.Control value = {categories[index]?.maxIterationPerTest} onChange= {(e)=>handleMaxIterationChange(e,index)} type=\"text\"/> \n            </Col> \n            </Row>\n            \n        ))}\n        {!addCategories ? <Button className=\"w-25 btn btn-sm btn-primary login\" onClick={() => {\n                    setAddCategories(true)\n                }\n                }>Add category </Button>\n        : <Row>\n            <Col xs={7}>\n            <Form.Control value = {newCategoryName} onChange={(event)=>setNewCategoryName(event.currentTarget.value)} type=\"text\"/> \n            </Col> \n\n            <Col xs={3}>\n            <Form.Control value = {newCategoryNbOfIterations} onChange={(event)=>setNewCategoryNbOfIterations(event.currentTarget.value)} type=\"text\"/> \n            </Col> \n            <Col xs={2}>\n            <Button class=\"w-25 btn btn-sm btn-primary login\" onClick={() => {\n                    setCategories(current => [...current, {\n                        _id:makeid(24),\n                        categoryName:newCategoryName,\n                        maxIterationPerTest:newCategoryNbOfIterations,\n                    }]);\n                    setAddCategories(false)\n                }\n                }>+</Button>\n            </Col> \n            </Row>\n        \n        }\n\n        <div style={{height:\"10px\"}}></div>\n        <Container className=\"scrollable-div\">\n        <Row>\n        <Col xs={7} className=\"h6\" style={{color:\"#FFCD4D\"}}> Questions</Col>\n        <Col xs={3} className=\"h6\" style={{color:\"#FFCD4D\"}}> Category</Col>\n        </Row>\n        {\n            qcmQuestionsList?.map((q,index) =>(\n            <Row>\n            <div style={{height:\"10px\"}}></div>\n                <Col xs={7} style={{fontWeight:\"500\"}}>\n                    {qcmQuestionsList[index]?.question}\n                </Col>\n                <Col xs={3} style={{fontSize:\"12px\"}}>\n                    {qcmQuestionsList[index]?.questionCategory}\n                </Col>\n                <Col xs={2} style={{fontSize:\"12px\"}} onClick={()=>{\n                    setqcmQuestionsList(qcmQuestionsList.filter(item => item.question !== qcmQuestionsList[index]?.question))\n                    setListOfQuestionsToDelete(oldArray => [...oldArray, qcmQuestionsList[index]?._id])\n                }}>\n                <button>❌</button>\n                </Col>\n            </Row>\n\n            )\n            )\n\n        }\n        </Container>\n\n        <div style={{height:\"10px\"}}></div>\n\n        {testModified ? <Alert variant='primary' key='primary'>\n                                Test Modified\n        </Alert>: <div></div>}\n\n        <Button class=\"w-100 btn btn-lg btn-primary login\" onClick={() => {\n            showTestModifiedAlert()\n            modifyTest()\n        }\n        }>Save my modifications </Button>\n        </Form.Group>\n        </Form>\n        <div style={{height:\"50px\"}}></div>\n        \n        <div style={{height:\"50px\"}}></div>\n        </Container>\n    </div>\n}\n\nexport default ChangeTestValues","import React from 'react';\nimport {Button, Container, Row, Col, Grid, Alert} from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {useMoralis} from 'react-moralis'\nimport {useState, useEffect} from 'react'\nimport  { Navigate } from 'react-router-dom'\nimport { flushSync } from 'react-dom';\nimport axios from \"axios\";\nimport TestCard from '../TestCard.jsx';\nimport AddQuestionToTest from './AddQuestionToTest.jsx';\nimport ChangeTestValues from './ChangeTestValues.jsx';\n\n\nconst ModifyTest = ()=>{\n\n    const {user, isAuthenticated}=useMoralis();\n\n    useEffect(() => {\n        getTests()\n        console.log(\"==> ICI\")\n      }, []);\n    const [tests, setTests] = useState([]);\n    \n    const [testSelectedName, setTestSelectedName] = useState();\n    const [modifyState, setModifyState] = useState();\n    const [testSelectedType, setTestSelectedType] = useState();\n    const [testSelectedId, setTestSelectedId] = useState();\n    const [testData,setTest] = useState({})\n    const [qcmQuestionsList, setQcmQuestionsList] = useState([{\n        testName:\"\"\n    }])\n\n\n\n    const getTests = () => {\n        axios.get(\"/getTests\").then((response)=>{\n            setTests(response.data)\n        })\n        .catch(error => console.error(error))\n    }\n\n\n    \n    async function addNewQuestion(name,id,typeOfTest){\n        axios.get(\"/getTestByID\", {params: {id:id}}).then((response)=>{\n            setTest(response.data)\n            setTestSelectedName(name);\n            setTestSelectedId(id)\n            setTestSelectedType(typeOfTest);\n            setModifyState(\"addNewQuestion\")\n            console.log(response.data.categories)\n            return response.data\n        })\n        .catch(error => console.error(error))\n    }\n    async function changeTest(name,id,typeOfTest){\n        console.log(\"yep\")\n        axios.get(\"/getTestByID\", {params: {id:id}}).then((response)=>{\n            axios.get(\"/getAllQuestionsForOneQCM\", {params: {id:id}}).then((allquestions)=>{\n                setTest(response.data)\n                setQcmQuestionsList(allquestions.data)\n                setTestSelectedId(id)\n                setTestSelectedName(name);\n                setTestSelectedType(typeOfTest);\n                setModifyState(\"change\")\n                return allquestions.data\n            })\n            return response.data\n        })\n        .catch(error => console.error(error))\n    }\n\n    var leftWindow = () => {\n        if(testSelectedType==\"QCM\" & modifyState==\"addNewQuestion\"){\n            return <AddQuestionToTest testSelectedId={testSelectedId} categories= {testData.categories}/> \n        }\n        else if(testSelectedType==\"QCM\" & modifyState==\"change\"){\n            return <div>\n            \n            <ChangeTestValues testSelectedId={testSelectedId}\n                smallDescription = {testData.smallDescription}\n                longDescription = {testData.longDescription}\n                difficulty = {testData.difficulty}\n                durationInMinutes = {testData.durationInMinutes}\n                nbOfQuestions = {testData.nbOfQuestions}\n                categories= {testData.categories}\n                qcmQuestionsList={qcmQuestionsList}\n            />\n            \n            </div>\n        }\n        else if(testSelectedType!=\"QCM\" & modifyState==\"addNewQuestion\"){\n            return <div style={{color:\"black\", fontWeight:400, fontSize:\"16px\"}}> Not possible to add coding questions for now </div>\n        }\n        else{\n            return <div></div>\n        }\n\n    }\n\n    return <div>\n    {user.get('typeOfUser')==='Admin' ? \n        <Container className=\"d-flex justify-content-center\">\n        \n            <Row>\n                <Col lg={6} xs={12}>\n\n                    <Container >\n                <Row  className=\"d-flex justify-content-left\">\n                    {tests.map(cardInfo =>(\n                        <Col lg={6} sm={12} >\n                        <TestCard cardWidth='16rem' textSize=\"12px\" buttonChangeIsVisible=\"true\" buttonModifyIsVisible=\"true\" changeTest={changeTest} modifyTest={addNewQuestion} hideMin=\"true\" name={cardInfo.name} key={cardInfo._id} id={cardInfo._id} nbOfQuestions={cardInfo.nbOfQuestions} duration={cardInfo.durationInMinutes} longDescription={cardInfo.longDescription} smallDescription={cardInfo.smallDescription} typeOfTest={cardInfo.typeOfTest}/>\n                        <div style={{height:\"20px\"}}></div>\n                        </Col>\n                    ))}\n                </Row>\n                </Container>\n                </Col>\n\n                <Col lg={6} xs={12}>\n                    <Container >\n                        <Row  className=\"d-flex justify-content-left\">\n                            <h2 style={{color:\"#FFCD4D\", fontWeight:600, fontSize:\"20px\"}} > {testSelectedName}</h2>\n                            <div style={{height:\"30px\"}}></div>\n                    \n                            {leftWindow()}\n\n                            \n                        </Row>\n                </Container>\n                </Col>\n\n\n            </Row>\n        </Container>\n        : <div className=\"d-flex align-items-center justify-content-center h5\" style={{color:\"red\"}}> You are not an admin, you can't modify the tests </div>\n    }\n    </div>\n}\n\nexport default ModifyTest","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport Signin from '../components/Signin.jsx';\nimport Signup from '../components/Signup.jsx';\nimport {useMoralis} from 'react-moralis'\nimport {Button, Form, Container, Col, Row, Badge, Nav, ListGroup, Link} from 'react-bootstrap'\nimport {useState, useEffect} from 'react'\nimport  { Navigate } from 'react-router-dom'\nimport MyAccountSettings from '../components/adminPanel/MyAccountSettings'\nimport ModifyTest from '../components/adminPanel/ModifyTest.jsx';\nimport '../styles/styles.css'\n\nfunction Settings() {\n    const {user, isAuthenticated, logout}=useMoralis();\n\n    const [pageState,setPageState]= useState(\"userManagement\")\n    if(isAuthenticated){\n\n\n       return <div class=\"\">\n       <div className=\"userMenue\">\n            <Nav variant=\"tabs\" activeKey={pageState} style={{marginLeft:\"5%\"}}>\n                <Nav.Item>\n                    <Nav.Link eventKey=\"userManagement\" title=\"userManagement\" onClick={()=>setPageState(\"userManagement\")}>User Management</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                    <Nav.Link eventKey=\"modifyTests\" title=\"modifyTests\" onClick={()=>setPageState(\"modifyTests\")}>Modify tests</Nav.Link>\n                </Nav.Item>\n            </Nav>\n        </div>\n        <div style={{height:\"100px\"}}></div>\n        <Container>{pageState===\"userManagement\" ? \n       \n        <Row>\n            <Col sm={5}>\n            <MyAccountSettings />\n            </Col>\n            <Col sm={2}> </Col>\n            <Col sm={5}>\n            <Signup/>\n            </Col>\n        </Row>:\n       <Row>\n       <ModifyTest/>\n       </Row>\n       \n        }</Container>\n\n       </div>\n    }\n\n    return <Navigate to=\"/\"/>\n\n}\n\nexport default Settings;","import React from 'react';\nimport {Button, Container, Row, Col, Grid} from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport Signin from '../components/Signin.jsx';\nimport Signup from '../components/Signup.jsx';\nimport {useMoralis} from 'react-moralis'\nimport {useState, useEffect} from 'react'\nimport  { Navigate } from 'react-router-dom'\nimport axios from \"axios\";\nimport TestCard from '../components/TestCard.jsx';\n\nfunction Tests() {\n    useEffect(() => {\n        getTests()\n        console.log(\"ok\")\n      }, []);\n    const [tests, setTests] = useState([]);\n    \n\n    const getTests = () => {\n        axios.get(\"/getTests\").then((response)=>{\n            setTests(response.data)\n            console.log(response.data)\n        })\n        .catch(error => console.error(error))\n    }\n\n    const {isAuthenticated, logout}=useMoralis();\n\n    if(isAuthenticated){\n       return <div>\n       <div style={{height:\"100px\"}}></div>\n       <Container className=\"d-flex justify-content-center\">\n       <Row>\n        {tests.map(cardInfo =>(\n            <Col lg={4} sm={6} xs={12}>\n            <TestCard  cardWidth='18rem' textSize=\"13px\" name={cardInfo.name} nbOfQuestions={cardInfo.nbOfQuestions} duration={cardInfo.durationInMinutes} longDescription={cardInfo.longDescription} smallDescription={cardInfo.smallDescription} typeOfTest={cardInfo.typeOfTest}/>\n            </Col>\n        ))}\n        </Row>\n        </Container>\n       </div>\n    }\n\n    return <Navigate to=\"/\"/>\n\n}\n\nexport default Tests;","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {useState} from 'react'\nimport {useMoralis} from \"react-moralis\";\nimport {Button, Form, Container, Col, Row, Badge} from 'react-bootstrap'\nimport '../styles/styles.css'\n\nconst UserProfileBar = (props)=>{\n    const testsDone = (props.tests || []).filter(test => test.testDone == true)\n    const sum = (testsDone|| []).reduce((accumulator, object) => {\n        return (accumulator + object.testScore)/testsDone.length;\n      }, 0);\n    console.log(sum)\n\n    const userStack = props.stack\n    \n    return <div className= \"profileBar\">\n        <Container className= \"w-100\">\n            <Row >\n                <Col xl={6} lg={6}  sm={7} xs={7} className=\"regularCol titleProfile\"> \n                    <div>\n                    <Row ><h3 className=\"h3\"> {props.username} </h3> </Row>\n                    <Row> <div className=\"p\"> <span style={{color:\"#FFCD4D\", fontWeight:600, fontSize:props.titleSize}}> Post : </span> {props.post} </div></Row>\n                    <div style={{height:\"5px\"}}></div>\n                    <Row> <div> <span style={{color:\"#FFCD4D\", fontWeight:600, fontSize:props.titleSize}}> Stack : </span> {userStack && userStack.map((item) => <Badge style={{marginLeft:\"10px\"}} key={item}> {item} </Badge> )} </div></Row>\n                    <div style={{height:\"5px\"}}></div>\n                    <Row> <div className=\"p\">  <span style={{color:\"#FFCD4D\", fontWeight:600, fontSize:props.titleSize}}> Seniority : </span>  {props.seniority} </div></Row>\n                    </div>\n                    \n                    \n                </Col>\n                <Col xl={4} lg={4}  sm={2} xs={2} className=\"regularCol\"> </Col>\n                <Col xl={2} lg={2}  sm={3} xs={3} className=\"regularCol titleProfile\"> \n                    <div>\n                    <Row ><h1 className=\"h1 d-flex align-items-center justify-content-center\" style={{color:\"#FFCD4D\", fontWeight:800}} > {Math.round(sum)}% </h1> </Row>\n                    <Row> <div className=\"p\" >Total score  </div></Row>\n                    <div style={{height:\"5px\"}}></div>\n                    </div>\n                    \n                    \n                </Col>\n            </Row>\n        </Container>\n    </div>\n}\n\nexport default UserProfileBar","import React from 'react';\nimport {Button, Form, Card, Badge, Modal, Container, ProgressBar} from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {useMoralis} from 'react-moralis'\nimport {useState, useEffect} from 'react'\nimport  { Navigate } from 'react-router-dom'\nimport '../styles/test.css'\nimport { BsSearch } from \"react-icons/bs\";\n\nfunction SkillCard(props) {\n    \n    const now = props.cardInfo.testScore;\n\n    return  <div>\n\n            \n       <Card style={{ width: \"16rem\"}} className=\"testCard\" >\n            <Card.Body>\n                <div style={{height:\"10px\"}}></div>\n                <Card.Title style={{color:\"#FFCD4D\", fontWeight:600, fontSize:\"18px\"}}> {props.cardInfo.testName}</Card.Title>\n                <Card.Text style={{fontWeight:300, fontSize: \"12px\"}}>\n                <span style={{fontWeight:\"600\"}}>{props.username}</span> optained <span style={{fontWeight:\"600\"}}>{now}</span>  % in this test\n                <div style={{height:\"15px\"}}></div>\n                <ProgressBar variant=\"primary\" now={now} label={`${now}%`} />\n                </Card.Text>\n                <div className=\"d-flex justify-content-end d-grid gap-2\">\n                \n                </div>\n            </Card.Body>\n        </Card>\n        </div>\n        \n    }\n\n\n\nexport default SkillCard;","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {useState, useEffect, useRef} from 'react'\nimport {useMoralis} from \"react-moralis\";\nimport {Button, Form, Container, Col, Row, Badge} from 'react-bootstrap'\nimport '../styles/styles.css'\nimport Webcam from \"react-webcam\";\nimport SkillCard from './SkillCard';\n\nconst UserSkills = (props)=>{\n    const testsDone= props.tests.filter(test => test.testDone == true)\n    console.log(testsDone)\n    return <div style={{backgroundColor:\"#282c34\", height:\"80vh\", marginTop:\"3px\" }}>\n    <div style={{height:\"50px\"}}>\n    </div>\n\n    <Container >\n    {testsDone.map(cardInfo =>(\n            <Col lg={4} sm={6} xs={12}>\n            <SkillCard cardInfo={cardInfo} username={props.username}/>\n            </Col>\n        ))}\n        </Container>\n    </div>\n}\n\nexport default UserSkills","const defaultTheme = {\n    border: '0px solid #FFCD4D',\n    borderRadius: \"6px\",\n    fontWeight:\"800px\",\n    primaryFont: `-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif`,\n    primaryFontColor: '#282c34',\n    treeBackgroundColor: '#282c34',\n    disabledTreeOpacity: 0.8,\n    headingFont: `-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif`,\n    headingFontColor: 'black',\n    headingFontSize: '24px',\n    headingHoverColor: '#35373b',\n    headingHoverColorTransition: 'background 0.3s ease-out',\n    tooltipBackgroundColor: 'white',\n    tooltipFontColor: '#282c34',\n    tooltipZIndex: 99999,\n    nodeBackgroundColor: '#282c34',\n    nodeBorderColor: 'white',\n    nodeAlternativeFontColor: '#282c34',\n    nodeAltenativeActiveFontColor: '#282c34',\n    nodeOverlayColor: 'white',\n    nodeAlternativeActiveBackgroundColor: `\n    linear-gradient(\n      to right,\n      #b9e562 0%,\n      #41e2bd 50%,\n      #c284d8 100%\n    )`,\n    nodeActiveBackgroundColor: \"white\",\n    nodeHoverBorder: '4px solid ',\n    nodeHoverBorderColor: \"#6aeb87\",\n    nodeIconWidth: '64px',\n    nodeMobileTextNodeHeight: '32px',\n    nodeMobileTextNodeWidth: '108px',\n    nodeMobileFontSize: '14px',\n    nodeDesktopTextNodeHeight: '28px',\n    nodeDesktopTextNodeWidth: '144px',\n    nodeDesktopFontSize: '16px',\n    edgeBorder: '1px solid white',\n  };\n  \n  export type SkillTheme = typeof defaultTheme;\n  \n  export default defaultTheme;","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {useState, useEffect} from 'react'\nimport {useMoralis} from \"react-moralis\";\nimport {Button, Form, Container, Col, Row, Badge} from 'react-bootstrap'\nimport defaultTheme from './theme/index.ts';\nimport axios from \"axios\";\nimport '../styles/styles.css'\nimport  { Navigate, useNavigate } from 'react-router-dom'\nimport {\n    SkillTreeGroup,\n    SkillTree,\n    SkillProvider,\n    SkillType,\n    SkillGroupDataType,\n    SavedDataType\n  } from 'beautiful-skill-tree';\nimport { useParams } from \"react-router-dom\";\n\nconst UserTrack = (props)=>{\n  let navigate = useNavigate();\n  const {handle} = useParams()\n  useEffect(() => {\n    getTree()\n  },[]);\n\n  const getTree =  () => { \n    axios.get(\"/getUserTree\", {params: {username:handle}}).then((response)=>{\n        console.log(\"ICI\")\n        console.log(response.data)\n        setNodeState([response.data.nodeStates])\n        setUserTree([response.data.testTree])\n        return response.data\n    })\n    .catch(error => console.error(error))\n  }\n\n    const [userTree, setUserTree] = useState([{\n      id: 'item-one',\n      title: 'Coding basics',\n      tooltip: {\n        content:\n          'This node is the top most level, and will be unlocked, and ready to be clicked.',\n      },\n      children: [],\n    },])\n\n    const [nodeState,setNodeState]= useState([{}])\n    \n    const listOfTests = props.tests\n\n    const difference = (obj1, obj2) => {\n      let keyFound = false;\n      Object.keys(obj1).forEach(key => {\n         if(obj1[key] !== obj2[key]){\n            return keyFound = key;\n         }\n      });\n      return keyFound || -1;\n   };\n    function handleSave(\n      storage: ContextStorage,\n      treeId: string,\n      skills: SavedDataType\n    ) {\n      console.log(\"====> Clicked\")\n      console.log(skills)\n      console.log(nodeState[0])\n      var idOfText = difference(skills, nodeState[0])\n      var testToOpen = listOfTests.find(x => x._id === idOfText)\n      console.log(testToOpen)\n      if(testToOpen.testType===\"QCM\"){\n          if (!testToOpen.testDone){\n            console.log(\"ICI\")\n            navigate(\"../quiz/\"+testToOpen._id+\"/user/\"+props.userID, { replace: true });\n          }\n      }\n      else if (testToOpen.testType===\"Code\"){\n          if (!testToOpen.testDone){\n            console.log(\"Code\")\n            navigate(\"../codingTest/\"+testToOpen._id+\"/user/\"+props.userID, { replace: true });\n      }\n      }\n    }\n    var skilltree = () => {\n      if (Object.keys(nodeState[0]).length != 0 && Object.keys(userTree[0]).length != 0){\n        const savedData: SavedDataType = nodeState[0];\n        const data: SkillType[] = userTree\n        return <div> <SkillProvider  >\n        <SkillTreeGroup theme={defaultTheme}>\n            {() => {\n                  console.log(\"SAVED DATA \")\n                  console.log(savedData)\n                  console.log(data)\n                  return <SkillTree treeId=\"basic-birch\" title=\"\" data={data} savedData={savedData} handleSave={handleSave}/>\n\n            }}\n        </SkillTreeGroup>\n        </SkillProvider>\n        \n         </div>\n      }\n      else{\n        return <div style={{color:\"white\"}}></div>\n      }\n\n    \n    }\n    return <div >\n    <div  style={{backgroundColor: '#282c34'}}>\n            <Container style={{backgroundColor: '#282c34', marginTop:\"3px\", height:\"80vh\"}}>\n            \n            <div style={{backgroundColor: '#282c34', marginLeft:\"30%\", marginRight:\"30%\", borderRadius:\"10px\"}}>\n                <div className=\"h4\" style={{textAlign:\"center\", paddingTop:\"50px\", color:\"#FFCD4D\", zIndex: \"auto\"}}> Your skill tree </div>\n                \n            {skilltree()}\n            </div>\n            </Container>\n            </div>\n    </div>\n}\n\nexport default UserTrack","import React from 'react';\nimport '../styles/styles.css'\nimport {useMoralis} from 'react-moralis'\nimport  { Navigate } from 'react-router-dom'\nimport ProfileBar from '../components/ProfileBar';\nimport CandidatesList from '../components/CandidatesList';\nimport { useParams } from \"react-router-dom\";\nimport {useState, useEffect} from 'react'\nimport {Button, Form, Container, Col, Row, Badge, Nav} from 'react-bootstrap'\nimport UserProfileBar from '../components/UserProfileBar';\nimport UserSkills from '../components/UserSkills';\nimport UserTrack from '../components/UserTrack';\nimport axios from \"axios\";\nimport '../styles/styles.css'\n\n\nfunction User() {\n    const [userTree, setUserTree] = useState([{}])\n\n    useEffect(() => {\n        getUserTree()\n      },[]);\n\n    const [user, setUser] = useState([{}])\n\n    const [nodeStates, setNodeStates] = useState([{}])\n    const {handle} = useParams()\n    const {isAuthenticated, logout}=useMoralis();\n    \n    const getUser = () => {\n        axios.get(\"/getUserData\", {params: {username:handle}}).then((response)=>{\n            setUser(response.data)\n            return response.data\n        })\n        .catch(error => console.error(error))\n    }\n\n    const getUserTree = () => {\n        axios.get(\"/getUserTree\", {params: {username:handle}}).then((response)=>{\n            setNodeStates(response.data.nodeStates)\n            setUserTree(response.data.testTree)\n            console.log(response.data.testTree)\n            getUser()\n\n            return response.data\n        })\n        .catch(error => console.error(error))\n    }\n    const [pageState,setPageState]= useState(\"Track\")\n\n    return <div>\n    <UserProfileBar username={user.username} stack={user.stack} status={user.status} seniority={user.seniority} post={user.post} tests={user.tests}/>\n\n    <div className=\"userMenue\">\n            <Nav variant=\"tabs\" activeKey={pageState} style={{paddingLeft:\"5%\", backgroundColor:\"white\"}}>\n                <Nav.Item>\n                    <Nav.Link style={{color:\"#FFCD4D\"}} eventKey=\"Track\" title=\"Track\" onClick={()=>setPageState(\"Track\")}>Track</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                    <Nav.Link style={{color:\"#FFCD4D\"}} eventKey=\"Skills\" title=\"Skills\" onClick={()=>setPageState(\"Skills\")}>Skills</Nav.Link>\n                </Nav.Item>\n            </Nav>\n    </div>\n\n    <div className=\"userPageContent\">\n        {pageState===\"Track\" ? <UserTrack userTree={userTree} nodeStates={nodeStates} tests={user.tests} userID={user._id}/> : <UserSkills username={user.username} tests={user.tests} />}\n    </div>\n        \n       </div>\n}\nexport default User;\n","import React from 'react';\nimport {Button, Form, Card, Badge, Modal, Container,ListGroup} from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {useMoralis} from 'react-moralis'\nimport {useState, useEffect} from 'react'\nimport  { Navigate } from 'react-router-dom'\nimport '../styles/test.css'\nimport dayjs from \"dayjs\";\n\nconst defaultRemainingTime={\n    seconds:'00',\n    minutes:'00'\n}\n\nconst CountDownTimer = (props) =>{\n\n    const getRomainingTimeUntilMsTimeStamp = (timestampMs) =>{\n\n        const timestamDayjs= dayjs(timestampMs);\n        const nowDayjs = dayjs()\n        if(timestamDayjs.isBefore(nowDayjs)){\n            props.quizStep()\n            return {\n                seconds:'00',\n                minutes:'10'\n            }\n        }\n        return {\n            seconds:getRemainingSeconds(nowDayjs,timestamDayjs),\n            minutes:getRemainingMinutes(nowDayjs,timestamDayjs)\n        }\n    }\n\n    const getRemainingSeconds =(nowDayjs, timestamDayjs) =>{\n        const seconds = timestamDayjs.diff(nowDayjs,'seconds') % 60\n        return seconds\n\n    }\n    const getRemainingMinutes =(nowDayjs, timestamDayjs) =>{\n        const minutes = timestamDayjs.diff(nowDayjs,'minutes')\n        return minutes\n    }\n    const [remainintTime, setRemainingTime]= useState(defaultRemainingTime)\n\n    useEffect(()=>{\n        const intervalId = setInterval(()=>{\n            updateRemainingTime(props.countdownTimeStampMs);\n        },1000);\n        return ()=> clearInterval(intervalId);\n    },[props.countdownTimeStampMs])\n    function updateRemainingTime(countdown){\n        setRemainingTime(getRomainingTimeUntilMsTimeStamp(countdown));\n\n    }\n    return  <div style={{marginTop:\"20px\"}}>\n    <span style={{marginLeft:\"5px\"}}>{remainintTime.minutes}</span>\n    <span style={{marginLeft:\"2px\"}}>min</span>\n    <span style={{marginLeft:\"7px\"}}>{remainintTime.seconds}</span>\n    <span style={{marginLeft:\"2px\"}}>sec</span>\n        </div>\n        \n    }\n\nexport default CountDownTimer;","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {useState, useEffect, useRef, setRef} from 'react'\nimport {useMoralis} from \"react-moralis\";\nimport {Button, Form, Container, Col, Row} from 'react-bootstrap'\nimport '../styles/styles.css'\nimport CountDownTimer from './CountDownTimer';\nimport Webcam from \"react-webcam\";\nimport axios from 'axios';\nconst QuizHeader = (props)=>{\n    \n\n    const [imageArray,setImage] = useState([])\n    const quizStep =()=>{\n        props.finishQuiz()\n    }\n    var currentDate = new Date();\n    var datePlusxMin = new Date(currentDate.getTime() + (props.time*60*1000))\n    var xMinutesLater = datePlusxMin.getTime()\n    const user = props.user\n    const test = props.test\n    \n\n    useEffect(()=>{\n        capture()\n    },[])\n\n    const videoConstraints = {\n        width: 128,\n        height: 72,\n        facingMode: \"user\"\n        };\n        const webcamRef = React.useRef(null);\n        const capture = React.useCallback(\n          () => {\n            const imageSrc = webcamRef.current.getScreenshot();\n            console.log(imageSrc)\n            setImage(imageArray => [...imageArray, imageSrc]);\n          },\n          [webcamRef]\n        );\n    \n    return <div className= \"\">\n       <Row style={{backgroundColor:\"#F8F8F8\", borderRadius:\"10px\", paddingLeft:\"20px\", paddingTop:\"15px\", paddingBottom:\"15px\"}}>\n                <Col md={3} sm={4}>\n                    <a className=\"h4\" style={{color:\"#FFCD4D\"}} href={\"http://localhost:3000/user/\"+user.username}> {user.username}  </a> \n                    <p className=\"p\">Test : {test.name} </p>\n                </Col>\n                <Col md={2} sm={3}> \n                <Webcam\n                    style={{borderRadius:\"10px\"}}\n                    ref={webcamRef}\n                    audio={false}\n                    height={72}\n                    screenshotFormat=\"image/jpeg\"\n                    width={128}\n                    videoConstraints={videoConstraints}\n                />\n                </Col>\n                <Col md={5} sm={1}> \n                </Col>\n                <Col md={2} sm={4}> {props.launchTimer && <CountDownTimer countdownTimeStampMs={xMinutesLater} quizStep={quizStep}/>} </Col>\n        </Row>\n    </div>\n}\n\nexport default QuizHeader","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {useState} from 'react'\nimport {useMoralis} from \"react-moralis\";\nimport {Button, Form, Container, Col, Row} from 'react-bootstrap'\nimport '../styles/styles.css'\nimport { BsClock } from 'react-icons/bs';\nimport { BsCheckCircle } from 'react-icons/bs';\n\nimport {BsInfoCircle} from 'react-icons/bs';\n\n\nconst QuizStart = (props)=>{\n\n    const test = props.test\n    return <div>\n       <Row >\n            <Col sm={6}>\n                <Container>\n                    <Row className=\"gap-4\">\n                        <Col md={3}  style={{backgroundColor:\"#34323B\", borderRadius:\"10px\", padding:\"20px\"}} > \n                        <div className=\"d-flex justify-content-center\"><BsClock style={{color:\"white\"}} size={28} /> </div>\n                        <div className=\"d-flex justify-content-center\" style={{marginTop:\"10px\", color:'white'}}><p> {test.durationInMinutes} min</p></div>\n                        </Col>\n                        <Col md={3} style={{backgroundColor:\"#34323B\", borderRadius:\"10px\", padding:\"20px\"}} >\n                        <div className=\"d-flex justify-content-center\"><BsCheckCircle style={{color:\"white\"}} size={28}/> </div>\n                        <div className=\"d-flex justify-content-center\" style={{marginTop:\"10px\", color:'white'}}> <p> {test.typeOfTest} </p> </div>\n                        </Col>\n                        <Col md={3} style={{backgroundColor:\"#34323B\", borderRadius:\"10px\", padding:\"20px\"}} >\n                        <div className=\"d-flex justify-content-center\"> <BsInfoCircle style={{color:\"white\"}} size={28}/> </div>\n                        <div className=\"d-flex justify-content-center\" style={{marginTop:\"10px\", color:'white'}}><p > {test.nbOfQuestions} questions </p> </div>\n                        </Col>\n\n                    </Row>\n\n                </Container>\n            </Col>\n\n\n            <Col sm={6}>\n            <Container>\n                <Row style={{backgroundColor:\"#F8F8F8\", borderRadius:\"10px\", padding:\"20px\"}}>\n                <Col sm={12}>\n                <p style={{fontSize:\"15px\"}}>{test.longDescription}</p>\n                </Col>\n                </Row>\n                <Row >\n                <div style={{height:\"30px\"}}></div>\n                </Row>\n                <Row >\n                <Col lg={8}>\n                </Col>\n                <Col lg={4}>\n                <Button className= \"w-100\" onClick={props.quizStep}> Launch test</Button>\n                </Col>\n                </Row>\n                \n                </Container>\n            </Col>\n        </Row>\n    </div>\n}\n\nexport default QuizStart","import React from 'react';\nimport '../styles/styles.css'\nimport {useMoralis, MoralisProvider} from 'react-moralis'\nimport  { Navigate } from 'react-router-dom'\nimport ProfileBar from '../components/ProfileBar';\nimport CandidatesList from '../components/CandidatesList';\nimport { useParams } from \"react-router-dom\";\nimport {useState, useEffect} from 'react'\nimport {Button, Form, Container, Col, Row, Badge, Nav, ListGroup, Link} from 'react-bootstrap'\nimport axios from \"axios\";\nimport '../styles/quiz.css'\nimport QuizHeader from '../components/QuizHeader';\nimport QuizStart from '../components/QuizStart';\nimport Web3 from \"web3\";\n\nconst web3 = new Web3(Web3.givenProvider);\n\n\nfunction Quiz() {\n    const { authenticate, isAuthenticated, isAuthenticating, user, account, logout } = useMoralis();\n    const login = async () => { \n        if (!isAuthenticated) {\n        console.log(\"iiiiii\")\n        await authenticate({signingMessage: \"Log in using Moralis\" })\n            .then(function (user) {\n                console.log(\"oooooo\")\n                console.log(user)\n            })\n            .catch(function (error) {\n              console.log(error);\n            });\n        }\n      }\n  \n      const logOut = async () => {\n        await logout();\n        console.log(\"logged out\");\n      }\n\n    const sendTestHasBegun = () => {\n        const bodyFormData = {\n            testId:quizID,\n            testBegun:true,\n            userId:userID\n        } \n    }\n\n\n    const addTests = () =>{\n        const bodyFormData = {\n            testId:quizID,\n            testScore:((score*100)/questions.length),\n            userId:userID\n        }\n        axios.post(\"/addTestsResultsToUser\", null, {params:bodyFormData})\n                .then(function (response) {\n                //handle success\n                console.log(response);\n                })\n                .catch(function (response) {\n                //handle error\n                console.log(response);\n                });\n        }\n\n    const {quizID, userID} = useParams();\n\tconst [user1, setUser] = useState([{}])\n    const [test, setTest] = useState([{}])\n    const [testAlreadyBegun, setTestAlreadyBegun] = useState(false)\n    const [qcmQuestionList, setQcmQuestionList] = useState([{}])\n\tuseEffect(() => {\n        if (isAuthenticated) {\n           console.log(user)\n          }\n        getUser()\n        getTest()\n        getQuestions()\n      }, [isAuthenticated]);\n\n    const getUser = () => {\n        axios.get(\"/getUserByID\", {params: {id:userID}}).then((response)=>{\n            setUser(response.data)\n            let obj = response.data.tests.find(o => o._id === quizID);\n            if (obj.hasOwnProperty('testBegun')){\n                setTestAlreadyBegun(obj.testBegun)\n            }\n            return response.data\n        })\n        .catch(error => console.error(error))\n    }\n\n    const getTest = () => {\n        axios.get(\"/getTestByID\", {params: {id:quizID}}).then((response)=>{\n            setTest(response.data)\n\t\t\tconsole.log(response.data)\n            return response.data\n        })\n        .catch(error => console.error(error))\n    }\n\n    const getQuestions= () => {\n        axios.get(\"/getQCMTestQuestions\", {params: {id:quizID}}).then((response)=>{\n            setQcmQuestionList(response.data)\n            console.log(response.data)\n            return response.data\n        })\n        .catch(error => console.error(error))\n    }\n\n    const questions = qcmQuestionList\n\tconst [currentQuestion, setCurrentQuestion] = useState(0);\n\tconst [quizStep, setQuizStep ] = useState(\"Start\");\n\tconst [score,setScore] = useState(0);\n\n\tconst handlseAnswerButtonClick = (isCorrect) =>{\n        console.log(\"ok\")\n        \n\t\tif(isCorrect===true){\n\t\t\tconst newScore= score+1\n\t\t\tsetScore(Math.round(newScore))\n\t\t}\n\t\tconst nextQuestion = currentQuestion+1;\n\t\tif(nextQuestion< questions.length){\n\t\t\tsetCurrentQuestion(nextQuestion)\n\t\t} else{\n\t\t\tsetQuizStep(\"End\")\n            addTests()\n            // add score to user\n\t\t}\n\t}\n\n    const [quizState,setQuizState]= useState()\n    const changeQuizStep = () => {\n        const bodyFormData = {\n            testId:quizID,\n            userId:userID\n        }\n        axios.post(\"/testBegun\", null, {params:bodyFormData})\n                .then(function (response) {\n                //handle success\n                const rep = response;\n                })\n                .catch(function (response) {\n                //handle error\n                console.log(response);\n                });\n        setQuizStep(\"Ongoing\")\n        setlaunchTimer(true)\n        console.log(launchTimer)\n        setTime(test.durationInMinutes)\n    }\n\n    const finishQuiz = () =>{\n        setQuizStep(\"End\")\n        addTests()\n        // add score to user\n\n    }\n\n    const [time,setTime] =useState()\n    const [launchTimer,setlaunchTimer]= useState(false)\n\n    return (<div className='app'>\n\n    \n    \n\n    {(()=> {\n\n        if(quizStep === \"End\"){\n            return(\n                <Container >\n            <div style={{height:\"200px\"}}></div>\n            <div >\n            <div className='score-section d-flex justify-content-center'>You scored {score} out of {questions && questions.length}</div>\n            \n            <div style={{height:\"50px\"}}></div>\n            <p> {user && user.get('ethAdress')} </p>\n            <div className='score-section d-flex justify-content-center'><Button href={\"http://localhost:3000/user/\"+user1.username}> Get back to my profile </Button> </div></div>\n            </Container>\n            )}\n        else if (quizStep === \"Ongoing\"){\n            if(testAlreadyBegun==false){\n                return(\n                    <Container className=\"\">\n                <Row>\n                <div style={{height:\"50px\"}}></div>\n                </Row>\n                <QuizHeader time={time} launchTimer={launchTimer} user={user1} test={test} finishQuiz={finishQuiz}/>\n                <Row>\n                <div style={{height:\"40px\"}}></div>\n                </Row>\n                <Row>\n                <Col sm={6}>\n                    <div className='question-section'>\n                        <div className='question-count'>\n                            <span>Question {currentQuestion+1}</span>/{questions && questions.length}\n                        </div>\n                        <div className='question-text'>{questions && questions[currentQuestion].question}</div>\n                        <img style={{borderRadius:\"10px\"}} src={questions && questions[currentQuestion].questionImage} />\n                    </div>\n                </Col>\n                <Col sm={6}>\n                    <div className='answer-section'>\n                    <ListGroup activeKey={quizState}>\n                    {questions && questions[currentQuestion].answersOptions.map((answersOptions)=>(\n                        <ListGroup.Item eventKey={answersOptions.answerText} className=\"quizButton\" \n                        onMouseEnter={() => setQuizState(answersOptions.answerText)}\n                        onMouseLeave={() => setQuizState()}\n                        onClick={() =>handlseAnswerButtonClick(answersOptions.isCorrect)}>{answersOptions.answerText}\n                        \n                        </ListGroup.Item>\n                        ))}\n                    </ListGroup>\n                    </div>\n                </Col>\n                </Row>\n                </Container>)\n                }\n            else{\n                return(\n                    <Container className=\"\">\n                <Row>\n                <div style={{height:\"50px\"}}></div>\n                </Row>\n                <QuizHeader time={time} launchTimer={launchTimer} user={user1} test={test} finishQuiz={finishQuiz}/>\n                <Row>\n                <div style={{height:\"200px\"}}></div>\n                </Row>\n                <Row>\n                <div className=\"d-flex align-items-center justify-content-center h5\" style={{color:\"red\"}}> You have already started the test once, you can't do it again </div>\n                </Row>\n                </Container>\n                )\n            }\n        }\n\n        else if (quizStep === \"Start\"){\n\n            if(testAlreadyBegun==false){\n            return(\n                <Container>\n                <div style={{height:\"50px\"}}></div>\n                <QuizHeader user={user1} test={test}/>\n                <div style={{height:\"50px\"}}></div>\n                <QuizStart test={test} quizStep={changeQuizStep}/>\n                </Container>\n                )}\n            else{\n                return(\n                    <Container className=\"\">\n                <Row>\n                <div style={{height:\"50px\"}}></div>\n                </Row>\n                <QuizHeader time={time} launchTimer={launchTimer} user={user1} test={test} finishQuiz={finishQuiz}/>\n                <Row>\n                <div style={{height:\"200px\"}}></div>\n                </Row>\n                <Row>\n                <div className=\"d-flex align-items-center justify-content-center h5\" style={{color:\"red\"}}> You have already started the test once, you can't do it again </div>\n                </Row>\n                </Container>\n                )\n            }\n        }\n        \n    })()}\n</div>)\n}\nexport default Quiz;","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {useState,useEffect} from 'react'\nimport {useMoralis} from \"react-moralis\";\nimport {Button, Form, Container, Col, Row, Badge} from 'react-bootstrap'\nimport '../styles/styles.css'\nimport axios from \"axios\";\nimport CodeMirror from '@uiw/react-codemirror';\nimport { javascript } from '@codemirror/lang-javascript';\nimport { python } from  '@codemirror/lang-python';\nimport { propTypes } from 'react-bootstrap/esm/Image';\n\n\nconst CodeAndRun = (props)=>{\n    useEffect(() => {\n        changeExtension()\n      }, []);\n    const [code, setCode] = useState(props.codingQuestions.initialCode);\n    const [testCases,setTestCases]= useState([]);\n    const [finishTest, setfinishTest] = useState(false);\n\n    const [extensions,setExtensions] = useState([python({ python: true })])\n    const changeExtension = ()=>{\n        if(props.language== \"Python\"){\n            setExtensions([python({ python: true })])\n        }\n        else if(props.language== \"Javascript\"){\n            setExtensions([javascript({ jsx: true })])\n        }\n    \n    }\n    const submitCode= ()=>{\n        console.log(code)\n        const codeToSend = {\n            code:code\n        }\n        axios.post(\"/pythonCodingTest/\", null, {params:codeToSend})\n                .then(function (response) {\n                //handle success\n                console.log(response.data);\n\n                setTestCases([response.data.passOrFail])\n                })\n                .catch(function (response) {\n                //handle error\n                console.log(response);\n                });\n\n        setfinishTest(true)\n    }\n\n    \n    return <div className='answer-section code-area'>\n            <h1> Type your code </h1>\n            <div style={{height:\"20px\"}}></div>\n            <CodeMirror\n        value={code}\n        height=\"300px\"\n        extensions={extensions}\n        options={{keyMap:\"sublime\"}}\n        onChange={(editor,change)=> {setCode(editor)\n        }}\n        />\n            <div style={{height:\"20px\"}}></div>\n            <Button onClick={submitCode} className= \"w-25\"> Run Tests </Button>\n            <div style={{height:\"20px\"}}></div>\n            <span id=\"results\"> {testCases.map((testCase,i) =>{\n                return <div key={i}> \n                    {testCase == 'True' ? \"✅ Test passed with success\" : \"❌ The tests failed\"}\n                </div>\n            })}</span>\n            <div style={{height:\"20px\"}}></div>\n\n            {finishTest && <Button className= \"w-50\" style={{backgroundColor:\"#27BC49\", borderColor:\"#27BC49\"}} onClick={() => props.finishQuiz(testCases)} > Validate test </Button>}\n\n            <div style={{height:\"50px\"}}></div>\n    </div>\n}\n\nexport default CodeAndRun","import React from 'react';\nimport '../styles/styles.css'\nimport {useMoralis} from 'react-moralis'\nimport  { Navigate } from 'react-router-dom'\nimport ProfileBar from '../components/ProfileBar';\nimport CandidatesList from '../components/CandidatesList';\nimport { useParams } from \"react-router-dom\";\nimport {useState, useEffect} from 'react'\nimport {Button, Form, Container, Col, Row, Badge, Nav, ListGroup, Link} from 'react-bootstrap'\nimport axios from \"axios\";\nimport '../styles/quiz.css'\nimport QuizHeader from '../components/QuizHeader';\nimport QuizStart from '../components/QuizStart';\nimport CodeAndRun from '../components/CodeAndRun';\n\nfunction CodingTest() {\n    const code= \"const a =0;\"\n    const addTests = () =>{\n        const bodyFormData = {\n            testId:quizID,\n            testScore:score,\n            userId:userID\n        }\n        axios.post(\"/addTestsResultsToUser\", null, {params:bodyFormData})\n                .then(function (response) {\n                //handle success\n                })\n                .catch(function (response) {\n                //handle error\n                });\n        }\n\n    const {quizID, userID} = useParams();\n\tconst [user, setUser] = useState([{}])\n    const [test, setTest] = useState([{}])\n    const [codingQuestionList, setcodingQuestionList] = useState([{}])\n\tuseEffect(() => {\n        getUser()\n        getTest()\n        getCodingQuestions()\n      }, []);\n\n    const getUser = () => {\n        axios.get(\"/getUserByID\", {params: {id:userID}}).then((response)=>{\n            setUser(response.data)\n            return response.data\n        })\n        .catch(error => console.error(error))\n    }\n\n    const getTest = () => {\n        axios.get(\"/getTestByID\", {params: {id:quizID}}).then((response)=>{\n            setTest(response.data)\n            return response.data\n        })\n        .catch(error => console.error(error))\n    }\n\n    const getCodingQuestions = () => {\n        axios.get(\"/getCodeTestQuestions\", {params: {id:quizID}}).then((response)=>{\n            setcodingQuestionList(response.data)\n            return response.data\n        })\n        .catch(error => console.error(error))\n    }\n\n    const questions = codingQuestionList\n\tconst [currentQuestion, setCurrentQuestion] = useState(0);\n\tconst [quizStep, setQuizStep ] = useState(\"Start\");\n\tconst [score,setScore] = useState(0);\n\n    const [quizState,setQuizState]= useState()\n    const changeQuizStep = () => {\n\n        setQuizStep(\"Ongoing\")\n        setlaunchTimer(true)\n        console.log(launchTimer)\n        setTime(test.durationInMinutes)\n    }\n\n    const finishQuiz = (testCases) =>{\n        var nbTestValidated = 0\n        for (let i = 0; i < testCases.length; i++) {\n            console.log(testCases[i]==\"True\")\n            if (testCases[i]==\"True\"){\n                    nbTestValidated = nbTestValidated+1\n                }\n        }\n\n        if (testCases.length != 0){\n            const newScore = (nbTestValidated/testCases.length)*100\n            setScore(newScore)\n        }\n        console.log(\"Nb Tests Valids = \"+nbTestValidated)\n        \n        setQuizStep(\"End\")\n        addTests()\n        // add score to user\n    }\n\n    const [time,setTime] =useState()\n    const [launchTimer,setlaunchTimer]= useState(false)\n    const codingQuestions = codingQuestionList && codingQuestionList[0]\n    //Test check\n    const [codeContent,setCodeContent]=useState()\n    return (<div className='app'>\n\n    \n    \n\n    {(()=> {\n\n        if(quizStep === \"End\"){\n            return(\n                <Container >\n            <div style={{height:\"200px\"}}></div>\n            <div className='score-section d-flex justify-content-center'>Congratulation, you have a score of {score} %</div>\n            <div style={{height:\"50px\"}}></div>\n            <div className='score-section d-flex justify-content-center'><Button href={\"http://localhost:3000/user/\"+user.username}> Get back to my profile </Button> </div>\n            </Container>\n            )}\n        else if (quizStep === \"Ongoing\"){\n            return(\n                <Container className=\"\">\n            <Row>\n            <div style={{height:\"50px\"}}></div>\n            </Row>\n            <QuizHeader time={time} launchTimer={launchTimer} user={user} test={test} finishQuiz={finishQuiz}/>\n            <Row>\n            <div style={{height:\"40px\"}}></div>\n            </Row> \n            <Row>\n            <Col sm={5} >\n                {/* Question */}\n                \n                <div className='question-count question'>\n                        <span>Question {currentQuestion+1}</span>\n                </div>\n                <div> {codingQuestions.questionText}</div>\n            </Col>\n            <Col sm={1} ></Col>\n            <Col sm={6}  style={{borderLeft:\"1px solid\", borderColor:\"#DDDDDD\"}}>\n                <CodeAndRun finishQuiz={finishQuiz} codingQuestions={codingQuestions} language={test.language} /> \n            </Col>\n            </Row>\n            </Container>)\n        }\n\n        else if (quizStep === \"Start\"){\n            return(\n                <Container>\n                <div style={{height:\"50px\"}}></div>\n                <QuizHeader user={user} test={test}/>\n                <div style={{height:\"50px\"}}></div>\n                <QuizStart test={test} quizStep={changeQuizStep}/>\n                </Container>\n                )\n        }\n        \n    })()}\n</div>)\n}\nexport default CodingTest;","import {Outlet} from \"react-router-dom\";\nimport Layout from \"./pages/Layout\";\nimport Home from \"./pages/Home\";\nimport Candidates from \"./pages/Candidates\";\nimport Settings from \"./pages/Settings\";\nimport Tests from \"./pages/Tests\";\nimport User from \"./pages/User\";\nimport Quiz from \"./pages/Quiz\"\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport { ChakraProvider } from '@chakra-ui/react'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport { ConstructorFragment } from \"@ethersproject/abi\";\nimport CodingTest from \"./pages/CodingTest\";\n\nfunction App() {\n  return (\n    <ChakraProvider>\n      <BrowserRouter>\n      <Routes>\n          <Route path=\"/\" element={<Layout />}>\n          <Route index element={<Home />} />\n          <Route path=\"/candidates\" element={<Candidates />} />\n          <Route path=\"/settings\" element={<Settings />} />\n          <Route path=\"/tests\" element={<Tests />} />\n          <Route path=\"/user/:handle\" element={<User />} />\n          <Route path=\"/quiz/:quizID/user/:userID\" element={<Quiz />} />\n          <Route path=\"/codingTest/:quizID/user/:userID\" element={<CodingTest />} />\n        </Route>\n      </Routes>\n      </BrowserRouter>\n    </ChakraProvider>\n  );\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { MoralisProvider } from 'react-moralis';\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './custom.scss';\nimport { StyledEngineProvider } from '@mui/material/styles';\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\nroot.render(\n \n      <StyledEngineProvider injectFirst>\n       <MoralisProvider appId=\"1M3DRwK4iIFbrcX9BiKCUWPMcRfuUIEp7BTSKgf3\" serverUrl=\"https://awkbi0rsarvu.usemoralis.com:2053/server\">\n      <App />\n      </MoralisProvider>\n      </StyledEngineProvider>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}