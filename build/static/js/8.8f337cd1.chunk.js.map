{"version":3,"sources":["../../src/baseSolanaAdapter.ts","../node_modules/bs58/index.js","../node_modules/base-x/src/index.js","../../src/utils.ts","../../src/phantomAdapter.ts"],"names":["BaseSolanaAdapter","provider","chainConfig","_this$chainConfig","chainId","WalletLoginError","notConnectedError","chainNamespace","status","ADAPTER_STATUS","CONNECTED","request","method","accounts","length","existingToken","getSavedToken","name","checkIfTokenIsExpired","idToken","payload","domain","window","location","origin","uri","href","address","parseInt","version","nonce","Math","random","toString","slice","issuedAt","Date","toISOString","signChallenge","challenge","encodedMessage","TextEncoder","encode","params","message","display","signedMessage","verifySignedChallenge","bs58","sessionTime","saveToken","disconnectionError","clearToken","BaseAdapter","basex","require","module","exports","ALPHABET","TypeError","BASE_MAP","Uint8Array","j","i","x","charAt","xc","charCodeAt","BASE","LEADER","FACTOR","log","iFACTOR","decodeUnsafe","source","psz","zeroes","size","b256","carry","it3","Error","it4","vch","ArrayBuffer","isView","buffer","byteOffset","byteLength","Array","isArray","from","pbegin","pend","b58","it1","it2","str","repeat","decode","string","poll","callback","interval","count","Promise","resolve","reject","setTimeout","done","then","res","catch","err","detectProvider","options","solana","_window$solana","isPhantom","_window$solana2","PhantomAdapter","constructor","_defineProperty","WALLET_ADAPTERS","PHANTOM","ADAPTER_NAMESPACES","SOLANA","CHAIN_NAMESPACES","ADAPTER_CATEGORY","EXTERNAL","NOT_READY","_wallet","off","_onDisconnect","rehydrated","READY","emit","ADAPTER_EVENTS","DISCONNECTED","isConnected","phantomProvider","_","setAdapterSettings","getChainConfig","WalletInitializationError","notInstalled","PhantomInjectedProvider","config","debug","autoConnect","connect","error","_this","CONNECTING","adapter","handleDisconnect","_handleDisconnect","connectWithProvider","once","windowClosed","args","arguments","apply","reason","Web3AuthError","connectionError","publicKey","on","ERRORED","cleanup","_this$_wallet2","disconnect","isWalletConnected","injectedProvider","setupProvider","reconnected"],"mappings":"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","file":"static/js/8.8f337cd1.chunk.js","sourcesContent":[null,"const basex = require('base-x')\nconst ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (source instanceof Uint8Array) {\n    } else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength)\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source)\n    }\n    if (!(source instanceof Uint8Array)) { throw new TypeError('Expected Uint8Array') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return new Uint8Array() }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = new Uint8Array(zeroes + (size - it4))\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n",null,null],"sourceRoot":""}